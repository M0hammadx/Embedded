
AVR_SDK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003fbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010a  00800060  00003fbe  00004052  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  0080016a  0080016a  0000415c  2**0
                  ALLOC
  3 .stab         00002ba4  00000000  00000000  0000415c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002a82  00000000  00000000  00006d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  00009782  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000251  00000000  00000000  00009982  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002e4d  00000000  00000000  00009bd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000016ca  00000000  00000000  0000ca20  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000015dc  00000000  00000000  0000e0ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  0000f6c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000039d  00000000  00000000  0000f8e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b0b  00000000  00000000  0000fc85  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00011790  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
       2:	00 00       	nop
       4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
       6:	00 00       	nop
       8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
       a:	00 00       	nop
       c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
       e:	00 00       	nop
      10:	0c 94 b7 12 	jmp	0x256e	; 0x256e <__vector_4>
      14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
      16:	00 00       	nop
      18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
      1e:	00 00       	nop
      20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
      22:	00 00       	nop
      24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 8e 12 	jmp	0x251c	; 0x251c <__vector_10>
      2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
      2e:	00 00       	nop
      30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 89 10 	jmp	0x2112	; 0x2112 <__vector_13>
      38:	0c 94 bd 10 	jmp	0x217a	; 0x217a <__vector_14>
      3c:	0c 94 a3 10 	jmp	0x2146	; 0x2146 <__vector_15>
      40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
      42:	00 00       	nop
      44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
      46:	00 00       	nop
      48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
      4e:	00 00       	nop
      50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
	...

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee eb       	ldi	r30, 0xBE	; 190
      68:	ff e3       	ldi	r31, 0x3F	; 63
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 38       	cpi	r26, 0x81	; 129
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <main>
      8a:	0c 94 dd 1f 	jmp	0x3fba	; 0x3fba <_exit>

0000008e <__bad_interrupt>:
      8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <__fixunssfsi>:
      90:	ef 92       	push	r14
      92:	ff 92       	push	r15
      94:	0f 93       	push	r16
      96:	1f 93       	push	r17
      98:	7b 01       	movw	r14, r22
      9a:	8c 01       	movw	r16, r24
      9c:	20 e0       	ldi	r18, 0x00	; 0
      9e:	30 e0       	ldi	r19, 0x00	; 0
      a0:	40 e0       	ldi	r20, 0x00	; 0
      a2:	5f e4       	ldi	r21, 0x4F	; 79
      a4:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <__gesf2>
      a8:	88 23       	and	r24, r24
      aa:	8c f0       	brlt	.+34     	; 0xce <__fixunssfsi+0x3e>
      ac:	c8 01       	movw	r24, r16
      ae:	b7 01       	movw	r22, r14
      b0:	20 e0       	ldi	r18, 0x00	; 0
      b2:	30 e0       	ldi	r19, 0x00	; 0
      b4:	40 e0       	ldi	r20, 0x00	; 0
      b6:	5f e4       	ldi	r21, 0x4F	; 79
      b8:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__subsf3>
      bc:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fixsfsi>
      c0:	9b 01       	movw	r18, r22
      c2:	ac 01       	movw	r20, r24
      c4:	20 50       	subi	r18, 0x00	; 0
      c6:	30 40       	sbci	r19, 0x00	; 0
      c8:	40 40       	sbci	r20, 0x00	; 0
      ca:	50 48       	sbci	r21, 0x80	; 128
      cc:	06 c0       	rjmp	.+12     	; 0xda <__fixunssfsi+0x4a>
      ce:	c8 01       	movw	r24, r16
      d0:	b7 01       	movw	r22, r14
      d2:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fixsfsi>
      d6:	9b 01       	movw	r18, r22
      d8:	ac 01       	movw	r20, r24
      da:	b9 01       	movw	r22, r18
      dc:	ca 01       	movw	r24, r20
      de:	1f 91       	pop	r17
      e0:	0f 91       	pop	r16
      e2:	ff 90       	pop	r15
      e4:	ef 90       	pop	r14
      e6:	08 95       	ret

000000e8 <__floatdisf>:
      e8:	a4 e0       	ldi	r26, 0x04	; 4
      ea:	b0 e0       	ldi	r27, 0x00	; 0
      ec:	ea e7       	ldi	r30, 0x7A	; 122
      ee:	f0 e0       	ldi	r31, 0x00	; 0
      f0:	0c 94 36 1f 	jmp	0x3e6c	; 0x3e6c <__prologue_saves__+0x4>
      f4:	49 01       	movw	r8, r18
      f6:	5a 01       	movw	r10, r20
      f8:	6b 01       	movw	r12, r22
      fa:	7c 01       	movw	r14, r24
      fc:	d5 01       	movw	r26, r10
      fe:	c4 01       	movw	r24, r8
     100:	9c 01       	movw	r18, r24
     102:	ad 01       	movw	r20, r26
     104:	55 0f       	add	r21, r21
     106:	22 0b       	sbc	r18, r18
     108:	32 2f       	mov	r19, r18
     10a:	a9 01       	movw	r20, r18
     10c:	88 15       	cp	r24, r8
     10e:	99 f4       	brne	.+38     	; 0x136 <__floatdisf+0x4e>
     110:	99 15       	cp	r25, r9
     112:	89 f4       	brne	.+34     	; 0x136 <__floatdisf+0x4e>
     114:	aa 15       	cp	r26, r10
     116:	79 f4       	brne	.+30     	; 0x136 <__floatdisf+0x4e>
     118:	bb 15       	cp	r27, r11
     11a:	69 f4       	brne	.+26     	; 0x136 <__floatdisf+0x4e>
     11c:	2c 15       	cp	r18, r12
     11e:	59 f4       	brne	.+22     	; 0x136 <__floatdisf+0x4e>
     120:	2d 15       	cp	r18, r13
     122:	49 f4       	brne	.+18     	; 0x136 <__floatdisf+0x4e>
     124:	2e 15       	cp	r18, r14
     126:	39 f4       	brne	.+14     	; 0x136 <__floatdisf+0x4e>
     128:	2f 15       	cp	r18, r15
     12a:	29 f4       	brne	.+10     	; 0x136 <__floatdisf+0x4e>
     12c:	c5 01       	movw	r24, r10
     12e:	b4 01       	movw	r22, r8
     130:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__floatsisf>
     134:	d0 c0       	rjmp	.+416    	; 0x2d6 <__floatdisf+0x1ee>
     136:	94 01       	movw	r18, r8
     138:	a5 01       	movw	r20, r10
     13a:	b6 01       	movw	r22, r12
     13c:	c7 01       	movw	r24, r14
     13e:	00 e2       	ldi	r16, 0x20	; 32
     140:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__ashrdi3>
     144:	c9 01       	movw	r24, r18
     146:	a4 2f       	mov	r26, r20
     148:	b5 2f       	mov	r27, r21
     14a:	b7 ff       	sbrs	r27, 7
     14c:	07 c0       	rjmp	.+14     	; 0x15c <__floatdisf+0x74>
     14e:	b0 95       	com	r27
     150:	a0 95       	com	r26
     152:	90 95       	com	r25
     154:	81 95       	neg	r24
     156:	9f 4f       	sbci	r25, 0xFF	; 255
     158:	af 4f       	sbci	r26, 0xFF	; 255
     15a:	bf 4f       	sbci	r27, 0xFF	; 255
     15c:	80 30       	cpi	r24, 0x00	; 0
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	92 07       	cpc	r25, r18
     162:	21 e0       	ldi	r18, 0x01	; 1
     164:	a2 07       	cpc	r26, r18
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	b2 07       	cpc	r27, r18
     16a:	80 f4       	brcc	.+32     	; 0x18c <__floatdisf+0xa4>
     16c:	8f 3f       	cpi	r24, 0xFF	; 255
     16e:	91 05       	cpc	r25, r1
     170:	a1 05       	cpc	r26, r1
     172:	b1 05       	cpc	r27, r1
     174:	31 f0       	breq	.+12     	; 0x182 <__floatdisf+0x9a>
     176:	28 f0       	brcs	.+10     	; 0x182 <__floatdisf+0x9a>
     178:	28 e0       	ldi	r18, 0x08	; 8
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	40 e0       	ldi	r20, 0x00	; 0
     17e:	50 e0       	ldi	r21, 0x00	; 0
     180:	16 c0       	rjmp	.+44     	; 0x1ae <__floatdisf+0xc6>
     182:	20 e0       	ldi	r18, 0x00	; 0
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	40 e0       	ldi	r20, 0x00	; 0
     188:	50 e0       	ldi	r21, 0x00	; 0
     18a:	11 c0       	rjmp	.+34     	; 0x1ae <__floatdisf+0xc6>
     18c:	80 30       	cpi	r24, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	93 07       	cpc	r25, r19
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	a3 07       	cpc	r26, r19
     196:	31 e0       	ldi	r19, 0x01	; 1
     198:	b3 07       	cpc	r27, r19
     19a:	28 f0       	brcs	.+10     	; 0x1a6 <__floatdisf+0xbe>
     19c:	28 e1       	ldi	r18, 0x18	; 24
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	50 e0       	ldi	r21, 0x00	; 0
     1a4:	04 c0       	rjmp	.+8      	; 0x1ae <__floatdisf+0xc6>
     1a6:	20 e1       	ldi	r18, 0x10	; 16
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	60 e2       	ldi	r22, 0x20	; 32
     1b0:	46 2e       	mov	r4, r22
     1b2:	51 2c       	mov	r5, r1
     1b4:	61 2c       	mov	r6, r1
     1b6:	71 2c       	mov	r7, r1
     1b8:	42 1a       	sub	r4, r18
     1ba:	53 0a       	sbc	r5, r19
     1bc:	64 0a       	sbc	r6, r20
     1be:	75 0a       	sbc	r7, r21
     1c0:	04 c0       	rjmp	.+8      	; 0x1ca <__floatdisf+0xe2>
     1c2:	b6 95       	lsr	r27
     1c4:	a7 95       	ror	r26
     1c6:	97 95       	ror	r25
     1c8:	87 95       	ror	r24
     1ca:	2a 95       	dec	r18
     1cc:	d2 f7       	brpl	.-12     	; 0x1c2 <__floatdisf+0xda>
     1ce:	fc 01       	movw	r30, r24
     1d0:	e8 59       	subi	r30, 0x98	; 152
     1d2:	ff 4f       	sbci	r31, 0xFF	; 255
     1d4:	80 81       	ld	r24, Z
     1d6:	48 1a       	sub	r4, r24
     1d8:	51 08       	sbc	r5, r1
     1da:	61 08       	sbc	r6, r1
     1dc:	71 08       	sbc	r7, r1
     1de:	41 14       	cp	r4, r1
     1e0:	51 04       	cpc	r5, r1
     1e2:	61 04       	cpc	r6, r1
     1e4:	71 04       	cpc	r7, r1
     1e6:	29 f4       	brne	.+10     	; 0x1f2 <__floatdisf+0x10a>
     1e8:	60 e0       	ldi	r22, 0x00	; 0
     1ea:	70 e0       	ldi	r23, 0x00	; 0
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	9f ed       	ldi	r25, 0xDF	; 223
     1f0:	72 c0       	rjmp	.+228    	; 0x2d6 <__floatdisf+0x1ee>
     1f2:	81 e2       	ldi	r24, 0x21	; 33
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	a0 e0       	ldi	r26, 0x00	; 0
     1f8:	b0 e0       	ldi	r27, 0x00	; 0
     1fa:	84 19       	sub	r24, r4
     1fc:	95 09       	sbc	r25, r5
     1fe:	a6 09       	sbc	r26, r6
     200:	b7 09       	sbc	r27, r7
     202:	89 83       	std	Y+1, r24	; 0x01
     204:	9a 83       	std	Y+2, r25	; 0x02
     206:	ab 83       	std	Y+3, r26	; 0x03
     208:	bc 83       	std	Y+4, r27	; 0x04
     20a:	19 81       	ldd	r17, Y+1	; 0x01
     20c:	94 01       	movw	r18, r8
     20e:	a5 01       	movw	r20, r10
     210:	b6 01       	movw	r22, r12
     212:	c7 01       	movw	r24, r14
     214:	01 2f       	mov	r16, r17
     216:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__ashrdi3>
     21a:	c9 01       	movw	r24, r18
     21c:	da 01       	movw	r26, r20
     21e:	2c 01       	movw	r4, r24
     220:	3d 01       	movw	r6, r26
     222:	80 e2       	ldi	r24, 0x20	; 32
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	a9 81       	ldd	r26, Y+1	; 0x01
     228:	ba 81       	ldd	r27, Y+2	; 0x02
     22a:	8a 1b       	sub	r24, r26
     22c:	9b 0b       	sbc	r25, r27
     22e:	a5 01       	movw	r20, r10
     230:	94 01       	movw	r18, r8
     232:	04 c0       	rjmp	.+8      	; 0x23c <__floatdisf+0x154>
     234:	22 0f       	add	r18, r18
     236:	33 1f       	adc	r19, r19
     238:	44 1f       	adc	r20, r20
     23a:	55 1f       	adc	r21, r21
     23c:	8a 95       	dec	r24
     23e:	d2 f7       	brpl	.-12     	; 0x234 <__floatdisf+0x14c>
     240:	21 15       	cp	r18, r1
     242:	31 05       	cpc	r19, r1
     244:	41 05       	cpc	r20, r1
     246:	51 05       	cpc	r21, r1
     248:	41 f0       	breq	.+16     	; 0x25a <__floatdisf+0x172>
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	a0 e0       	ldi	r26, 0x00	; 0
     250:	b0 e0       	ldi	r27, 0x00	; 0
     252:	48 2a       	or	r4, r24
     254:	59 2a       	or	r5, r25
     256:	6a 2a       	or	r6, r26
     258:	7b 2a       	or	r7, r27
     25a:	29 81       	ldd	r18, Y+1	; 0x01
     25c:	3a 81       	ldd	r19, Y+2	; 0x02
     25e:	4b 81       	ldd	r20, Y+3	; 0x03
     260:	5c 81       	ldd	r21, Y+4	; 0x04
     262:	20 32       	cpi	r18, 0x20	; 32
     264:	31 05       	cpc	r19, r1
     266:	41 05       	cpc	r20, r1
     268:	51 05       	cpc	r21, r1
     26a:	59 f4       	brne	.+22     	; 0x282 <__floatdisf+0x19a>
     26c:	0f 2e       	mov	r0, r31
     26e:	f0 e0       	ldi	r31, 0x00	; 0
     270:	cf 2e       	mov	r12, r31
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	df 2e       	mov	r13, r31
     276:	f0 e8       	ldi	r31, 0x80	; 128
     278:	ef 2e       	mov	r14, r31
     27a:	ff e4       	ldi	r31, 0x4F	; 79
     27c:	ff 2e       	mov	r15, r31
     27e:	f0 2d       	mov	r31, r0
     280:	22 c0       	rjmp	.+68     	; 0x2c6 <__floatdisf+0x1de>
     282:	89 81       	ldd	r24, Y+1	; 0x01
     284:	9a 81       	ldd	r25, Y+2	; 0x02
     286:	ab 81       	ldd	r26, Y+3	; 0x03
     288:	bc 81       	ldd	r27, Y+4	; 0x04
     28a:	4f 97       	sbiw	r24, 0x1f	; 31
     28c:	a1 05       	cpc	r26, r1
     28e:	b1 05       	cpc	r27, r1
     290:	59 f4       	brne	.+22     	; 0x2a8 <__floatdisf+0x1c0>
     292:	0f 2e       	mov	r0, r31
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	cf 2e       	mov	r12, r31
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	df 2e       	mov	r13, r31
     29c:	f0 e0       	ldi	r31, 0x00	; 0
     29e:	ef 2e       	mov	r14, r31
     2a0:	ff e4       	ldi	r31, 0x4F	; 79
     2a2:	ff 2e       	mov	r15, r31
     2a4:	f0 2d       	mov	r31, r0
     2a6:	0f c0       	rjmp	.+30     	; 0x2c6 <__floatdisf+0x1de>
     2a8:	61 e0       	ldi	r22, 0x01	; 1
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	04 c0       	rjmp	.+8      	; 0x2ba <__floatdisf+0x1d2>
     2b2:	66 0f       	add	r22, r22
     2b4:	77 1f       	adc	r23, r23
     2b6:	88 1f       	adc	r24, r24
     2b8:	99 1f       	adc	r25, r25
     2ba:	1a 95       	dec	r17
     2bc:	d2 f7       	brpl	.-12     	; 0x2b2 <__floatdisf+0x1ca>
     2be:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__floatsisf>
     2c2:	6b 01       	movw	r12, r22
     2c4:	7c 01       	movw	r14, r24
     2c6:	c3 01       	movw	r24, r6
     2c8:	b2 01       	movw	r22, r4
     2ca:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__floatsisf>
     2ce:	a7 01       	movw	r20, r14
     2d0:	96 01       	movw	r18, r12
     2d2:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
     2d6:	24 96       	adiw	r28, 0x04	; 4
     2d8:	e0 e1       	ldi	r30, 0x10	; 16
     2da:	0c 94 52 1f 	jmp	0x3ea4	; 0x3ea4 <__epilogue_restores__+0x4>

000002de <__divdi3>:
     2de:	a2 e7       	ldi	r26, 0x72	; 114
     2e0:	b0 e0       	ldi	r27, 0x00	; 0
     2e2:	e5 e7       	ldi	r30, 0x75	; 117
     2e4:	f1 e0       	ldi	r31, 0x01	; 1
     2e6:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__prologue_saves__>
     2ea:	98 2e       	mov	r9, r24
     2ec:	89 2e       	mov	r8, r25
     2ee:	71 2e       	mov	r7, r17
     2f0:	88 e0       	ldi	r24, 0x08	; 8
     2f2:	fe 01       	movw	r30, r28
     2f4:	31 96       	adiw	r30, 0x01	; 1
     2f6:	df 01       	movw	r26, r30
     2f8:	68 2e       	mov	r6, r24
     2fa:	1d 92       	st	X+, r1
     2fc:	6a 94       	dec	r6
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <__divdi3+0x1c>
     300:	29 83       	std	Y+1, r18	; 0x01
     302:	3a 83       	std	Y+2, r19	; 0x02
     304:	4b 83       	std	Y+3, r20	; 0x03
     306:	5c 83       	std	Y+4, r21	; 0x04
     308:	6d 83       	std	Y+5, r22	; 0x05
     30a:	7e 83       	std	Y+6, r23	; 0x06
     30c:	9f 82       	std	Y+7, r9	; 0x07
     30e:	98 87       	std	Y+8, r25	; 0x08
     310:	fe 01       	movw	r30, r28
     312:	39 96       	adiw	r30, 0x09	; 9
     314:	df 01       	movw	r26, r30
     316:	1d 92       	st	X+, r1
     318:	8a 95       	dec	r24
     31a:	e9 f7       	brne	.-6      	; 0x316 <__divdi3+0x38>
     31c:	a9 86       	std	Y+9, r10	; 0x09
     31e:	ba 86       	std	Y+10, r11	; 0x0a
     320:	cb 86       	std	Y+11, r12	; 0x0b
     322:	dc 86       	std	Y+12, r13	; 0x0c
     324:	ed 86       	std	Y+13, r14	; 0x0d
     326:	fe 86       	std	Y+14, r15	; 0x0e
     328:	0f 87       	std	Y+15, r16	; 0x0f
     32a:	18 8b       	std	Y+16, r17	; 0x10
     32c:	8d 81       	ldd	r24, Y+5	; 0x05
     32e:	9e 81       	ldd	r25, Y+6	; 0x06
     330:	af 81       	ldd	r26, Y+7	; 0x07
     332:	b8 85       	ldd	r27, Y+8	; 0x08
     334:	b7 fd       	sbrc	r27, 7
     336:	07 c0       	rjmp	.+14     	; 0x346 <__divdi3+0x68>
     338:	e1 96       	adiw	r28, 0x31	; 49
     33a:	1c ae       	std	Y+60, r1	; 0x3c
     33c:	1d ae       	std	Y+61, r1	; 0x3d
     33e:	1e ae       	std	Y+62, r1	; 0x3e
     340:	1f ae       	std	Y+63, r1	; 0x3f
     342:	e1 97       	sbiw	r28, 0x31	; 49
     344:	64 c0       	rjmp	.+200    	; 0x40e <__divdi3+0x130>
     346:	21 95       	neg	r18
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	12 16       	cp	r1, r18
     34c:	08 f0       	brcs	.+2      	; 0x350 <__divdi3+0x72>
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	31 95       	neg	r19
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	13 16       	cp	r1, r19
     356:	08 f0       	brcs	.+2      	; 0x35a <__divdi3+0x7c>
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	b3 2f       	mov	r27, r19
     35c:	b8 1b       	sub	r27, r24
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	3b 17       	cp	r19, r27
     362:	08 f0       	brcs	.+2      	; 0x366 <__divdi3+0x88>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	98 2b       	or	r25, r24
     368:	41 95       	neg	r20
     36a:	31 e0       	ldi	r19, 0x01	; 1
     36c:	14 16       	cp	r1, r20
     36e:	08 f0       	brcs	.+2      	; 0x372 <__divdi3+0x94>
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	a4 2f       	mov	r26, r20
     374:	a9 1b       	sub	r26, r25
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	4a 17       	cp	r20, r26
     37a:	08 f0       	brcs	.+2      	; 0x37e <__divdi3+0xa0>
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	38 2b       	or	r19, r24
     380:	51 95       	neg	r21
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	15 16       	cp	r1, r21
     386:	08 f0       	brcs	.+2      	; 0x38a <__divdi3+0xac>
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	f5 2f       	mov	r31, r21
     38c:	f3 1b       	sub	r31, r19
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	5f 17       	cp	r21, r31
     392:	08 f0       	brcs	.+2      	; 0x396 <__divdi3+0xb8>
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	98 2b       	or	r25, r24
     398:	61 95       	neg	r22
     39a:	31 e0       	ldi	r19, 0x01	; 1
     39c:	16 16       	cp	r1, r22
     39e:	08 f0       	brcs	.+2      	; 0x3a2 <__divdi3+0xc4>
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	e6 2f       	mov	r30, r22
     3a4:	e9 1b       	sub	r30, r25
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	6e 17       	cp	r22, r30
     3aa:	08 f0       	brcs	.+2      	; 0x3ae <__divdi3+0xd0>
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	38 2b       	or	r19, r24
     3b0:	71 95       	neg	r23
     3b2:	41 e0       	ldi	r20, 0x01	; 1
     3b4:	17 16       	cp	r1, r23
     3b6:	08 f0       	brcs	.+2      	; 0x3ba <__divdi3+0xdc>
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	57 2f       	mov	r21, r23
     3bc:	53 1b       	sub	r21, r19
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	75 17       	cp	r23, r21
     3c2:	08 f0       	brcs	.+2      	; 0x3c6 <__divdi3+0xe8>
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	48 2b       	or	r20, r24
     3c8:	89 2d       	mov	r24, r9
     3ca:	81 95       	neg	r24
     3cc:	91 e0       	ldi	r25, 0x01	; 1
     3ce:	18 16       	cp	r1, r24
     3d0:	08 f0       	brcs	.+2      	; 0x3d4 <__divdi3+0xf6>
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	68 2e       	mov	r6, r24
     3d6:	64 1a       	sub	r6, r20
     3d8:	46 2d       	mov	r20, r6
     3da:	31 e0       	ldi	r19, 0x01	; 1
     3dc:	86 15       	cp	r24, r6
     3de:	08 f0       	brcs	.+2      	; 0x3e2 <__divdi3+0x104>
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	93 2b       	or	r25, r19
     3e4:	88 2d       	mov	r24, r8
     3e6:	81 95       	neg	r24
     3e8:	89 1b       	sub	r24, r25
     3ea:	29 83       	std	Y+1, r18	; 0x01
     3ec:	ba 83       	std	Y+2, r27	; 0x02
     3ee:	ab 83       	std	Y+3, r26	; 0x03
     3f0:	fc 83       	std	Y+4, r31	; 0x04
     3f2:	ed 83       	std	Y+5, r30	; 0x05
     3f4:	5e 83       	std	Y+6, r21	; 0x06
     3f6:	4f 83       	std	Y+7, r20	; 0x07
     3f8:	88 87       	std	Y+8, r24	; 0x08
     3fa:	2f ef       	ldi	r18, 0xFF	; 255
     3fc:	3f ef       	ldi	r19, 0xFF	; 255
     3fe:	4f ef       	ldi	r20, 0xFF	; 255
     400:	5f ef       	ldi	r21, 0xFF	; 255
     402:	e1 96       	adiw	r28, 0x31	; 49
     404:	2c af       	std	Y+60, r18	; 0x3c
     406:	3d af       	std	Y+61, r19	; 0x3d
     408:	4e af       	std	Y+62, r20	; 0x3e
     40a:	5f af       	std	Y+63, r21	; 0x3f
     40c:	e1 97       	sbiw	r28, 0x31	; 49
     40e:	8d 85       	ldd	r24, Y+13	; 0x0d
     410:	9e 85       	ldd	r25, Y+14	; 0x0e
     412:	af 85       	ldd	r26, Y+15	; 0x0f
     414:	b8 89       	ldd	r27, Y+16	; 0x10
     416:	b7 ff       	sbrs	r27, 7
     418:	6a c0       	rjmp	.+212    	; 0x4ee <__divdi3+0x210>
     41a:	e1 96       	adiw	r28, 0x31	; 49
     41c:	4c ad       	ldd	r20, Y+60	; 0x3c
     41e:	5d ad       	ldd	r21, Y+61	; 0x3d
     420:	6e ad       	ldd	r22, Y+62	; 0x3e
     422:	7f ad       	ldd	r23, Y+63	; 0x3f
     424:	e1 97       	sbiw	r28, 0x31	; 49
     426:	40 95       	com	r20
     428:	50 95       	com	r21
     42a:	60 95       	com	r22
     42c:	70 95       	com	r23
     42e:	e1 96       	adiw	r28, 0x31	; 49
     430:	4c af       	std	Y+60, r20	; 0x3c
     432:	5d af       	std	Y+61, r21	; 0x3d
     434:	6e af       	std	Y+62, r22	; 0x3e
     436:	7f af       	std	Y+63, r23	; 0x3f
     438:	e1 97       	sbiw	r28, 0x31	; 49
     43a:	a1 94       	neg	r10
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	1a 14       	cp	r1, r10
     440:	08 f0       	brcs	.+2      	; 0x444 <__divdi3+0x166>
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	b1 94       	neg	r11
     446:	91 e0       	ldi	r25, 0x01	; 1
     448:	1b 14       	cp	r1, r11
     44a:	08 f0       	brcs	.+2      	; 0x44e <__divdi3+0x170>
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	6b 2d       	mov	r22, r11
     450:	68 1b       	sub	r22, r24
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	b6 16       	cp	r11, r22
     456:	08 f0       	brcs	.+2      	; 0x45a <__divdi3+0x17c>
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	98 2b       	or	r25, r24
     45c:	c1 94       	neg	r12
     45e:	21 e0       	ldi	r18, 0x01	; 1
     460:	1c 14       	cp	r1, r12
     462:	08 f0       	brcs	.+2      	; 0x466 <__divdi3+0x188>
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	5c 2d       	mov	r21, r12
     468:	59 1b       	sub	r21, r25
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	c5 16       	cp	r12, r21
     46e:	08 f0       	brcs	.+2      	; 0x472 <__divdi3+0x194>
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	28 2b       	or	r18, r24
     474:	d1 94       	neg	r13
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	1d 14       	cp	r1, r13
     47a:	08 f0       	brcs	.+2      	; 0x47e <__divdi3+0x1a0>
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	4d 2d       	mov	r20, r13
     480:	42 1b       	sub	r20, r18
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	d4 16       	cp	r13, r20
     486:	08 f0       	brcs	.+2      	; 0x48a <__divdi3+0x1ac>
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	98 2b       	or	r25, r24
     48c:	e1 94       	neg	r14
     48e:	21 e0       	ldi	r18, 0x01	; 1
     490:	1e 14       	cp	r1, r14
     492:	08 f0       	brcs	.+2      	; 0x496 <__divdi3+0x1b8>
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	3e 2d       	mov	r19, r14
     498:	39 1b       	sub	r19, r25
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	e3 16       	cp	r14, r19
     49e:	08 f0       	brcs	.+2      	; 0x4a2 <__divdi3+0x1c4>
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	28 2b       	or	r18, r24
     4a4:	f1 94       	neg	r15
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	1f 14       	cp	r1, r15
     4aa:	08 f0       	brcs	.+2      	; 0x4ae <__divdi3+0x1d0>
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	7f 2d       	mov	r23, r15
     4b0:	72 1b       	sub	r23, r18
     4b2:	27 2f       	mov	r18, r23
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	f7 16       	cp	r15, r23
     4b8:	08 f0       	brcs	.+2      	; 0x4bc <__divdi3+0x1de>
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	98 2b       	or	r25, r24
     4be:	01 95       	neg	r16
     4c0:	11 e0       	ldi	r17, 0x01	; 1
     4c2:	10 16       	cp	r1, r16
     4c4:	08 f0       	brcs	.+2      	; 0x4c8 <__divdi3+0x1ea>
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	80 2f       	mov	r24, r16
     4ca:	89 1b       	sub	r24, r25
     4cc:	98 2f       	mov	r25, r24
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	09 17       	cp	r16, r25
     4d2:	08 f0       	brcs	.+2      	; 0x4d6 <__divdi3+0x1f8>
     4d4:	80 e0       	ldi	r24, 0x00	; 0
     4d6:	18 2b       	or	r17, r24
     4d8:	87 2d       	mov	r24, r7
     4da:	81 95       	neg	r24
     4dc:	81 1b       	sub	r24, r17
     4de:	a9 86       	std	Y+9, r10	; 0x09
     4e0:	6a 87       	std	Y+10, r22	; 0x0a
     4e2:	5b 87       	std	Y+11, r21	; 0x0b
     4e4:	4c 87       	std	Y+12, r20	; 0x0c
     4e6:	3d 87       	std	Y+13, r19	; 0x0d
     4e8:	2e 87       	std	Y+14, r18	; 0x0e
     4ea:	9f 87       	std	Y+15, r25	; 0x0f
     4ec:	88 8b       	std	Y+16, r24	; 0x10
     4ee:	99 81       	ldd	r25, Y+1	; 0x01
     4f0:	2a 81       	ldd	r18, Y+2	; 0x02
     4f2:	3b 81       	ldd	r19, Y+3	; 0x03
     4f4:	4c 81       	ldd	r20, Y+4	; 0x04
     4f6:	5d 81       	ldd	r21, Y+5	; 0x05
     4f8:	6e 81       	ldd	r22, Y+6	; 0x06
     4fa:	7f 81       	ldd	r23, Y+7	; 0x07
     4fc:	a8 85       	ldd	r26, Y+8	; 0x08
     4fe:	b9 85       	ldd	r27, Y+9	; 0x09
     500:	1a 85       	ldd	r17, Y+10	; 0x0a
     502:	0b 85       	ldd	r16, Y+11	; 0x0b
     504:	fc 84       	ldd	r15, Y+12	; 0x0c
     506:	ed 84       	ldd	r14, Y+13	; 0x0d
     508:	de 84       	ldd	r13, Y+14	; 0x0e
     50a:	cf 84       	ldd	r12, Y+15	; 0x0f
     50c:	b8 88       	ldd	r11, Y+16	; 0x10
     50e:	88 e0       	ldi	r24, 0x08	; 8
     510:	e1 e1       	ldi	r30, 0x11	; 17
     512:	8e 2e       	mov	r8, r30
     514:	91 2c       	mov	r9, r1
     516:	8c 0e       	add	r8, r28
     518:	9d 1e       	adc	r9, r29
     51a:	f4 01       	movw	r30, r8
     51c:	68 2e       	mov	r6, r24
     51e:	11 92       	st	Z+, r1
     520:	6a 94       	dec	r6
     522:	e9 f7       	brne	.-6      	; 0x51e <__divdi3+0x240>
     524:	99 8b       	std	Y+17, r25	; 0x11
     526:	2a 8b       	std	Y+18, r18	; 0x12
     528:	3b 8b       	std	Y+19, r19	; 0x13
     52a:	4c 8b       	std	Y+20, r20	; 0x14
     52c:	5d 8b       	std	Y+21, r21	; 0x15
     52e:	6e 8b       	std	Y+22, r22	; 0x16
     530:	7f 8b       	std	Y+23, r23	; 0x17
     532:	a8 8f       	std	Y+24, r26	; 0x18
     534:	9e 01       	movw	r18, r28
     536:	27 5e       	subi	r18, 0xE7	; 231
     538:	3f 4f       	sbci	r19, 0xFF	; 255
     53a:	f9 01       	movw	r30, r18
     53c:	11 92       	st	Z+, r1
     53e:	8a 95       	dec	r24
     540:	e9 f7       	brne	.-6      	; 0x53c <__divdi3+0x25e>
     542:	b9 8f       	std	Y+25, r27	; 0x19
     544:	1a 8f       	std	Y+26, r17	; 0x1a
     546:	0b 8f       	std	Y+27, r16	; 0x1b
     548:	fc 8e       	std	Y+28, r15	; 0x1c
     54a:	ed 8e       	std	Y+29, r14	; 0x1d
     54c:	de 8e       	std	Y+30, r13	; 0x1e
     54e:	cf 8e       	std	Y+31, r12	; 0x1f
     550:	b8 a2       	std	Y+32, r11	; 0x20
     552:	29 8c       	ldd	r2, Y+25	; 0x19
     554:	3a 8c       	ldd	r3, Y+26	; 0x1a
     556:	4b 8c       	ldd	r4, Y+27	; 0x1b
     558:	5c 8c       	ldd	r5, Y+28	; 0x1c
     55a:	ed 8c       	ldd	r14, Y+29	; 0x1d
     55c:	fe 8c       	ldd	r15, Y+30	; 0x1e
     55e:	0f 8d       	ldd	r16, Y+31	; 0x1f
     560:	18 a1       	ldd	r17, Y+32	; 0x20
     562:	69 88       	ldd	r6, Y+17	; 0x11
     564:	7a 88       	ldd	r7, Y+18	; 0x12
     566:	8b 88       	ldd	r8, Y+19	; 0x13
     568:	9c 88       	ldd	r9, Y+20	; 0x14
     56a:	21 96       	adiw	r28, 0x01	; 1
     56c:	6c ae       	std	Y+60, r6	; 0x3c
     56e:	7d ae       	std	Y+61, r7	; 0x3d
     570:	8e ae       	std	Y+62, r8	; 0x3e
     572:	9f ae       	std	Y+63, r9	; 0x3f
     574:	21 97       	sbiw	r28, 0x01	; 1
     576:	6d 88       	ldd	r6, Y+21	; 0x15
     578:	7e 88       	ldd	r7, Y+22	; 0x16
     57a:	8f 88       	ldd	r8, Y+23	; 0x17
     57c:	98 8c       	ldd	r9, Y+24	; 0x18
     57e:	e1 14       	cp	r14, r1
     580:	f1 04       	cpc	r15, r1
     582:	01 05       	cpc	r16, r1
     584:	11 05       	cpc	r17, r1
     586:	09 f0       	breq	.+2      	; 0x58a <__divdi3+0x2ac>
     588:	d9 c3       	rjmp	.+1970   	; 0xd3c <__stack+0x4dd>
     58a:	62 14       	cp	r6, r2
     58c:	73 04       	cpc	r7, r3
     58e:	84 04       	cpc	r8, r4
     590:	95 04       	cpc	r9, r5
     592:	08 f0       	brcs	.+2      	; 0x596 <__divdi3+0x2b8>
     594:	57 c1       	rjmp	.+686    	; 0x844 <__divdi3+0x566>
     596:	00 e0       	ldi	r16, 0x00	; 0
     598:	20 16       	cp	r2, r16
     59a:	00 e0       	ldi	r16, 0x00	; 0
     59c:	30 06       	cpc	r3, r16
     59e:	01 e0       	ldi	r16, 0x01	; 1
     5a0:	40 06       	cpc	r4, r16
     5a2:	00 e0       	ldi	r16, 0x00	; 0
     5a4:	50 06       	cpc	r5, r16
     5a6:	88 f4       	brcc	.+34     	; 0x5ca <__divdi3+0x2ec>
     5a8:	1f ef       	ldi	r17, 0xFF	; 255
     5aa:	21 16       	cp	r2, r17
     5ac:	31 04       	cpc	r3, r1
     5ae:	41 04       	cpc	r4, r1
     5b0:	51 04       	cpc	r5, r1
     5b2:	39 f0       	breq	.+14     	; 0x5c2 <__divdi3+0x2e4>
     5b4:	30 f0       	brcs	.+12     	; 0x5c2 <__divdi3+0x2e4>
     5b6:	48 e0       	ldi	r20, 0x08	; 8
     5b8:	e4 2e       	mov	r14, r20
     5ba:	f1 2c       	mov	r15, r1
     5bc:	01 2d       	mov	r16, r1
     5be:	11 2d       	mov	r17, r1
     5c0:	18 c0       	rjmp	.+48     	; 0x5f2 <__divdi3+0x314>
     5c2:	ee 24       	eor	r14, r14
     5c4:	ff 24       	eor	r15, r15
     5c6:	87 01       	movw	r16, r14
     5c8:	14 c0       	rjmp	.+40     	; 0x5f2 <__divdi3+0x314>
     5ca:	20 e0       	ldi	r18, 0x00	; 0
     5cc:	22 16       	cp	r2, r18
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	32 06       	cpc	r3, r18
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	42 06       	cpc	r4, r18
     5d6:	21 e0       	ldi	r18, 0x01	; 1
     5d8:	52 06       	cpc	r5, r18
     5da:	30 f0       	brcs	.+12     	; 0x5e8 <__divdi3+0x30a>
     5dc:	38 e1       	ldi	r19, 0x18	; 24
     5de:	e3 2e       	mov	r14, r19
     5e0:	f1 2c       	mov	r15, r1
     5e2:	01 2d       	mov	r16, r1
     5e4:	11 2d       	mov	r17, r1
     5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <__divdi3+0x314>
     5e8:	20 e1       	ldi	r18, 0x10	; 16
     5ea:	e2 2e       	mov	r14, r18
     5ec:	f1 2c       	mov	r15, r1
     5ee:	01 2d       	mov	r16, r1
     5f0:	11 2d       	mov	r17, r1
     5f2:	d2 01       	movw	r26, r4
     5f4:	c1 01       	movw	r24, r2
     5f6:	0e 2c       	mov	r0, r14
     5f8:	04 c0       	rjmp	.+8      	; 0x602 <__divdi3+0x324>
     5fa:	b6 95       	lsr	r27
     5fc:	a7 95       	ror	r26
     5fe:	97 95       	ror	r25
     600:	87 95       	ror	r24
     602:	0a 94       	dec	r0
     604:	d2 f7       	brpl	.-12     	; 0x5fa <__divdi3+0x31c>
     606:	88 59       	subi	r24, 0x98	; 152
     608:	9f 4f       	sbci	r25, 0xFF	; 255
     60a:	dc 01       	movw	r26, r24
     60c:	2c 91       	ld	r18, X
     60e:	80 e2       	ldi	r24, 0x20	; 32
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	a0 e0       	ldi	r26, 0x00	; 0
     614:	b0 e0       	ldi	r27, 0x00	; 0
     616:	8e 19       	sub	r24, r14
     618:	9f 09       	sbc	r25, r15
     61a:	a0 0b       	sbc	r26, r16
     61c:	b1 0b       	sbc	r27, r17
     61e:	7c 01       	movw	r14, r24
     620:	8d 01       	movw	r16, r26
     622:	e2 1a       	sub	r14, r18
     624:	f1 08       	sbc	r15, r1
     626:	01 09       	sbc	r16, r1
     628:	11 09       	sbc	r17, r1
     62a:	e1 14       	cp	r14, r1
     62c:	f1 04       	cpc	r15, r1
     62e:	01 05       	cpc	r16, r1
     630:	11 05       	cpc	r17, r1
     632:	d1 f1       	breq	.+116    	; 0x6a8 <__divdi3+0x3ca>
     634:	0e 2c       	mov	r0, r14
     636:	04 c0       	rjmp	.+8      	; 0x640 <__divdi3+0x362>
     638:	22 0c       	add	r2, r2
     63a:	33 1c       	adc	r3, r3
     63c:	44 1c       	adc	r4, r4
     63e:	55 1c       	adc	r5, r5
     640:	0a 94       	dec	r0
     642:	d2 f7       	brpl	.-12     	; 0x638 <__divdi3+0x35a>
     644:	a4 01       	movw	r20, r8
     646:	93 01       	movw	r18, r6
     648:	0e 2c       	mov	r0, r14
     64a:	04 c0       	rjmp	.+8      	; 0x654 <__divdi3+0x376>
     64c:	22 0f       	add	r18, r18
     64e:	33 1f       	adc	r19, r19
     650:	44 1f       	adc	r20, r20
     652:	55 1f       	adc	r21, r21
     654:	0a 94       	dec	r0
     656:	d2 f7       	brpl	.-12     	; 0x64c <__divdi3+0x36e>
     658:	80 e2       	ldi	r24, 0x20	; 32
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	8e 19       	sub	r24, r14
     65e:	9f 09       	sbc	r25, r15
     660:	21 96       	adiw	r28, 0x01	; 1
     662:	6c ac       	ldd	r6, Y+60	; 0x3c
     664:	7d ac       	ldd	r7, Y+61	; 0x3d
     666:	8e ac       	ldd	r8, Y+62	; 0x3e
     668:	9f ac       	ldd	r9, Y+63	; 0x3f
     66a:	21 97       	sbiw	r28, 0x01	; 1
     66c:	04 c0       	rjmp	.+8      	; 0x676 <__divdi3+0x398>
     66e:	96 94       	lsr	r9
     670:	87 94       	ror	r8
     672:	77 94       	ror	r7
     674:	67 94       	ror	r6
     676:	8a 95       	dec	r24
     678:	d2 f7       	brpl	.-12     	; 0x66e <__divdi3+0x390>
     67a:	62 2a       	or	r6, r18
     67c:	73 2a       	or	r7, r19
     67e:	84 2a       	or	r8, r20
     680:	95 2a       	or	r9, r21
     682:	21 96       	adiw	r28, 0x01	; 1
     684:	ac ac       	ldd	r10, Y+60	; 0x3c
     686:	bd ac       	ldd	r11, Y+61	; 0x3d
     688:	ce ac       	ldd	r12, Y+62	; 0x3e
     68a:	df ac       	ldd	r13, Y+63	; 0x3f
     68c:	21 97       	sbiw	r28, 0x01	; 1
     68e:	04 c0       	rjmp	.+8      	; 0x698 <__divdi3+0x3ba>
     690:	aa 0c       	add	r10, r10
     692:	bb 1c       	adc	r11, r11
     694:	cc 1c       	adc	r12, r12
     696:	dd 1c       	adc	r13, r13
     698:	ea 94       	dec	r14
     69a:	d2 f7       	brpl	.-12     	; 0x690 <__divdi3+0x3b2>
     69c:	21 96       	adiw	r28, 0x01	; 1
     69e:	ac ae       	std	Y+60, r10	; 0x3c
     6a0:	bd ae       	std	Y+61, r11	; 0x3d
     6a2:	ce ae       	std	Y+62, r12	; 0x3e
     6a4:	df ae       	std	Y+63, r13	; 0x3f
     6a6:	21 97       	sbiw	r28, 0x01	; 1
     6a8:	62 01       	movw	r12, r4
     6aa:	ee 24       	eor	r14, r14
     6ac:	ff 24       	eor	r15, r15
     6ae:	29 96       	adiw	r28, 0x09	; 9
     6b0:	cc ae       	std	Y+60, r12	; 0x3c
     6b2:	dd ae       	std	Y+61, r13	; 0x3d
     6b4:	ee ae       	std	Y+62, r14	; 0x3e
     6b6:	ff ae       	std	Y+63, r15	; 0x3f
     6b8:	29 97       	sbiw	r28, 0x09	; 9
     6ba:	92 01       	movw	r18, r4
     6bc:	81 01       	movw	r16, r2
     6be:	20 70       	andi	r18, 0x00	; 0
     6c0:	30 70       	andi	r19, 0x00	; 0
     6c2:	2d 96       	adiw	r28, 0x0d	; 13
     6c4:	0c af       	std	Y+60, r16	; 0x3c
     6c6:	1d af       	std	Y+61, r17	; 0x3d
     6c8:	2e af       	std	Y+62, r18	; 0x3e
     6ca:	3f af       	std	Y+63, r19	; 0x3f
     6cc:	2d 97       	sbiw	r28, 0x0d	; 13
     6ce:	c4 01       	movw	r24, r8
     6d0:	b3 01       	movw	r22, r6
     6d2:	a7 01       	movw	r20, r14
     6d4:	96 01       	movw	r18, r12
     6d6:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     6da:	7b 01       	movw	r14, r22
     6dc:	8c 01       	movw	r16, r24
     6de:	c4 01       	movw	r24, r8
     6e0:	b3 01       	movw	r22, r6
     6e2:	29 96       	adiw	r28, 0x09	; 9
     6e4:	2c ad       	ldd	r18, Y+60	; 0x3c
     6e6:	3d ad       	ldd	r19, Y+61	; 0x3d
     6e8:	4e ad       	ldd	r20, Y+62	; 0x3e
     6ea:	5f ad       	ldd	r21, Y+63	; 0x3f
     6ec:	29 97       	sbiw	r28, 0x09	; 9
     6ee:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     6f2:	c9 01       	movw	r24, r18
     6f4:	da 01       	movw	r26, r20
     6f6:	3c 01       	movw	r6, r24
     6f8:	4d 01       	movw	r8, r26
     6fa:	c4 01       	movw	r24, r8
     6fc:	b3 01       	movw	r22, r6
     6fe:	2d 96       	adiw	r28, 0x0d	; 13
     700:	2c ad       	ldd	r18, Y+60	; 0x3c
     702:	3d ad       	ldd	r19, Y+61	; 0x3d
     704:	4e ad       	ldd	r20, Y+62	; 0x3e
     706:	5f ad       	ldd	r21, Y+63	; 0x3f
     708:	2d 97       	sbiw	r28, 0x0d	; 13
     70a:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     70e:	9b 01       	movw	r18, r22
     710:	ac 01       	movw	r20, r24
     712:	87 01       	movw	r16, r14
     714:	ff 24       	eor	r15, r15
     716:	ee 24       	eor	r14, r14
     718:	21 96       	adiw	r28, 0x01	; 1
     71a:	ac ac       	ldd	r10, Y+60	; 0x3c
     71c:	bd ac       	ldd	r11, Y+61	; 0x3d
     71e:	ce ac       	ldd	r12, Y+62	; 0x3e
     720:	df ac       	ldd	r13, Y+63	; 0x3f
     722:	21 97       	sbiw	r28, 0x01	; 1
     724:	c6 01       	movw	r24, r12
     726:	aa 27       	eor	r26, r26
     728:	bb 27       	eor	r27, r27
     72a:	57 01       	movw	r10, r14
     72c:	68 01       	movw	r12, r16
     72e:	a8 2a       	or	r10, r24
     730:	b9 2a       	or	r11, r25
     732:	ca 2a       	or	r12, r26
     734:	db 2a       	or	r13, r27
     736:	a2 16       	cp	r10, r18
     738:	b3 06       	cpc	r11, r19
     73a:	c4 06       	cpc	r12, r20
     73c:	d5 06       	cpc	r13, r21
     73e:	e0 f4       	brcc	.+56     	; 0x778 <__divdi3+0x49a>
     740:	08 94       	sec
     742:	61 08       	sbc	r6, r1
     744:	71 08       	sbc	r7, r1
     746:	81 08       	sbc	r8, r1
     748:	91 08       	sbc	r9, r1
     74a:	a2 0c       	add	r10, r2
     74c:	b3 1c       	adc	r11, r3
     74e:	c4 1c       	adc	r12, r4
     750:	d5 1c       	adc	r13, r5
     752:	a2 14       	cp	r10, r2
     754:	b3 04       	cpc	r11, r3
     756:	c4 04       	cpc	r12, r4
     758:	d5 04       	cpc	r13, r5
     75a:	70 f0       	brcs	.+28     	; 0x778 <__divdi3+0x49a>
     75c:	a2 16       	cp	r10, r18
     75e:	b3 06       	cpc	r11, r19
     760:	c4 06       	cpc	r12, r20
     762:	d5 06       	cpc	r13, r21
     764:	48 f4       	brcc	.+18     	; 0x778 <__divdi3+0x49a>
     766:	08 94       	sec
     768:	61 08       	sbc	r6, r1
     76a:	71 08       	sbc	r7, r1
     76c:	81 08       	sbc	r8, r1
     76e:	91 08       	sbc	r9, r1
     770:	a2 0c       	add	r10, r2
     772:	b3 1c       	adc	r11, r3
     774:	c4 1c       	adc	r12, r4
     776:	d5 1c       	adc	r13, r5
     778:	a2 1a       	sub	r10, r18
     77a:	b3 0a       	sbc	r11, r19
     77c:	c4 0a       	sbc	r12, r20
     77e:	d5 0a       	sbc	r13, r21
     780:	c6 01       	movw	r24, r12
     782:	b5 01       	movw	r22, r10
     784:	29 96       	adiw	r28, 0x09	; 9
     786:	2c ad       	ldd	r18, Y+60	; 0x3c
     788:	3d ad       	ldd	r19, Y+61	; 0x3d
     78a:	4e ad       	ldd	r20, Y+62	; 0x3e
     78c:	5f ad       	ldd	r21, Y+63	; 0x3f
     78e:	29 97       	sbiw	r28, 0x09	; 9
     790:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     794:	7b 01       	movw	r14, r22
     796:	8c 01       	movw	r16, r24
     798:	c6 01       	movw	r24, r12
     79a:	b5 01       	movw	r22, r10
     79c:	29 96       	adiw	r28, 0x09	; 9
     79e:	2c ad       	ldd	r18, Y+60	; 0x3c
     7a0:	3d ad       	ldd	r19, Y+61	; 0x3d
     7a2:	4e ad       	ldd	r20, Y+62	; 0x3e
     7a4:	5f ad       	ldd	r21, Y+63	; 0x3f
     7a6:	29 97       	sbiw	r28, 0x09	; 9
     7a8:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     7ac:	c9 01       	movw	r24, r18
     7ae:	da 01       	movw	r26, r20
     7b0:	5c 01       	movw	r10, r24
     7b2:	6d 01       	movw	r12, r26
     7b4:	c6 01       	movw	r24, r12
     7b6:	b5 01       	movw	r22, r10
     7b8:	2d 96       	adiw	r28, 0x0d	; 13
     7ba:	2c ad       	ldd	r18, Y+60	; 0x3c
     7bc:	3d ad       	ldd	r19, Y+61	; 0x3d
     7be:	4e ad       	ldd	r20, Y+62	; 0x3e
     7c0:	5f ad       	ldd	r21, Y+63	; 0x3f
     7c2:	2d 97       	sbiw	r28, 0x0d	; 13
     7c4:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     7c8:	9b 01       	movw	r18, r22
     7ca:	ac 01       	movw	r20, r24
     7cc:	87 01       	movw	r16, r14
     7ce:	ff 24       	eor	r15, r15
     7d0:	ee 24       	eor	r14, r14
     7d2:	21 96       	adiw	r28, 0x01	; 1
     7d4:	8c ad       	ldd	r24, Y+60	; 0x3c
     7d6:	9d ad       	ldd	r25, Y+61	; 0x3d
     7d8:	ae ad       	ldd	r26, Y+62	; 0x3e
     7da:	bf ad       	ldd	r27, Y+63	; 0x3f
     7dc:	21 97       	sbiw	r28, 0x01	; 1
     7de:	a0 70       	andi	r26, 0x00	; 0
     7e0:	b0 70       	andi	r27, 0x00	; 0
     7e2:	e8 2a       	or	r14, r24
     7e4:	f9 2a       	or	r15, r25
     7e6:	0a 2b       	or	r16, r26
     7e8:	1b 2b       	or	r17, r27
     7ea:	e2 16       	cp	r14, r18
     7ec:	f3 06       	cpc	r15, r19
     7ee:	04 07       	cpc	r16, r20
     7f0:	15 07       	cpc	r17, r21
     7f2:	c0 f4       	brcc	.+48     	; 0x824 <__divdi3+0x546>
     7f4:	08 94       	sec
     7f6:	a1 08       	sbc	r10, r1
     7f8:	b1 08       	sbc	r11, r1
     7fa:	c1 08       	sbc	r12, r1
     7fc:	d1 08       	sbc	r13, r1
     7fe:	e2 0c       	add	r14, r2
     800:	f3 1c       	adc	r15, r3
     802:	04 1d       	adc	r16, r4
     804:	15 1d       	adc	r17, r5
     806:	e2 14       	cp	r14, r2
     808:	f3 04       	cpc	r15, r3
     80a:	04 05       	cpc	r16, r4
     80c:	15 05       	cpc	r17, r5
     80e:	50 f0       	brcs	.+20     	; 0x824 <__divdi3+0x546>
     810:	e2 16       	cp	r14, r18
     812:	f3 06       	cpc	r15, r19
     814:	04 07       	cpc	r16, r20
     816:	15 07       	cpc	r17, r21
     818:	28 f4       	brcc	.+10     	; 0x824 <__divdi3+0x546>
     81a:	08 94       	sec
     81c:	a1 08       	sbc	r10, r1
     81e:	b1 08       	sbc	r11, r1
     820:	c1 08       	sbc	r12, r1
     822:	d1 08       	sbc	r13, r1
     824:	d3 01       	movw	r26, r6
     826:	99 27       	eor	r25, r25
     828:	88 27       	eor	r24, r24
     82a:	86 01       	movw	r16, r12
     82c:	75 01       	movw	r14, r10
     82e:	e8 2a       	or	r14, r24
     830:	f9 2a       	or	r15, r25
     832:	0a 2b       	or	r16, r26
     834:	1b 2b       	or	r17, r27
     836:	25 96       	adiw	r28, 0x05	; 5
     838:	ec ae       	std	Y+60, r14	; 0x3c
     83a:	fd ae       	std	Y+61, r15	; 0x3d
     83c:	0e af       	std	Y+62, r16	; 0x3e
     83e:	1f af       	std	Y+63, r17	; 0x3f
     840:	25 97       	sbiw	r28, 0x05	; 5
     842:	eb c4       	rjmp	.+2518   	; 0x121a <__stack+0x9bb>
     844:	21 14       	cp	r2, r1
     846:	31 04       	cpc	r3, r1
     848:	41 04       	cpc	r4, r1
     84a:	51 04       	cpc	r5, r1
     84c:	71 f4       	brne	.+28     	; 0x86a <__stack+0xb>
     84e:	61 e0       	ldi	r22, 0x01	; 1
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     862:	c9 01       	movw	r24, r18
     864:	da 01       	movw	r26, r20
     866:	1c 01       	movw	r2, r24
     868:	2d 01       	movw	r4, r26
     86a:	00 e0       	ldi	r16, 0x00	; 0
     86c:	20 16       	cp	r2, r16
     86e:	00 e0       	ldi	r16, 0x00	; 0
     870:	30 06       	cpc	r3, r16
     872:	01 e0       	ldi	r16, 0x01	; 1
     874:	40 06       	cpc	r4, r16
     876:	00 e0       	ldi	r16, 0x00	; 0
     878:	50 06       	cpc	r5, r16
     87a:	88 f4       	brcc	.+34     	; 0x89e <__stack+0x3f>
     87c:	1f ef       	ldi	r17, 0xFF	; 255
     87e:	21 16       	cp	r2, r17
     880:	31 04       	cpc	r3, r1
     882:	41 04       	cpc	r4, r1
     884:	51 04       	cpc	r5, r1
     886:	31 f0       	breq	.+12     	; 0x894 <__stack+0x35>
     888:	28 f0       	brcs	.+10     	; 0x894 <__stack+0x35>
     88a:	48 e0       	ldi	r20, 0x08	; 8
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	17 c0       	rjmp	.+46     	; 0x8c2 <__stack+0x63>
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	12 c0       	rjmp	.+36     	; 0x8c2 <__stack+0x63>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	22 16       	cp	r2, r18
     8a2:	20 e0       	ldi	r18, 0x00	; 0
     8a4:	32 06       	cpc	r3, r18
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	42 06       	cpc	r4, r18
     8aa:	21 e0       	ldi	r18, 0x01	; 1
     8ac:	52 06       	cpc	r5, r18
     8ae:	28 f0       	brcs	.+10     	; 0x8ba <__stack+0x5b>
     8b0:	48 e1       	ldi	r20, 0x18	; 24
     8b2:	50 e0       	ldi	r21, 0x00	; 0
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <__stack+0x63>
     8ba:	40 e1       	ldi	r20, 0x10	; 16
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	d2 01       	movw	r26, r4
     8c4:	c1 01       	movw	r24, r2
     8c6:	04 2e       	mov	r0, r20
     8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <__stack+0x73>
     8ca:	b6 95       	lsr	r27
     8cc:	a7 95       	ror	r26
     8ce:	97 95       	ror	r25
     8d0:	87 95       	ror	r24
     8d2:	0a 94       	dec	r0
     8d4:	d2 f7       	brpl	.-12     	; 0x8ca <__stack+0x6b>
     8d6:	88 59       	subi	r24, 0x98	; 152
     8d8:	9f 4f       	sbci	r25, 0xFF	; 255
     8da:	dc 01       	movw	r26, r24
     8dc:	2c 91       	ld	r18, X
     8de:	e0 e2       	ldi	r30, 0x20	; 32
     8e0:	ee 2e       	mov	r14, r30
     8e2:	f1 2c       	mov	r15, r1
     8e4:	01 2d       	mov	r16, r1
     8e6:	11 2d       	mov	r17, r1
     8e8:	d8 01       	movw	r26, r16
     8ea:	c7 01       	movw	r24, r14
     8ec:	84 1b       	sub	r24, r20
     8ee:	95 0b       	sbc	r25, r21
     8f0:	a6 0b       	sbc	r26, r22
     8f2:	b7 0b       	sbc	r27, r23
     8f4:	82 1b       	sub	r24, r18
     8f6:	91 09       	sbc	r25, r1
     8f8:	a1 09       	sbc	r26, r1
     8fa:	b1 09       	sbc	r27, r1
     8fc:	00 97       	sbiw	r24, 0x00	; 0
     8fe:	a1 05       	cpc	r26, r1
     900:	b1 05       	cpc	r27, r1
     902:	61 f4       	brne	.+24     	; 0x91c <__stack+0xbd>
     904:	64 01       	movw	r12, r8
     906:	53 01       	movw	r10, r6
     908:	a2 18       	sub	r10, r2
     90a:	b3 08       	sbc	r11, r3
     90c:	c4 08       	sbc	r12, r4
     90e:	d5 08       	sbc	r13, r5
     910:	31 e0       	ldi	r19, 0x01	; 1
     912:	63 2e       	mov	r6, r19
     914:	71 2c       	mov	r7, r1
     916:	81 2c       	mov	r8, r1
     918:	91 2c       	mov	r9, r1
     91a:	24 c1       	rjmp	.+584    	; 0xb64 <__stack+0x305>
     91c:	e3 96       	adiw	r28, 0x33	; 51
     91e:	8f af       	std	Y+63, r24	; 0x3f
     920:	e3 97       	sbiw	r28, 0x33	; 51
     922:	08 2e       	mov	r0, r24
     924:	04 c0       	rjmp	.+8      	; 0x92e <__stack+0xcf>
     926:	22 0c       	add	r2, r2
     928:	33 1c       	adc	r3, r3
     92a:	44 1c       	adc	r4, r4
     92c:	55 1c       	adc	r5, r5
     92e:	0a 94       	dec	r0
     930:	d2 f7       	brpl	.-12     	; 0x926 <__stack+0xc7>
     932:	ee 2d       	mov	r30, r14
     934:	e8 1b       	sub	r30, r24
     936:	64 01       	movw	r12, r8
     938:	53 01       	movw	r10, r6
     93a:	0e 2e       	mov	r0, r30
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	d6 94       	lsr	r13
     940:	c7 94       	ror	r12
     942:	b7 94       	ror	r11
     944:	a7 94       	ror	r10
     946:	0a 94       	dec	r0
     948:	d2 f7       	brpl	.-12     	; 0x93e <__stack+0xdf>
     94a:	a4 01       	movw	r20, r8
     94c:	93 01       	movw	r18, r6
     94e:	e3 96       	adiw	r28, 0x33	; 51
     950:	0f ac       	ldd	r0, Y+63	; 0x3f
     952:	e3 97       	sbiw	r28, 0x33	; 51
     954:	04 c0       	rjmp	.+8      	; 0x95e <__stack+0xff>
     956:	22 0f       	add	r18, r18
     958:	33 1f       	adc	r19, r19
     95a:	44 1f       	adc	r20, r20
     95c:	55 1f       	adc	r21, r21
     95e:	0a 94       	dec	r0
     960:	d2 f7       	brpl	.-12     	; 0x956 <__stack+0xf7>
     962:	21 96       	adiw	r28, 0x01	; 1
     964:	6c ac       	ldd	r6, Y+60	; 0x3c
     966:	7d ac       	ldd	r7, Y+61	; 0x3d
     968:	8e ac       	ldd	r8, Y+62	; 0x3e
     96a:	9f ac       	ldd	r9, Y+63	; 0x3f
     96c:	21 97       	sbiw	r28, 0x01	; 1
     96e:	0e 2e       	mov	r0, r30
     970:	04 c0       	rjmp	.+8      	; 0x97a <__stack+0x11b>
     972:	96 94       	lsr	r9
     974:	87 94       	ror	r8
     976:	77 94       	ror	r7
     978:	67 94       	ror	r6
     97a:	0a 94       	dec	r0
     97c:	d2 f7       	brpl	.-12     	; 0x972 <__stack+0x113>
     97e:	84 01       	movw	r16, r8
     980:	73 01       	movw	r14, r6
     982:	e2 2a       	or	r14, r18
     984:	f3 2a       	or	r15, r19
     986:	04 2b       	or	r16, r20
     988:	15 2b       	or	r17, r21
     98a:	e9 ae       	std	Y+57, r14	; 0x39
     98c:	fa ae       	std	Y+58, r15	; 0x3a
     98e:	0b af       	std	Y+59, r16	; 0x3b
     990:	1c af       	std	Y+60, r17	; 0x3c
     992:	32 01       	movw	r6, r4
     994:	88 24       	eor	r8, r8
     996:	99 24       	eor	r9, r9
     998:	92 01       	movw	r18, r4
     99a:	81 01       	movw	r16, r2
     99c:	20 70       	andi	r18, 0x00	; 0
     99e:	30 70       	andi	r19, 0x00	; 0
     9a0:	61 96       	adiw	r28, 0x11	; 17
     9a2:	0c af       	std	Y+60, r16	; 0x3c
     9a4:	1d af       	std	Y+61, r17	; 0x3d
     9a6:	2e af       	std	Y+62, r18	; 0x3e
     9a8:	3f af       	std	Y+63, r19	; 0x3f
     9aa:	61 97       	sbiw	r28, 0x11	; 17
     9ac:	c6 01       	movw	r24, r12
     9ae:	b5 01       	movw	r22, r10
     9b0:	a4 01       	movw	r20, r8
     9b2:	93 01       	movw	r18, r6
     9b4:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     9b8:	7b 01       	movw	r14, r22
     9ba:	8c 01       	movw	r16, r24
     9bc:	c6 01       	movw	r24, r12
     9be:	b5 01       	movw	r22, r10
     9c0:	a4 01       	movw	r20, r8
     9c2:	93 01       	movw	r18, r6
     9c4:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     9c8:	c9 01       	movw	r24, r18
     9ca:	da 01       	movw	r26, r20
     9cc:	65 96       	adiw	r28, 0x15	; 21
     9ce:	8c af       	std	Y+60, r24	; 0x3c
     9d0:	9d af       	std	Y+61, r25	; 0x3d
     9d2:	ae af       	std	Y+62, r26	; 0x3e
     9d4:	bf af       	std	Y+63, r27	; 0x3f
     9d6:	65 97       	sbiw	r28, 0x15	; 21
     9d8:	bc 01       	movw	r22, r24
     9da:	cd 01       	movw	r24, r26
     9dc:	61 96       	adiw	r28, 0x11	; 17
     9de:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e0:	3d ad       	ldd	r19, Y+61	; 0x3d
     9e2:	4e ad       	ldd	r20, Y+62	; 0x3e
     9e4:	5f ad       	ldd	r21, Y+63	; 0x3f
     9e6:	61 97       	sbiw	r28, 0x11	; 17
     9e8:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     9ec:	9b 01       	movw	r18, r22
     9ee:	ac 01       	movw	r20, r24
     9f0:	87 01       	movw	r16, r14
     9f2:	ff 24       	eor	r15, r15
     9f4:	ee 24       	eor	r14, r14
     9f6:	a9 ac       	ldd	r10, Y+57	; 0x39
     9f8:	ba ac       	ldd	r11, Y+58	; 0x3a
     9fa:	cb ac       	ldd	r12, Y+59	; 0x3b
     9fc:	dc ac       	ldd	r13, Y+60	; 0x3c
     9fe:	c6 01       	movw	r24, r12
     a00:	aa 27       	eor	r26, r26
     a02:	bb 27       	eor	r27, r27
     a04:	5c 01       	movw	r10, r24
     a06:	6d 01       	movw	r12, r26
     a08:	ae 28       	or	r10, r14
     a0a:	bf 28       	or	r11, r15
     a0c:	c0 2a       	or	r12, r16
     a0e:	d1 2a       	or	r13, r17
     a10:	a2 16       	cp	r10, r18
     a12:	b3 06       	cpc	r11, r19
     a14:	c4 06       	cpc	r12, r20
     a16:	d5 06       	cpc	r13, r21
     a18:	60 f5       	brcc	.+88     	; 0xa72 <__stack+0x213>
     a1a:	65 96       	adiw	r28, 0x15	; 21
     a1c:	6c ad       	ldd	r22, Y+60	; 0x3c
     a1e:	7d ad       	ldd	r23, Y+61	; 0x3d
     a20:	8e ad       	ldd	r24, Y+62	; 0x3e
     a22:	9f ad       	ldd	r25, Y+63	; 0x3f
     a24:	65 97       	sbiw	r28, 0x15	; 21
     a26:	61 50       	subi	r22, 0x01	; 1
     a28:	70 40       	sbci	r23, 0x00	; 0
     a2a:	80 40       	sbci	r24, 0x00	; 0
     a2c:	90 40       	sbci	r25, 0x00	; 0
     a2e:	65 96       	adiw	r28, 0x15	; 21
     a30:	6c af       	std	Y+60, r22	; 0x3c
     a32:	7d af       	std	Y+61, r23	; 0x3d
     a34:	8e af       	std	Y+62, r24	; 0x3e
     a36:	9f af       	std	Y+63, r25	; 0x3f
     a38:	65 97       	sbiw	r28, 0x15	; 21
     a3a:	a2 0c       	add	r10, r2
     a3c:	b3 1c       	adc	r11, r3
     a3e:	c4 1c       	adc	r12, r4
     a40:	d5 1c       	adc	r13, r5
     a42:	a2 14       	cp	r10, r2
     a44:	b3 04       	cpc	r11, r3
     a46:	c4 04       	cpc	r12, r4
     a48:	d5 04       	cpc	r13, r5
     a4a:	98 f0       	brcs	.+38     	; 0xa72 <__stack+0x213>
     a4c:	a2 16       	cp	r10, r18
     a4e:	b3 06       	cpc	r11, r19
     a50:	c4 06       	cpc	r12, r20
     a52:	d5 06       	cpc	r13, r21
     a54:	70 f4       	brcc	.+28     	; 0xa72 <__stack+0x213>
     a56:	61 50       	subi	r22, 0x01	; 1
     a58:	70 40       	sbci	r23, 0x00	; 0
     a5a:	80 40       	sbci	r24, 0x00	; 0
     a5c:	90 40       	sbci	r25, 0x00	; 0
     a5e:	65 96       	adiw	r28, 0x15	; 21
     a60:	6c af       	std	Y+60, r22	; 0x3c
     a62:	7d af       	std	Y+61, r23	; 0x3d
     a64:	8e af       	std	Y+62, r24	; 0x3e
     a66:	9f af       	std	Y+63, r25	; 0x3f
     a68:	65 97       	sbiw	r28, 0x15	; 21
     a6a:	a2 0c       	add	r10, r2
     a6c:	b3 1c       	adc	r11, r3
     a6e:	c4 1c       	adc	r12, r4
     a70:	d5 1c       	adc	r13, r5
     a72:	a2 1a       	sub	r10, r18
     a74:	b3 0a       	sbc	r11, r19
     a76:	c4 0a       	sbc	r12, r20
     a78:	d5 0a       	sbc	r13, r21
     a7a:	c6 01       	movw	r24, r12
     a7c:	b5 01       	movw	r22, r10
     a7e:	a4 01       	movw	r20, r8
     a80:	93 01       	movw	r18, r6
     a82:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     a86:	7b 01       	movw	r14, r22
     a88:	8c 01       	movw	r16, r24
     a8a:	c6 01       	movw	r24, r12
     a8c:	b5 01       	movw	r22, r10
     a8e:	a4 01       	movw	r20, r8
     a90:	93 01       	movw	r18, r6
     a92:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     a96:	c9 01       	movw	r24, r18
     a98:	da 01       	movw	r26, r20
     a9a:	3c 01       	movw	r6, r24
     a9c:	4d 01       	movw	r8, r26
     a9e:	c4 01       	movw	r24, r8
     aa0:	b3 01       	movw	r22, r6
     aa2:	61 96       	adiw	r28, 0x11	; 17
     aa4:	2c ad       	ldd	r18, Y+60	; 0x3c
     aa6:	3d ad       	ldd	r19, Y+61	; 0x3d
     aa8:	4e ad       	ldd	r20, Y+62	; 0x3e
     aaa:	5f ad       	ldd	r21, Y+63	; 0x3f
     aac:	61 97       	sbiw	r28, 0x11	; 17
     aae:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     ab2:	9b 01       	movw	r18, r22
     ab4:	ac 01       	movw	r20, r24
     ab6:	87 01       	movw	r16, r14
     ab8:	ff 24       	eor	r15, r15
     aba:	ee 24       	eor	r14, r14
     abc:	89 ad       	ldd	r24, Y+57	; 0x39
     abe:	9a ad       	ldd	r25, Y+58	; 0x3a
     ac0:	ab ad       	ldd	r26, Y+59	; 0x3b
     ac2:	bc ad       	ldd	r27, Y+60	; 0x3c
     ac4:	a0 70       	andi	r26, 0x00	; 0
     ac6:	b0 70       	andi	r27, 0x00	; 0
     ac8:	57 01       	movw	r10, r14
     aca:	68 01       	movw	r12, r16
     acc:	a8 2a       	or	r10, r24
     ace:	b9 2a       	or	r11, r25
     ad0:	ca 2a       	or	r12, r26
     ad2:	db 2a       	or	r13, r27
     ad4:	a2 16       	cp	r10, r18
     ad6:	b3 06       	cpc	r11, r19
     ad8:	c4 06       	cpc	r12, r20
     ada:	d5 06       	cpc	r13, r21
     adc:	e0 f4       	brcc	.+56     	; 0xb16 <__stack+0x2b7>
     ade:	08 94       	sec
     ae0:	61 08       	sbc	r6, r1
     ae2:	71 08       	sbc	r7, r1
     ae4:	81 08       	sbc	r8, r1
     ae6:	91 08       	sbc	r9, r1
     ae8:	a2 0c       	add	r10, r2
     aea:	b3 1c       	adc	r11, r3
     aec:	c4 1c       	adc	r12, r4
     aee:	d5 1c       	adc	r13, r5
     af0:	a2 14       	cp	r10, r2
     af2:	b3 04       	cpc	r11, r3
     af4:	c4 04       	cpc	r12, r4
     af6:	d5 04       	cpc	r13, r5
     af8:	70 f0       	brcs	.+28     	; 0xb16 <__stack+0x2b7>
     afa:	a2 16       	cp	r10, r18
     afc:	b3 06       	cpc	r11, r19
     afe:	c4 06       	cpc	r12, r20
     b00:	d5 06       	cpc	r13, r21
     b02:	48 f4       	brcc	.+18     	; 0xb16 <__stack+0x2b7>
     b04:	08 94       	sec
     b06:	61 08       	sbc	r6, r1
     b08:	71 08       	sbc	r7, r1
     b0a:	81 08       	sbc	r8, r1
     b0c:	91 08       	sbc	r9, r1
     b0e:	a2 0c       	add	r10, r2
     b10:	b3 1c       	adc	r11, r3
     b12:	c4 1c       	adc	r12, r4
     b14:	d5 1c       	adc	r13, r5
     b16:	21 96       	adiw	r28, 0x01	; 1
     b18:	8c ad       	ldd	r24, Y+60	; 0x3c
     b1a:	9d ad       	ldd	r25, Y+61	; 0x3d
     b1c:	ae ad       	ldd	r26, Y+62	; 0x3e
     b1e:	bf ad       	ldd	r27, Y+63	; 0x3f
     b20:	21 97       	sbiw	r28, 0x01	; 1
     b22:	e3 96       	adiw	r28, 0x33	; 51
     b24:	0f ac       	ldd	r0, Y+63	; 0x3f
     b26:	e3 97       	sbiw	r28, 0x33	; 51
     b28:	04 c0       	rjmp	.+8      	; 0xb32 <__stack+0x2d3>
     b2a:	88 0f       	add	r24, r24
     b2c:	99 1f       	adc	r25, r25
     b2e:	aa 1f       	adc	r26, r26
     b30:	bb 1f       	adc	r27, r27
     b32:	0a 94       	dec	r0
     b34:	d2 f7       	brpl	.-12     	; 0xb2a <__stack+0x2cb>
     b36:	21 96       	adiw	r28, 0x01	; 1
     b38:	8c af       	std	Y+60, r24	; 0x3c
     b3a:	9d af       	std	Y+61, r25	; 0x3d
     b3c:	ae af       	std	Y+62, r26	; 0x3e
     b3e:	bf af       	std	Y+63, r27	; 0x3f
     b40:	21 97       	sbiw	r28, 0x01	; 1
     b42:	a2 1a       	sub	r10, r18
     b44:	b3 0a       	sbc	r11, r19
     b46:	c4 0a       	sbc	r12, r20
     b48:	d5 0a       	sbc	r13, r21
     b4a:	65 96       	adiw	r28, 0x15	; 21
     b4c:	ec ac       	ldd	r14, Y+60	; 0x3c
     b4e:	fd ac       	ldd	r15, Y+61	; 0x3d
     b50:	0e ad       	ldd	r16, Y+62	; 0x3e
     b52:	1f ad       	ldd	r17, Y+63	; 0x3f
     b54:	65 97       	sbiw	r28, 0x15	; 21
     b56:	d7 01       	movw	r26, r14
     b58:	99 27       	eor	r25, r25
     b5a:	88 27       	eor	r24, r24
     b5c:	68 2a       	or	r6, r24
     b5e:	79 2a       	or	r7, r25
     b60:	8a 2a       	or	r8, r26
     b62:	9b 2a       	or	r9, r27
     b64:	82 01       	movw	r16, r4
     b66:	22 27       	eor	r18, r18
     b68:	33 27       	eor	r19, r19
     b6a:	69 96       	adiw	r28, 0x19	; 25
     b6c:	0c af       	std	Y+60, r16	; 0x3c
     b6e:	1d af       	std	Y+61, r17	; 0x3d
     b70:	2e af       	std	Y+62, r18	; 0x3e
     b72:	3f af       	std	Y+63, r19	; 0x3f
     b74:	69 97       	sbiw	r28, 0x19	; 25
     b76:	a2 01       	movw	r20, r4
     b78:	91 01       	movw	r18, r2
     b7a:	40 70       	andi	r20, 0x00	; 0
     b7c:	50 70       	andi	r21, 0x00	; 0
     b7e:	6d 96       	adiw	r28, 0x1d	; 29
     b80:	2c af       	std	Y+60, r18	; 0x3c
     b82:	3d af       	std	Y+61, r19	; 0x3d
     b84:	4e af       	std	Y+62, r20	; 0x3e
     b86:	5f af       	std	Y+63, r21	; 0x3f
     b88:	6d 97       	sbiw	r28, 0x1d	; 29
     b8a:	c6 01       	movw	r24, r12
     b8c:	b5 01       	movw	r22, r10
     b8e:	69 96       	adiw	r28, 0x19	; 25
     b90:	2c ad       	ldd	r18, Y+60	; 0x3c
     b92:	3d ad       	ldd	r19, Y+61	; 0x3d
     b94:	4e ad       	ldd	r20, Y+62	; 0x3e
     b96:	5f ad       	ldd	r21, Y+63	; 0x3f
     b98:	69 97       	sbiw	r28, 0x19	; 25
     b9a:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     b9e:	7b 01       	movw	r14, r22
     ba0:	8c 01       	movw	r16, r24
     ba2:	c6 01       	movw	r24, r12
     ba4:	b5 01       	movw	r22, r10
     ba6:	69 96       	adiw	r28, 0x19	; 25
     ba8:	2c ad       	ldd	r18, Y+60	; 0x3c
     baa:	3d ad       	ldd	r19, Y+61	; 0x3d
     bac:	4e ad       	ldd	r20, Y+62	; 0x3e
     bae:	5f ad       	ldd	r21, Y+63	; 0x3f
     bb0:	69 97       	sbiw	r28, 0x19	; 25
     bb2:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     bb6:	c9 01       	movw	r24, r18
     bb8:	da 01       	movw	r26, r20
     bba:	a1 96       	adiw	r28, 0x21	; 33
     bbc:	8c af       	std	Y+60, r24	; 0x3c
     bbe:	9d af       	std	Y+61, r25	; 0x3d
     bc0:	ae af       	std	Y+62, r26	; 0x3e
     bc2:	bf af       	std	Y+63, r27	; 0x3f
     bc4:	a1 97       	sbiw	r28, 0x21	; 33
     bc6:	bc 01       	movw	r22, r24
     bc8:	cd 01       	movw	r24, r26
     bca:	6d 96       	adiw	r28, 0x1d	; 29
     bcc:	2c ad       	ldd	r18, Y+60	; 0x3c
     bce:	3d ad       	ldd	r19, Y+61	; 0x3d
     bd0:	4e ad       	ldd	r20, Y+62	; 0x3e
     bd2:	5f ad       	ldd	r21, Y+63	; 0x3f
     bd4:	6d 97       	sbiw	r28, 0x1d	; 29
     bd6:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     bda:	9b 01       	movw	r18, r22
     bdc:	ac 01       	movw	r20, r24
     bde:	87 01       	movw	r16, r14
     be0:	ff 24       	eor	r15, r15
     be2:	ee 24       	eor	r14, r14
     be4:	21 96       	adiw	r28, 0x01	; 1
     be6:	ac ac       	ldd	r10, Y+60	; 0x3c
     be8:	bd ac       	ldd	r11, Y+61	; 0x3d
     bea:	ce ac       	ldd	r12, Y+62	; 0x3e
     bec:	df ac       	ldd	r13, Y+63	; 0x3f
     bee:	21 97       	sbiw	r28, 0x01	; 1
     bf0:	c6 01       	movw	r24, r12
     bf2:	aa 27       	eor	r26, r26
     bf4:	bb 27       	eor	r27, r27
     bf6:	57 01       	movw	r10, r14
     bf8:	68 01       	movw	r12, r16
     bfa:	a8 2a       	or	r10, r24
     bfc:	b9 2a       	or	r11, r25
     bfe:	ca 2a       	or	r12, r26
     c00:	db 2a       	or	r13, r27
     c02:	a2 16       	cp	r10, r18
     c04:	b3 06       	cpc	r11, r19
     c06:	c4 06       	cpc	r12, r20
     c08:	d5 06       	cpc	r13, r21
     c0a:	60 f5       	brcc	.+88     	; 0xc64 <__stack+0x405>
     c0c:	a1 96       	adiw	r28, 0x21	; 33
     c0e:	6c ad       	ldd	r22, Y+60	; 0x3c
     c10:	7d ad       	ldd	r23, Y+61	; 0x3d
     c12:	8e ad       	ldd	r24, Y+62	; 0x3e
     c14:	9f ad       	ldd	r25, Y+63	; 0x3f
     c16:	a1 97       	sbiw	r28, 0x21	; 33
     c18:	61 50       	subi	r22, 0x01	; 1
     c1a:	70 40       	sbci	r23, 0x00	; 0
     c1c:	80 40       	sbci	r24, 0x00	; 0
     c1e:	90 40       	sbci	r25, 0x00	; 0
     c20:	a1 96       	adiw	r28, 0x21	; 33
     c22:	6c af       	std	Y+60, r22	; 0x3c
     c24:	7d af       	std	Y+61, r23	; 0x3d
     c26:	8e af       	std	Y+62, r24	; 0x3e
     c28:	9f af       	std	Y+63, r25	; 0x3f
     c2a:	a1 97       	sbiw	r28, 0x21	; 33
     c2c:	a2 0c       	add	r10, r2
     c2e:	b3 1c       	adc	r11, r3
     c30:	c4 1c       	adc	r12, r4
     c32:	d5 1c       	adc	r13, r5
     c34:	a2 14       	cp	r10, r2
     c36:	b3 04       	cpc	r11, r3
     c38:	c4 04       	cpc	r12, r4
     c3a:	d5 04       	cpc	r13, r5
     c3c:	98 f0       	brcs	.+38     	; 0xc64 <__stack+0x405>
     c3e:	a2 16       	cp	r10, r18
     c40:	b3 06       	cpc	r11, r19
     c42:	c4 06       	cpc	r12, r20
     c44:	d5 06       	cpc	r13, r21
     c46:	70 f4       	brcc	.+28     	; 0xc64 <__stack+0x405>
     c48:	61 50       	subi	r22, 0x01	; 1
     c4a:	70 40       	sbci	r23, 0x00	; 0
     c4c:	80 40       	sbci	r24, 0x00	; 0
     c4e:	90 40       	sbci	r25, 0x00	; 0
     c50:	a1 96       	adiw	r28, 0x21	; 33
     c52:	6c af       	std	Y+60, r22	; 0x3c
     c54:	7d af       	std	Y+61, r23	; 0x3d
     c56:	8e af       	std	Y+62, r24	; 0x3e
     c58:	9f af       	std	Y+63, r25	; 0x3f
     c5a:	a1 97       	sbiw	r28, 0x21	; 33
     c5c:	a2 0c       	add	r10, r2
     c5e:	b3 1c       	adc	r11, r3
     c60:	c4 1c       	adc	r12, r4
     c62:	d5 1c       	adc	r13, r5
     c64:	a2 1a       	sub	r10, r18
     c66:	b3 0a       	sbc	r11, r19
     c68:	c4 0a       	sbc	r12, r20
     c6a:	d5 0a       	sbc	r13, r21
     c6c:	c6 01       	movw	r24, r12
     c6e:	b5 01       	movw	r22, r10
     c70:	69 96       	adiw	r28, 0x19	; 25
     c72:	2c ad       	ldd	r18, Y+60	; 0x3c
     c74:	3d ad       	ldd	r19, Y+61	; 0x3d
     c76:	4e ad       	ldd	r20, Y+62	; 0x3e
     c78:	5f ad       	ldd	r21, Y+63	; 0x3f
     c7a:	69 97       	sbiw	r28, 0x19	; 25
     c7c:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     c80:	7b 01       	movw	r14, r22
     c82:	8c 01       	movw	r16, r24
     c84:	c6 01       	movw	r24, r12
     c86:	b5 01       	movw	r22, r10
     c88:	69 96       	adiw	r28, 0x19	; 25
     c8a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c8c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c8e:	4e ad       	ldd	r20, Y+62	; 0x3e
     c90:	5f ad       	ldd	r21, Y+63	; 0x3f
     c92:	69 97       	sbiw	r28, 0x19	; 25
     c94:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     c98:	c9 01       	movw	r24, r18
     c9a:	da 01       	movw	r26, r20
     c9c:	5c 01       	movw	r10, r24
     c9e:	6d 01       	movw	r12, r26
     ca0:	c6 01       	movw	r24, r12
     ca2:	b5 01       	movw	r22, r10
     ca4:	6d 96       	adiw	r28, 0x1d	; 29
     ca6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ca8:	3d ad       	ldd	r19, Y+61	; 0x3d
     caa:	4e ad       	ldd	r20, Y+62	; 0x3e
     cac:	5f ad       	ldd	r21, Y+63	; 0x3f
     cae:	6d 97       	sbiw	r28, 0x1d	; 29
     cb0:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     cb4:	9b 01       	movw	r18, r22
     cb6:	ac 01       	movw	r20, r24
     cb8:	87 01       	movw	r16, r14
     cba:	ff 24       	eor	r15, r15
     cbc:	ee 24       	eor	r14, r14
     cbe:	21 96       	adiw	r28, 0x01	; 1
     cc0:	8c ad       	ldd	r24, Y+60	; 0x3c
     cc2:	9d ad       	ldd	r25, Y+61	; 0x3d
     cc4:	ae ad       	ldd	r26, Y+62	; 0x3e
     cc6:	bf ad       	ldd	r27, Y+63	; 0x3f
     cc8:	21 97       	sbiw	r28, 0x01	; 1
     cca:	a0 70       	andi	r26, 0x00	; 0
     ccc:	b0 70       	andi	r27, 0x00	; 0
     cce:	e8 2a       	or	r14, r24
     cd0:	f9 2a       	or	r15, r25
     cd2:	0a 2b       	or	r16, r26
     cd4:	1b 2b       	or	r17, r27
     cd6:	e2 16       	cp	r14, r18
     cd8:	f3 06       	cpc	r15, r19
     cda:	04 07       	cpc	r16, r20
     cdc:	15 07       	cpc	r17, r21
     cde:	c0 f4       	brcc	.+48     	; 0xd10 <__stack+0x4b1>
     ce0:	08 94       	sec
     ce2:	a1 08       	sbc	r10, r1
     ce4:	b1 08       	sbc	r11, r1
     ce6:	c1 08       	sbc	r12, r1
     ce8:	d1 08       	sbc	r13, r1
     cea:	e2 0c       	add	r14, r2
     cec:	f3 1c       	adc	r15, r3
     cee:	04 1d       	adc	r16, r4
     cf0:	15 1d       	adc	r17, r5
     cf2:	e2 14       	cp	r14, r2
     cf4:	f3 04       	cpc	r15, r3
     cf6:	04 05       	cpc	r16, r4
     cf8:	15 05       	cpc	r17, r5
     cfa:	50 f0       	brcs	.+20     	; 0xd10 <__stack+0x4b1>
     cfc:	e2 16       	cp	r14, r18
     cfe:	f3 06       	cpc	r15, r19
     d00:	04 07       	cpc	r16, r20
     d02:	15 07       	cpc	r17, r21
     d04:	28 f4       	brcc	.+10     	; 0xd10 <__stack+0x4b1>
     d06:	08 94       	sec
     d08:	a1 08       	sbc	r10, r1
     d0a:	b1 08       	sbc	r11, r1
     d0c:	c1 08       	sbc	r12, r1
     d0e:	d1 08       	sbc	r13, r1
     d10:	a1 96       	adiw	r28, 0x21	; 33
     d12:	ec ac       	ldd	r14, Y+60	; 0x3c
     d14:	fd ac       	ldd	r15, Y+61	; 0x3d
     d16:	0e ad       	ldd	r16, Y+62	; 0x3e
     d18:	1f ad       	ldd	r17, Y+63	; 0x3f
     d1a:	a1 97       	sbiw	r28, 0x21	; 33
     d1c:	d7 01       	movw	r26, r14
     d1e:	99 27       	eor	r25, r25
     d20:	88 27       	eor	r24, r24
     d22:	96 01       	movw	r18, r12
     d24:	85 01       	movw	r16, r10
     d26:	08 2b       	or	r16, r24
     d28:	19 2b       	or	r17, r25
     d2a:	2a 2b       	or	r18, r26
     d2c:	3b 2b       	or	r19, r27
     d2e:	25 96       	adiw	r28, 0x05	; 5
     d30:	0c af       	std	Y+60, r16	; 0x3c
     d32:	1d af       	std	Y+61, r17	; 0x3d
     d34:	2e af       	std	Y+62, r18	; 0x3e
     d36:	3f af       	std	Y+63, r19	; 0x3f
     d38:	25 97       	sbiw	r28, 0x05	; 5
     d3a:	72 c2       	rjmp	.+1252   	; 0x1220 <__stack+0x9c1>
     d3c:	6e 14       	cp	r6, r14
     d3e:	7f 04       	cpc	r7, r15
     d40:	80 06       	cpc	r8, r16
     d42:	91 06       	cpc	r9, r17
     d44:	08 f4       	brcc	.+2      	; 0xd48 <__stack+0x4e9>
     d46:	5f c2       	rjmp	.+1214   	; 0x1206 <__stack+0x9a7>
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	e2 16       	cp	r14, r18
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	f2 06       	cpc	r15, r18
     d50:	21 e0       	ldi	r18, 0x01	; 1
     d52:	02 07       	cpc	r16, r18
     d54:	20 e0       	ldi	r18, 0x00	; 0
     d56:	12 07       	cpc	r17, r18
     d58:	88 f4       	brcc	.+34     	; 0xd7c <__stack+0x51d>
     d5a:	3f ef       	ldi	r19, 0xFF	; 255
     d5c:	e3 16       	cp	r14, r19
     d5e:	f1 04       	cpc	r15, r1
     d60:	01 05       	cpc	r16, r1
     d62:	11 05       	cpc	r17, r1
     d64:	31 f0       	breq	.+12     	; 0xd72 <__stack+0x513>
     d66:	28 f0       	brcs	.+10     	; 0xd72 <__stack+0x513>
     d68:	48 e0       	ldi	r20, 0x08	; 8
     d6a:	50 e0       	ldi	r21, 0x00	; 0
     d6c:	60 e0       	ldi	r22, 0x00	; 0
     d6e:	70 e0       	ldi	r23, 0x00	; 0
     d70:	17 c0       	rjmp	.+46     	; 0xda0 <__stack+0x541>
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	12 c0       	rjmp	.+36     	; 0xda0 <__stack+0x541>
     d7c:	40 e0       	ldi	r20, 0x00	; 0
     d7e:	e4 16       	cp	r14, r20
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	f4 06       	cpc	r15, r20
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	04 07       	cpc	r16, r20
     d88:	41 e0       	ldi	r20, 0x01	; 1
     d8a:	14 07       	cpc	r17, r20
     d8c:	28 f0       	brcs	.+10     	; 0xd98 <__stack+0x539>
     d8e:	48 e1       	ldi	r20, 0x18	; 24
     d90:	50 e0       	ldi	r21, 0x00	; 0
     d92:	60 e0       	ldi	r22, 0x00	; 0
     d94:	70 e0       	ldi	r23, 0x00	; 0
     d96:	04 c0       	rjmp	.+8      	; 0xda0 <__stack+0x541>
     d98:	40 e1       	ldi	r20, 0x10	; 16
     d9a:	50 e0       	ldi	r21, 0x00	; 0
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	d8 01       	movw	r26, r16
     da2:	c7 01       	movw	r24, r14
     da4:	04 2e       	mov	r0, r20
     da6:	04 c0       	rjmp	.+8      	; 0xdb0 <__stack+0x551>
     da8:	b6 95       	lsr	r27
     daa:	a7 95       	ror	r26
     dac:	97 95       	ror	r25
     dae:	87 95       	ror	r24
     db0:	0a 94       	dec	r0
     db2:	d2 f7       	brpl	.-12     	; 0xda8 <__stack+0x549>
     db4:	88 59       	subi	r24, 0x98	; 152
     db6:	9f 4f       	sbci	r25, 0xFF	; 255
     db8:	dc 01       	movw	r26, r24
     dba:	2c 91       	ld	r18, X
     dbc:	30 e2       	ldi	r19, 0x20	; 32
     dbe:	a3 2e       	mov	r10, r19
     dc0:	b1 2c       	mov	r11, r1
     dc2:	c1 2c       	mov	r12, r1
     dc4:	d1 2c       	mov	r13, r1
     dc6:	d6 01       	movw	r26, r12
     dc8:	c5 01       	movw	r24, r10
     dca:	84 1b       	sub	r24, r20
     dcc:	95 0b       	sbc	r25, r21
     dce:	a6 0b       	sbc	r26, r22
     dd0:	b7 0b       	sbc	r27, r23
     dd2:	82 1b       	sub	r24, r18
     dd4:	91 09       	sbc	r25, r1
     dd6:	a1 09       	sbc	r26, r1
     dd8:	b1 09       	sbc	r27, r1
     dda:	00 97       	sbiw	r24, 0x00	; 0
     ddc:	a1 05       	cpc	r26, r1
     dde:	b1 05       	cpc	r27, r1
     de0:	99 f4       	brne	.+38     	; 0xe08 <__stack+0x5a9>
     de2:	e6 14       	cp	r14, r6
     de4:	f7 04       	cpc	r15, r7
     de6:	08 05       	cpc	r16, r8
     de8:	19 05       	cpc	r17, r9
     dea:	08 f4       	brcc	.+2      	; 0xdee <__stack+0x58f>
     dec:	fe c1       	rjmp	.+1020   	; 0x11ea <__stack+0x98b>
     dee:	21 96       	adiw	r28, 0x01	; 1
     df0:	6c ac       	ldd	r6, Y+60	; 0x3c
     df2:	7d ac       	ldd	r7, Y+61	; 0x3d
     df4:	8e ac       	ldd	r8, Y+62	; 0x3e
     df6:	9f ac       	ldd	r9, Y+63	; 0x3f
     df8:	21 97       	sbiw	r28, 0x01	; 1
     dfa:	62 14       	cp	r6, r2
     dfc:	73 04       	cpc	r7, r3
     dfe:	84 04       	cpc	r8, r4
     e00:	95 04       	cpc	r9, r5
     e02:	08 f0       	brcs	.+2      	; 0xe06 <__stack+0x5a7>
     e04:	f2 c1       	rjmp	.+996    	; 0x11ea <__stack+0x98b>
     e06:	ff c1       	rjmp	.+1022   	; 0x1206 <__stack+0x9a7>
     e08:	e2 96       	adiw	r28, 0x32	; 50
     e0a:	8f af       	std	Y+63, r24	; 0x3f
     e0c:	e2 97       	sbiw	r28, 0x32	; 50
     e0e:	08 2e       	mov	r0, r24
     e10:	04 c0       	rjmp	.+8      	; 0xe1a <__stack+0x5bb>
     e12:	ee 0c       	add	r14, r14
     e14:	ff 1c       	adc	r15, r15
     e16:	00 1f       	adc	r16, r16
     e18:	11 1f       	adc	r17, r17
     e1a:	0a 94       	dec	r0
     e1c:	d2 f7       	brpl	.-12     	; 0xe12 <__stack+0x5b3>
     e1e:	6a 2d       	mov	r22, r10
     e20:	68 1b       	sub	r22, r24
     e22:	d2 01       	movw	r26, r4
     e24:	c1 01       	movw	r24, r2
     e26:	06 2e       	mov	r0, r22
     e28:	04 c0       	rjmp	.+8      	; 0xe32 <__stack+0x5d3>
     e2a:	b6 95       	lsr	r27
     e2c:	a7 95       	ror	r26
     e2e:	97 95       	ror	r25
     e30:	87 95       	ror	r24
     e32:	0a 94       	dec	r0
     e34:	d2 f7       	brpl	.-12     	; 0xe2a <__stack+0x5cb>
     e36:	5c 01       	movw	r10, r24
     e38:	6d 01       	movw	r12, r26
     e3a:	ae 28       	or	r10, r14
     e3c:	bf 28       	or	r11, r15
     e3e:	c0 2a       	or	r12, r16
     e40:	d1 2a       	or	r13, r17
     e42:	ad aa       	std	Y+53, r10	; 0x35
     e44:	be aa       	std	Y+54, r11	; 0x36
     e46:	cf aa       	std	Y+55, r12	; 0x37
     e48:	d8 ae       	std	Y+56, r13	; 0x38
     e4a:	72 01       	movw	r14, r4
     e4c:	61 01       	movw	r12, r2
     e4e:	e2 96       	adiw	r28, 0x32	; 50
     e50:	0f ac       	ldd	r0, Y+63	; 0x3f
     e52:	e2 97       	sbiw	r28, 0x32	; 50
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <__stack+0x5ff>
     e56:	cc 0c       	add	r12, r12
     e58:	dd 1c       	adc	r13, r13
     e5a:	ee 1c       	adc	r14, r14
     e5c:	ff 1c       	adc	r15, r15
     e5e:	0a 94       	dec	r0
     e60:	d2 f7       	brpl	.-12     	; 0xe56 <__stack+0x5f7>
     e62:	c9 aa       	std	Y+49, r12	; 0x31
     e64:	da aa       	std	Y+50, r13	; 0x32
     e66:	eb aa       	std	Y+51, r14	; 0x33
     e68:	fc aa       	std	Y+52, r15	; 0x34
     e6a:	64 01       	movw	r12, r8
     e6c:	53 01       	movw	r10, r6
     e6e:	06 2e       	mov	r0, r22
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <__stack+0x61b>
     e72:	d6 94       	lsr	r13
     e74:	c7 94       	ror	r12
     e76:	b7 94       	ror	r11
     e78:	a7 94       	ror	r10
     e7a:	0a 94       	dec	r0
     e7c:	d2 f7       	brpl	.-12     	; 0xe72 <__stack+0x613>
     e7e:	d4 01       	movw	r26, r8
     e80:	c3 01       	movw	r24, r6
     e82:	e2 96       	adiw	r28, 0x32	; 50
     e84:	0f ac       	ldd	r0, Y+63	; 0x3f
     e86:	e2 97       	sbiw	r28, 0x32	; 50
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <__stack+0x633>
     e8a:	88 0f       	add	r24, r24
     e8c:	99 1f       	adc	r25, r25
     e8e:	aa 1f       	adc	r26, r26
     e90:	bb 1f       	adc	r27, r27
     e92:	0a 94       	dec	r0
     e94:	d2 f7       	brpl	.-12     	; 0xe8a <__stack+0x62b>
     e96:	21 96       	adiw	r28, 0x01	; 1
     e98:	ec ac       	ldd	r14, Y+60	; 0x3c
     e9a:	fd ac       	ldd	r15, Y+61	; 0x3d
     e9c:	0e ad       	ldd	r16, Y+62	; 0x3e
     e9e:	1f ad       	ldd	r17, Y+63	; 0x3f
     ea0:	21 97       	sbiw	r28, 0x01	; 1
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <__stack+0x64d>
     ea4:	16 95       	lsr	r17
     ea6:	07 95       	ror	r16
     ea8:	f7 94       	ror	r15
     eaa:	e7 94       	ror	r14
     eac:	6a 95       	dec	r22
     eae:	d2 f7       	brpl	.-12     	; 0xea4 <__stack+0x645>
     eb0:	37 01       	movw	r6, r14
     eb2:	48 01       	movw	r8, r16
     eb4:	68 2a       	or	r6, r24
     eb6:	79 2a       	or	r7, r25
     eb8:	8a 2a       	or	r8, r26
     eba:	9b 2a       	or	r9, r27
     ebc:	6d a6       	std	Y+45, r6	; 0x2d
     ebe:	7e a6       	std	Y+46, r7	; 0x2e
     ec0:	8f a6       	std	Y+47, r8	; 0x2f
     ec2:	98 aa       	std	Y+48, r9	; 0x30
     ec4:	ed a8       	ldd	r14, Y+53	; 0x35
     ec6:	fe a8       	ldd	r15, Y+54	; 0x36
     ec8:	0f a9       	ldd	r16, Y+55	; 0x37
     eca:	18 ad       	ldd	r17, Y+56	; 0x38
     ecc:	38 01       	movw	r6, r16
     ece:	88 24       	eor	r8, r8
     ed0:	99 24       	eor	r9, r9
     ed2:	98 01       	movw	r18, r16
     ed4:	87 01       	movw	r16, r14
     ed6:	20 70       	andi	r18, 0x00	; 0
     ed8:	30 70       	andi	r19, 0x00	; 0
     eda:	a5 96       	adiw	r28, 0x25	; 37
     edc:	0c af       	std	Y+60, r16	; 0x3c
     ede:	1d af       	std	Y+61, r17	; 0x3d
     ee0:	2e af       	std	Y+62, r18	; 0x3e
     ee2:	3f af       	std	Y+63, r19	; 0x3f
     ee4:	a5 97       	sbiw	r28, 0x25	; 37
     ee6:	c6 01       	movw	r24, r12
     ee8:	b5 01       	movw	r22, r10
     eea:	a4 01       	movw	r20, r8
     eec:	93 01       	movw	r18, r6
     eee:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     ef2:	7b 01       	movw	r14, r22
     ef4:	8c 01       	movw	r16, r24
     ef6:	c6 01       	movw	r24, r12
     ef8:	b5 01       	movw	r22, r10
     efa:	a4 01       	movw	r20, r8
     efc:	93 01       	movw	r18, r6
     efe:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     f02:	c9 01       	movw	r24, r18
     f04:	da 01       	movw	r26, r20
     f06:	1c 01       	movw	r2, r24
     f08:	2d 01       	movw	r4, r26
     f0a:	c2 01       	movw	r24, r4
     f0c:	b1 01       	movw	r22, r2
     f0e:	a5 96       	adiw	r28, 0x25	; 37
     f10:	2c ad       	ldd	r18, Y+60	; 0x3c
     f12:	3d ad       	ldd	r19, Y+61	; 0x3d
     f14:	4e ad       	ldd	r20, Y+62	; 0x3e
     f16:	5f ad       	ldd	r21, Y+63	; 0x3f
     f18:	a5 97       	sbiw	r28, 0x25	; 37
     f1a:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     f1e:	9b 01       	movw	r18, r22
     f20:	ac 01       	movw	r20, r24
     f22:	87 01       	movw	r16, r14
     f24:	ff 24       	eor	r15, r15
     f26:	ee 24       	eor	r14, r14
     f28:	ad a4       	ldd	r10, Y+45	; 0x2d
     f2a:	be a4       	ldd	r11, Y+46	; 0x2e
     f2c:	cf a4       	ldd	r12, Y+47	; 0x2f
     f2e:	d8 a8       	ldd	r13, Y+48	; 0x30
     f30:	c6 01       	movw	r24, r12
     f32:	aa 27       	eor	r26, r26
     f34:	bb 27       	eor	r27, r27
     f36:	57 01       	movw	r10, r14
     f38:	68 01       	movw	r12, r16
     f3a:	a8 2a       	or	r10, r24
     f3c:	b9 2a       	or	r11, r25
     f3e:	ca 2a       	or	r12, r26
     f40:	db 2a       	or	r13, r27
     f42:	a2 16       	cp	r10, r18
     f44:	b3 06       	cpc	r11, r19
     f46:	c4 06       	cpc	r12, r20
     f48:	d5 06       	cpc	r13, r21
     f4a:	00 f5       	brcc	.+64     	; 0xf8c <__stack+0x72d>
     f4c:	08 94       	sec
     f4e:	21 08       	sbc	r2, r1
     f50:	31 08       	sbc	r3, r1
     f52:	41 08       	sbc	r4, r1
     f54:	51 08       	sbc	r5, r1
     f56:	ed a8       	ldd	r14, Y+53	; 0x35
     f58:	fe a8       	ldd	r15, Y+54	; 0x36
     f5a:	0f a9       	ldd	r16, Y+55	; 0x37
     f5c:	18 ad       	ldd	r17, Y+56	; 0x38
     f5e:	ae 0c       	add	r10, r14
     f60:	bf 1c       	adc	r11, r15
     f62:	c0 1e       	adc	r12, r16
     f64:	d1 1e       	adc	r13, r17
     f66:	ae 14       	cp	r10, r14
     f68:	bf 04       	cpc	r11, r15
     f6a:	c0 06       	cpc	r12, r16
     f6c:	d1 06       	cpc	r13, r17
     f6e:	70 f0       	brcs	.+28     	; 0xf8c <__stack+0x72d>
     f70:	a2 16       	cp	r10, r18
     f72:	b3 06       	cpc	r11, r19
     f74:	c4 06       	cpc	r12, r20
     f76:	d5 06       	cpc	r13, r21
     f78:	48 f4       	brcc	.+18     	; 0xf8c <__stack+0x72d>
     f7a:	08 94       	sec
     f7c:	21 08       	sbc	r2, r1
     f7e:	31 08       	sbc	r3, r1
     f80:	41 08       	sbc	r4, r1
     f82:	51 08       	sbc	r5, r1
     f84:	ae 0c       	add	r10, r14
     f86:	bf 1c       	adc	r11, r15
     f88:	c0 1e       	adc	r12, r16
     f8a:	d1 1e       	adc	r13, r17
     f8c:	a2 1a       	sub	r10, r18
     f8e:	b3 0a       	sbc	r11, r19
     f90:	c4 0a       	sbc	r12, r20
     f92:	d5 0a       	sbc	r13, r21
     f94:	c6 01       	movw	r24, r12
     f96:	b5 01       	movw	r22, r10
     f98:	a4 01       	movw	r20, r8
     f9a:	93 01       	movw	r18, r6
     f9c:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     fa0:	7b 01       	movw	r14, r22
     fa2:	8c 01       	movw	r16, r24
     fa4:	c6 01       	movw	r24, r12
     fa6:	b5 01       	movw	r22, r10
     fa8:	a4 01       	movw	r20, r8
     faa:	93 01       	movw	r18, r6
     fac:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__udivmodsi4>
     fb0:	c9 01       	movw	r24, r18
     fb2:	da 01       	movw	r26, r20
     fb4:	3c 01       	movw	r6, r24
     fb6:	4d 01       	movw	r8, r26
     fb8:	c4 01       	movw	r24, r8
     fba:	b3 01       	movw	r22, r6
     fbc:	a5 96       	adiw	r28, 0x25	; 37
     fbe:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc0:	3d ad       	ldd	r19, Y+61	; 0x3d
     fc2:	4e ad       	ldd	r20, Y+62	; 0x3e
     fc4:	5f ad       	ldd	r21, Y+63	; 0x3f
     fc6:	a5 97       	sbiw	r28, 0x25	; 37
     fc8:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
     fcc:	9b 01       	movw	r18, r22
     fce:	ac 01       	movw	r20, r24
     fd0:	87 01       	movw	r16, r14
     fd2:	ff 24       	eor	r15, r15
     fd4:	ee 24       	eor	r14, r14
     fd6:	8d a5       	ldd	r24, Y+45	; 0x2d
     fd8:	9e a5       	ldd	r25, Y+46	; 0x2e
     fda:	af a5       	ldd	r26, Y+47	; 0x2f
     fdc:	b8 a9       	ldd	r27, Y+48	; 0x30
     fde:	a0 70       	andi	r26, 0x00	; 0
     fe0:	b0 70       	andi	r27, 0x00	; 0
     fe2:	57 01       	movw	r10, r14
     fe4:	68 01       	movw	r12, r16
     fe6:	a8 2a       	or	r10, r24
     fe8:	b9 2a       	or	r11, r25
     fea:	ca 2a       	or	r12, r26
     fec:	db 2a       	or	r13, r27
     fee:	a2 16       	cp	r10, r18
     ff0:	b3 06       	cpc	r11, r19
     ff2:	c4 06       	cpc	r12, r20
     ff4:	d5 06       	cpc	r13, r21
     ff6:	00 f5       	brcc	.+64     	; 0x1038 <__stack+0x7d9>
     ff8:	08 94       	sec
     ffa:	61 08       	sbc	r6, r1
     ffc:	71 08       	sbc	r7, r1
     ffe:	81 08       	sbc	r8, r1
    1000:	91 08       	sbc	r9, r1
    1002:	6d a9       	ldd	r22, Y+53	; 0x35
    1004:	7e a9       	ldd	r23, Y+54	; 0x36
    1006:	8f a9       	ldd	r24, Y+55	; 0x37
    1008:	98 ad       	ldd	r25, Y+56	; 0x38
    100a:	a6 0e       	add	r10, r22
    100c:	b7 1e       	adc	r11, r23
    100e:	c8 1e       	adc	r12, r24
    1010:	d9 1e       	adc	r13, r25
    1012:	a6 16       	cp	r10, r22
    1014:	b7 06       	cpc	r11, r23
    1016:	c8 06       	cpc	r12, r24
    1018:	d9 06       	cpc	r13, r25
    101a:	70 f0       	brcs	.+28     	; 0x1038 <__stack+0x7d9>
    101c:	a2 16       	cp	r10, r18
    101e:	b3 06       	cpc	r11, r19
    1020:	c4 06       	cpc	r12, r20
    1022:	d5 06       	cpc	r13, r21
    1024:	48 f4       	brcc	.+18     	; 0x1038 <__stack+0x7d9>
    1026:	08 94       	sec
    1028:	61 08       	sbc	r6, r1
    102a:	71 08       	sbc	r7, r1
    102c:	81 08       	sbc	r8, r1
    102e:	91 08       	sbc	r9, r1
    1030:	a6 0e       	add	r10, r22
    1032:	b7 1e       	adc	r11, r23
    1034:	c8 1e       	adc	r12, r24
    1036:	d9 1e       	adc	r13, r25
    1038:	d6 01       	movw	r26, r12
    103a:	c5 01       	movw	r24, r10
    103c:	82 1b       	sub	r24, r18
    103e:	93 0b       	sbc	r25, r19
    1040:	a4 0b       	sbc	r26, r20
    1042:	b5 0b       	sbc	r27, r21
    1044:	89 a7       	std	Y+41, r24	; 0x29
    1046:	9a a7       	std	Y+42, r25	; 0x2a
    1048:	ab a7       	std	Y+43, r26	; 0x2b
    104a:	bc a7       	std	Y+44, r27	; 0x2c
    104c:	d1 01       	movw	r26, r2
    104e:	99 27       	eor	r25, r25
    1050:	88 27       	eor	r24, r24
    1052:	64 01       	movw	r12, r8
    1054:	53 01       	movw	r10, r6
    1056:	a8 2a       	or	r10, r24
    1058:	b9 2a       	or	r11, r25
    105a:	ca 2a       	or	r12, r26
    105c:	db 2a       	or	r13, r27
    105e:	25 96       	adiw	r28, 0x05	; 5
    1060:	ac ae       	std	Y+60, r10	; 0x3c
    1062:	bd ae       	std	Y+61, r11	; 0x3d
    1064:	ce ae       	std	Y+62, r12	; 0x3e
    1066:	df ae       	std	Y+63, r13	; 0x3f
    1068:	25 97       	sbiw	r28, 0x05	; 5
    106a:	86 01       	movw	r16, r12
    106c:	75 01       	movw	r14, r10
    106e:	2f ef       	ldi	r18, 0xFF	; 255
    1070:	3f ef       	ldi	r19, 0xFF	; 255
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	e2 22       	and	r14, r18
    1078:	f3 22       	and	r15, r19
    107a:	04 23       	and	r16, r20
    107c:	15 23       	and	r17, r21
    107e:	a6 01       	movw	r20, r12
    1080:	66 27       	eor	r22, r22
    1082:	77 27       	eor	r23, r23
    1084:	ad 96       	adiw	r28, 0x2d	; 45
    1086:	4c af       	std	Y+60, r20	; 0x3c
    1088:	5d af       	std	Y+61, r21	; 0x3d
    108a:	6e af       	std	Y+62, r22	; 0x3e
    108c:	7f af       	std	Y+63, r23	; 0x3f
    108e:	ad 97       	sbiw	r28, 0x2d	; 45
    1090:	a9 a8       	ldd	r10, Y+49	; 0x31
    1092:	ba a8       	ldd	r11, Y+50	; 0x32
    1094:	cb a8       	ldd	r12, Y+51	; 0x33
    1096:	dc a8       	ldd	r13, Y+52	; 0x34
    1098:	6f ef       	ldi	r22, 0xFF	; 255
    109a:	7f ef       	ldi	r23, 0xFF	; 255
    109c:	80 e0       	ldi	r24, 0x00	; 0
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	a6 22       	and	r10, r22
    10a2:	b7 22       	and	r11, r23
    10a4:	c8 22       	and	r12, r24
    10a6:	d9 22       	and	r13, r25
    10a8:	89 a9       	ldd	r24, Y+49	; 0x31
    10aa:	9a a9       	ldd	r25, Y+50	; 0x32
    10ac:	ab a9       	ldd	r26, Y+51	; 0x33
    10ae:	bc a9       	ldd	r27, Y+52	; 0x34
    10b0:	1d 01       	movw	r2, r26
    10b2:	44 24       	eor	r4, r4
    10b4:	55 24       	eor	r5, r5
    10b6:	c8 01       	movw	r24, r16
    10b8:	b7 01       	movw	r22, r14
    10ba:	a6 01       	movw	r20, r12
    10bc:	95 01       	movw	r18, r10
    10be:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
    10c2:	a9 96       	adiw	r28, 0x29	; 41
    10c4:	6c af       	std	Y+60, r22	; 0x3c
    10c6:	7d af       	std	Y+61, r23	; 0x3d
    10c8:	8e af       	std	Y+62, r24	; 0x3e
    10ca:	9f af       	std	Y+63, r25	; 0x3f
    10cc:	a9 97       	sbiw	r28, 0x29	; 41
    10ce:	c8 01       	movw	r24, r16
    10d0:	b7 01       	movw	r22, r14
    10d2:	a2 01       	movw	r20, r4
    10d4:	91 01       	movw	r18, r2
    10d6:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
    10da:	3b 01       	movw	r6, r22
    10dc:	4c 01       	movw	r8, r24
    10de:	ad 96       	adiw	r28, 0x2d	; 45
    10e0:	6c ad       	ldd	r22, Y+60	; 0x3c
    10e2:	7d ad       	ldd	r23, Y+61	; 0x3d
    10e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    10e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    10e8:	ad 97       	sbiw	r28, 0x2d	; 45
    10ea:	a6 01       	movw	r20, r12
    10ec:	95 01       	movw	r18, r10
    10ee:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
    10f2:	7b 01       	movw	r14, r22
    10f4:	8c 01       	movw	r16, r24
    10f6:	ad 96       	adiw	r28, 0x2d	; 45
    10f8:	6c ad       	ldd	r22, Y+60	; 0x3c
    10fa:	7d ad       	ldd	r23, Y+61	; 0x3d
    10fc:	8e ad       	ldd	r24, Y+62	; 0x3e
    10fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    1100:	ad 97       	sbiw	r28, 0x2d	; 45
    1102:	a2 01       	movw	r20, r4
    1104:	91 01       	movw	r18, r2
    1106:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <__mulsi3>
    110a:	5b 01       	movw	r10, r22
    110c:	6c 01       	movw	r12, r24
    110e:	a8 01       	movw	r20, r16
    1110:	97 01       	movw	r18, r14
    1112:	26 0d       	add	r18, r6
    1114:	37 1d       	adc	r19, r7
    1116:	48 1d       	adc	r20, r8
    1118:	59 1d       	adc	r21, r9
    111a:	a9 96       	adiw	r28, 0x29	; 41
    111c:	6c ac       	ldd	r6, Y+60	; 0x3c
    111e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1120:	8e ac       	ldd	r8, Y+62	; 0x3e
    1122:	9f ac       	ldd	r9, Y+63	; 0x3f
    1124:	a9 97       	sbiw	r28, 0x29	; 41
    1126:	c4 01       	movw	r24, r8
    1128:	aa 27       	eor	r26, r26
    112a:	bb 27       	eor	r27, r27
    112c:	28 0f       	add	r18, r24
    112e:	39 1f       	adc	r19, r25
    1130:	4a 1f       	adc	r20, r26
    1132:	5b 1f       	adc	r21, r27
    1134:	2e 15       	cp	r18, r14
    1136:	3f 05       	cpc	r19, r15
    1138:	40 07       	cpc	r20, r16
    113a:	51 07       	cpc	r21, r17
    113c:	48 f4       	brcc	.+18     	; 0x1150 <__stack+0x8f1>
    113e:	e1 2c       	mov	r14, r1
    1140:	f1 2c       	mov	r15, r1
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	06 2f       	mov	r16, r22
    1146:	11 2d       	mov	r17, r1
    1148:	ae 0c       	add	r10, r14
    114a:	bf 1c       	adc	r11, r15
    114c:	c0 1e       	adc	r12, r16
    114e:	d1 1e       	adc	r13, r17
    1150:	ca 01       	movw	r24, r20
    1152:	aa 27       	eor	r26, r26
    1154:	bb 27       	eor	r27, r27
    1156:	bc 01       	movw	r22, r24
    1158:	cd 01       	movw	r24, r26
    115a:	6a 0d       	add	r22, r10
    115c:	7b 1d       	adc	r23, r11
    115e:	8c 1d       	adc	r24, r12
    1160:	9d 1d       	adc	r25, r13
    1162:	69 a4       	ldd	r6, Y+41	; 0x29
    1164:	7a a4       	ldd	r7, Y+42	; 0x2a
    1166:	8b a4       	ldd	r8, Y+43	; 0x2b
    1168:	9c a4       	ldd	r9, Y+44	; 0x2c
    116a:	66 16       	cp	r6, r22
    116c:	77 06       	cpc	r7, r23
    116e:	88 06       	cpc	r8, r24
    1170:	99 06       	cpc	r9, r25
    1172:	50 f1       	brcs	.+84     	; 0x11c8 <__stack+0x969>
    1174:	66 15       	cp	r22, r6
    1176:	77 05       	cpc	r23, r7
    1178:	88 05       	cpc	r24, r8
    117a:	99 05       	cpc	r25, r9
    117c:	09 f0       	breq	.+2      	; 0x1180 <__stack+0x921>
    117e:	4d c0       	rjmp	.+154    	; 0x121a <__stack+0x9bb>
    1180:	d9 01       	movw	r26, r18
    1182:	99 27       	eor	r25, r25
    1184:	88 27       	eor	r24, r24
    1186:	a9 96       	adiw	r28, 0x29	; 41
    1188:	2c ad       	ldd	r18, Y+60	; 0x3c
    118a:	3d ad       	ldd	r19, Y+61	; 0x3d
    118c:	4e ad       	ldd	r20, Y+62	; 0x3e
    118e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1190:	a9 97       	sbiw	r28, 0x29	; 41
    1192:	40 70       	andi	r20, 0x00	; 0
    1194:	50 70       	andi	r21, 0x00	; 0
    1196:	82 0f       	add	r24, r18
    1198:	93 1f       	adc	r25, r19
    119a:	a4 1f       	adc	r26, r20
    119c:	b5 1f       	adc	r27, r21
    119e:	21 96       	adiw	r28, 0x01	; 1
    11a0:	2c ad       	ldd	r18, Y+60	; 0x3c
    11a2:	3d ad       	ldd	r19, Y+61	; 0x3d
    11a4:	4e ad       	ldd	r20, Y+62	; 0x3e
    11a6:	5f ad       	ldd	r21, Y+63	; 0x3f
    11a8:	21 97       	sbiw	r28, 0x01	; 1
    11aa:	e2 96       	adiw	r28, 0x32	; 50
    11ac:	0f ac       	ldd	r0, Y+63	; 0x3f
    11ae:	e2 97       	sbiw	r28, 0x32	; 50
    11b0:	04 c0       	rjmp	.+8      	; 0x11ba <__stack+0x95b>
    11b2:	22 0f       	add	r18, r18
    11b4:	33 1f       	adc	r19, r19
    11b6:	44 1f       	adc	r20, r20
    11b8:	55 1f       	adc	r21, r21
    11ba:	0a 94       	dec	r0
    11bc:	d2 f7       	brpl	.-12     	; 0x11b2 <__stack+0x953>
    11be:	28 17       	cp	r18, r24
    11c0:	39 07       	cpc	r19, r25
    11c2:	4a 07       	cpc	r20, r26
    11c4:	5b 07       	cpc	r21, r27
    11c6:	48 f5       	brcc	.+82     	; 0x121a <__stack+0x9bb>
    11c8:	25 96       	adiw	r28, 0x05	; 5
    11ca:	0c ad       	ldd	r16, Y+60	; 0x3c
    11cc:	1d ad       	ldd	r17, Y+61	; 0x3d
    11ce:	2e ad       	ldd	r18, Y+62	; 0x3e
    11d0:	3f ad       	ldd	r19, Y+63	; 0x3f
    11d2:	25 97       	sbiw	r28, 0x05	; 5
    11d4:	01 50       	subi	r16, 0x01	; 1
    11d6:	10 40       	sbci	r17, 0x00	; 0
    11d8:	20 40       	sbci	r18, 0x00	; 0
    11da:	30 40       	sbci	r19, 0x00	; 0
    11dc:	25 96       	adiw	r28, 0x05	; 5
    11de:	0c af       	std	Y+60, r16	; 0x3c
    11e0:	1d af       	std	Y+61, r17	; 0x3d
    11e2:	2e af       	std	Y+62, r18	; 0x3e
    11e4:	3f af       	std	Y+63, r19	; 0x3f
    11e6:	25 97       	sbiw	r28, 0x05	; 5
    11e8:	18 c0       	rjmp	.+48     	; 0x121a <__stack+0x9bb>
    11ea:	66 24       	eor	r6, r6
    11ec:	77 24       	eor	r7, r7
    11ee:	43 01       	movw	r8, r6
    11f0:	21 e0       	ldi	r18, 0x01	; 1
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	40 e0       	ldi	r20, 0x00	; 0
    11f6:	50 e0       	ldi	r21, 0x00	; 0
    11f8:	25 96       	adiw	r28, 0x05	; 5
    11fa:	2c af       	std	Y+60, r18	; 0x3c
    11fc:	3d af       	std	Y+61, r19	; 0x3d
    11fe:	4e af       	std	Y+62, r20	; 0x3e
    1200:	5f af       	std	Y+63, r21	; 0x3f
    1202:	25 97       	sbiw	r28, 0x05	; 5
    1204:	0d c0       	rjmp	.+26     	; 0x1220 <__stack+0x9c1>
    1206:	66 24       	eor	r6, r6
    1208:	77 24       	eor	r7, r7
    120a:	43 01       	movw	r8, r6
    120c:	25 96       	adiw	r28, 0x05	; 5
    120e:	1c ae       	std	Y+60, r1	; 0x3c
    1210:	1d ae       	std	Y+61, r1	; 0x3d
    1212:	1e ae       	std	Y+62, r1	; 0x3e
    1214:	1f ae       	std	Y+63, r1	; 0x3f
    1216:	25 97       	sbiw	r28, 0x05	; 5
    1218:	03 c0       	rjmp	.+6      	; 0x1220 <__stack+0x9c1>
    121a:	66 24       	eor	r6, r6
    121c:	77 24       	eor	r7, r7
    121e:	43 01       	movw	r8, r6
    1220:	fe 01       	movw	r30, r28
    1222:	b1 96       	adiw	r30, 0x21	; 33
    1224:	88 e0       	ldi	r24, 0x08	; 8
    1226:	df 01       	movw	r26, r30
    1228:	1d 92       	st	X+, r1
    122a:	8a 95       	dec	r24
    122c:	e9 f7       	brne	.-6      	; 0x1228 <__stack+0x9c9>
    122e:	25 96       	adiw	r28, 0x05	; 5
    1230:	ac ac       	ldd	r10, Y+60	; 0x3c
    1232:	bd ac       	ldd	r11, Y+61	; 0x3d
    1234:	ce ac       	ldd	r12, Y+62	; 0x3e
    1236:	df ac       	ldd	r13, Y+63	; 0x3f
    1238:	25 97       	sbiw	r28, 0x05	; 5
    123a:	a9 a2       	std	Y+33, r10	; 0x21
    123c:	ba a2       	std	Y+34, r11	; 0x22
    123e:	cb a2       	std	Y+35, r12	; 0x23
    1240:	dc a2       	std	Y+36, r13	; 0x24
    1242:	6d a2       	std	Y+37, r6	; 0x25
    1244:	7e a2       	std	Y+38, r7	; 0x26
    1246:	8f a2       	std	Y+39, r8	; 0x27
    1248:	98 a6       	std	Y+40, r9	; 0x28
    124a:	22 96       	adiw	r28, 0x02	; 2
    124c:	2f ad       	ldd	r18, Y+63	; 0x3f
    124e:	22 97       	sbiw	r28, 0x02	; 2
    1250:	3a a1       	ldd	r19, Y+34	; 0x22
    1252:	4b a1       	ldd	r20, Y+35	; 0x23
    1254:	5c a1       	ldd	r21, Y+36	; 0x24
    1256:	66 2d       	mov	r22, r6
    1258:	7e a1       	ldd	r23, Y+38	; 0x26
    125a:	df a0       	ldd	r13, Y+39	; 0x27
    125c:	98 a5       	ldd	r25, Y+40	; 0x28
    125e:	e1 96       	adiw	r28, 0x31	; 49
    1260:	ec ac       	ldd	r14, Y+60	; 0x3c
    1262:	fd ac       	ldd	r15, Y+61	; 0x3d
    1264:	0e ad       	ldd	r16, Y+62	; 0x3e
    1266:	1f ad       	ldd	r17, Y+63	; 0x3f
    1268:	e1 97       	sbiw	r28, 0x31	; 49
    126a:	e1 14       	cp	r14, r1
    126c:	f1 04       	cpc	r15, r1
    126e:	01 05       	cpc	r16, r1
    1270:	11 05       	cpc	r17, r1
    1272:	09 f4       	brne	.+2      	; 0x1276 <__stack+0xa17>
    1274:	56 c0       	rjmp	.+172    	; 0x1322 <__stack+0xac3>
    1276:	21 95       	neg	r18
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	12 16       	cp	r1, r18
    127c:	08 f0       	brcs	.+2      	; 0x1280 <__stack+0xa21>
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	31 95       	neg	r19
    1282:	e1 e0       	ldi	r30, 0x01	; 1
    1284:	13 16       	cp	r1, r19
    1286:	08 f0       	brcs	.+2      	; 0x128a <__stack+0xa2b>
    1288:	e0 e0       	ldi	r30, 0x00	; 0
    128a:	93 2e       	mov	r9, r19
    128c:	98 1a       	sub	r9, r24
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	39 15       	cp	r19, r9
    1292:	08 f0       	brcs	.+2      	; 0x1296 <__stack+0xa37>
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	e8 2b       	or	r30, r24
    1298:	41 95       	neg	r20
    129a:	f1 e0       	ldi	r31, 0x01	; 1
    129c:	14 16       	cp	r1, r20
    129e:	08 f0       	brcs	.+2      	; 0x12a2 <__stack+0xa43>
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	a4 2e       	mov	r10, r20
    12a4:	ae 1a       	sub	r10, r30
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	4a 15       	cp	r20, r10
    12aa:	08 f0       	brcs	.+2      	; 0x12ae <__stack+0xa4f>
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	f8 2b       	or	r31, r24
    12b0:	51 95       	neg	r21
    12b2:	e1 e0       	ldi	r30, 0x01	; 1
    12b4:	15 16       	cp	r1, r21
    12b6:	08 f0       	brcs	.+2      	; 0x12ba <__stack+0xa5b>
    12b8:	e0 e0       	ldi	r30, 0x00	; 0
    12ba:	b5 2e       	mov	r11, r21
    12bc:	bf 1a       	sub	r11, r31
    12be:	81 e0       	ldi	r24, 0x01	; 1
    12c0:	5b 15       	cp	r21, r11
    12c2:	08 f0       	brcs	.+2      	; 0x12c6 <__stack+0xa67>
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	e8 2b       	or	r30, r24
    12c8:	61 95       	neg	r22
    12ca:	f1 e0       	ldi	r31, 0x01	; 1
    12cc:	16 16       	cp	r1, r22
    12ce:	08 f0       	brcs	.+2      	; 0x12d2 <__stack+0xa73>
    12d0:	f0 e0       	ldi	r31, 0x00	; 0
    12d2:	a6 2f       	mov	r26, r22
    12d4:	ae 1b       	sub	r26, r30
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	6a 17       	cp	r22, r26
    12da:	08 f0       	brcs	.+2      	; 0x12de <__stack+0xa7f>
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	f8 2b       	or	r31, r24
    12e0:	71 95       	neg	r23
    12e2:	e1 e0       	ldi	r30, 0x01	; 1
    12e4:	17 16       	cp	r1, r23
    12e6:	08 f0       	brcs	.+2      	; 0x12ea <__stack+0xa8b>
    12e8:	e0 e0       	ldi	r30, 0x00	; 0
    12ea:	c7 2e       	mov	r12, r23
    12ec:	cf 1a       	sub	r12, r31
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	7c 15       	cp	r23, r12
    12f2:	08 f0       	brcs	.+2      	; 0x12f6 <__stack+0xa97>
    12f4:	80 e0       	ldi	r24, 0x00	; 0
    12f6:	e8 2b       	or	r30, r24
    12f8:	8d 2d       	mov	r24, r13
    12fa:	81 95       	neg	r24
    12fc:	f1 e0       	ldi	r31, 0x01	; 1
    12fe:	18 16       	cp	r1, r24
    1300:	08 f0       	brcs	.+2      	; 0x1304 <__stack+0xaa5>
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	d8 2e       	mov	r13, r24
    1306:	de 1a       	sub	r13, r30
    1308:	e1 e0       	ldi	r30, 0x01	; 1
    130a:	8d 15       	cp	r24, r13
    130c:	08 f0       	brcs	.+2      	; 0x1310 <__stack+0xab1>
    130e:	e0 e0       	ldi	r30, 0x00	; 0
    1310:	fe 2b       	or	r31, r30
    1312:	89 2f       	mov	r24, r25
    1314:	81 95       	neg	r24
    1316:	39 2d       	mov	r19, r9
    1318:	a5 01       	movw	r20, r10
    131a:	6a 2f       	mov	r22, r26
    131c:	7c 2d       	mov	r23, r12
    131e:	98 2f       	mov	r25, r24
    1320:	9f 1b       	sub	r25, r31
    1322:	8d 2d       	mov	r24, r13
    1324:	ce 58       	subi	r28, 0x8E	; 142
    1326:	df 4f       	sbci	r29, 0xFF	; 255
    1328:	e2 e1       	ldi	r30, 0x12	; 18
    132a:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <__epilogue_restores__>

0000132e <_fpadd_parts>:
    132e:	a0 e0       	ldi	r26, 0x00	; 0
    1330:	b0 e0       	ldi	r27, 0x00	; 0
    1332:	ed e9       	ldi	r30, 0x9D	; 157
    1334:	f9 e0       	ldi	r31, 0x09	; 9
    1336:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__prologue_saves__>
    133a:	dc 01       	movw	r26, r24
    133c:	2b 01       	movw	r4, r22
    133e:	fa 01       	movw	r30, r20
    1340:	9c 91       	ld	r25, X
    1342:	92 30       	cpi	r25, 0x02	; 2
    1344:	08 f4       	brcc	.+2      	; 0x1348 <_fpadd_parts+0x1a>
    1346:	39 c1       	rjmp	.+626    	; 0x15ba <_fpadd_parts+0x28c>
    1348:	eb 01       	movw	r28, r22
    134a:	88 81       	ld	r24, Y
    134c:	82 30       	cpi	r24, 0x02	; 2
    134e:	08 f4       	brcc	.+2      	; 0x1352 <_fpadd_parts+0x24>
    1350:	33 c1       	rjmp	.+614    	; 0x15b8 <_fpadd_parts+0x28a>
    1352:	94 30       	cpi	r25, 0x04	; 4
    1354:	69 f4       	brne	.+26     	; 0x1370 <_fpadd_parts+0x42>
    1356:	84 30       	cpi	r24, 0x04	; 4
    1358:	09 f0       	breq	.+2      	; 0x135c <_fpadd_parts+0x2e>
    135a:	2f c1       	rjmp	.+606    	; 0x15ba <_fpadd_parts+0x28c>
    135c:	11 96       	adiw	r26, 0x01	; 1
    135e:	9c 91       	ld	r25, X
    1360:	11 97       	sbiw	r26, 0x01	; 1
    1362:	89 81       	ldd	r24, Y+1	; 0x01
    1364:	98 17       	cp	r25, r24
    1366:	09 f4       	brne	.+2      	; 0x136a <_fpadd_parts+0x3c>
    1368:	28 c1       	rjmp	.+592    	; 0x15ba <_fpadd_parts+0x28c>
    136a:	a0 e6       	ldi	r26, 0x60	; 96
    136c:	b0 e0       	ldi	r27, 0x00	; 0
    136e:	25 c1       	rjmp	.+586    	; 0x15ba <_fpadd_parts+0x28c>
    1370:	84 30       	cpi	r24, 0x04	; 4
    1372:	09 f4       	brne	.+2      	; 0x1376 <_fpadd_parts+0x48>
    1374:	21 c1       	rjmp	.+578    	; 0x15b8 <_fpadd_parts+0x28a>
    1376:	82 30       	cpi	r24, 0x02	; 2
    1378:	a9 f4       	brne	.+42     	; 0x13a4 <_fpadd_parts+0x76>
    137a:	92 30       	cpi	r25, 0x02	; 2
    137c:	09 f0       	breq	.+2      	; 0x1380 <_fpadd_parts+0x52>
    137e:	1d c1       	rjmp	.+570    	; 0x15ba <_fpadd_parts+0x28c>
    1380:	9a 01       	movw	r18, r20
    1382:	ad 01       	movw	r20, r26
    1384:	88 e0       	ldi	r24, 0x08	; 8
    1386:	ea 01       	movw	r28, r20
    1388:	09 90       	ld	r0, Y+
    138a:	ae 01       	movw	r20, r28
    138c:	e9 01       	movw	r28, r18
    138e:	09 92       	st	Y+, r0
    1390:	9e 01       	movw	r18, r28
    1392:	81 50       	subi	r24, 0x01	; 1
    1394:	c1 f7       	brne	.-16     	; 0x1386 <_fpadd_parts+0x58>
    1396:	e2 01       	movw	r28, r4
    1398:	89 81       	ldd	r24, Y+1	; 0x01
    139a:	11 96       	adiw	r26, 0x01	; 1
    139c:	9c 91       	ld	r25, X
    139e:	89 23       	and	r24, r25
    13a0:	81 83       	std	Z+1, r24	; 0x01
    13a2:	08 c1       	rjmp	.+528    	; 0x15b4 <_fpadd_parts+0x286>
    13a4:	92 30       	cpi	r25, 0x02	; 2
    13a6:	09 f4       	brne	.+2      	; 0x13aa <_fpadd_parts+0x7c>
    13a8:	07 c1       	rjmp	.+526    	; 0x15b8 <_fpadd_parts+0x28a>
    13aa:	12 96       	adiw	r26, 0x02	; 2
    13ac:	2d 90       	ld	r2, X+
    13ae:	3c 90       	ld	r3, X
    13b0:	13 97       	sbiw	r26, 0x03	; 3
    13b2:	eb 01       	movw	r28, r22
    13b4:	8a 81       	ldd	r24, Y+2	; 0x02
    13b6:	9b 81       	ldd	r25, Y+3	; 0x03
    13b8:	14 96       	adiw	r26, 0x04	; 4
    13ba:	ad 90       	ld	r10, X+
    13bc:	bd 90       	ld	r11, X+
    13be:	cd 90       	ld	r12, X+
    13c0:	dc 90       	ld	r13, X
    13c2:	17 97       	sbiw	r26, 0x07	; 7
    13c4:	ec 80       	ldd	r14, Y+4	; 0x04
    13c6:	fd 80       	ldd	r15, Y+5	; 0x05
    13c8:	0e 81       	ldd	r16, Y+6	; 0x06
    13ca:	1f 81       	ldd	r17, Y+7	; 0x07
    13cc:	91 01       	movw	r18, r2
    13ce:	28 1b       	sub	r18, r24
    13d0:	39 0b       	sbc	r19, r25
    13d2:	b9 01       	movw	r22, r18
    13d4:	37 ff       	sbrs	r19, 7
    13d6:	04 c0       	rjmp	.+8      	; 0x13e0 <_fpadd_parts+0xb2>
    13d8:	66 27       	eor	r22, r22
    13da:	77 27       	eor	r23, r23
    13dc:	62 1b       	sub	r22, r18
    13de:	73 0b       	sbc	r23, r19
    13e0:	60 32       	cpi	r22, 0x20	; 32
    13e2:	71 05       	cpc	r23, r1
    13e4:	0c f0       	brlt	.+2      	; 0x13e8 <_fpadd_parts+0xba>
    13e6:	61 c0       	rjmp	.+194    	; 0x14aa <_fpadd_parts+0x17c>
    13e8:	12 16       	cp	r1, r18
    13ea:	13 06       	cpc	r1, r19
    13ec:	6c f5       	brge	.+90     	; 0x1448 <_fpadd_parts+0x11a>
    13ee:	37 01       	movw	r6, r14
    13f0:	48 01       	movw	r8, r16
    13f2:	06 2e       	mov	r0, r22
    13f4:	04 c0       	rjmp	.+8      	; 0x13fe <_fpadd_parts+0xd0>
    13f6:	96 94       	lsr	r9
    13f8:	87 94       	ror	r8
    13fa:	77 94       	ror	r7
    13fc:	67 94       	ror	r6
    13fe:	0a 94       	dec	r0
    1400:	d2 f7       	brpl	.-12     	; 0x13f6 <_fpadd_parts+0xc8>
    1402:	21 e0       	ldi	r18, 0x01	; 1
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	50 e0       	ldi	r21, 0x00	; 0
    140a:	04 c0       	rjmp	.+8      	; 0x1414 <_fpadd_parts+0xe6>
    140c:	22 0f       	add	r18, r18
    140e:	33 1f       	adc	r19, r19
    1410:	44 1f       	adc	r20, r20
    1412:	55 1f       	adc	r21, r21
    1414:	6a 95       	dec	r22
    1416:	d2 f7       	brpl	.-12     	; 0x140c <_fpadd_parts+0xde>
    1418:	21 50       	subi	r18, 0x01	; 1
    141a:	30 40       	sbci	r19, 0x00	; 0
    141c:	40 40       	sbci	r20, 0x00	; 0
    141e:	50 40       	sbci	r21, 0x00	; 0
    1420:	2e 21       	and	r18, r14
    1422:	3f 21       	and	r19, r15
    1424:	40 23       	and	r20, r16
    1426:	51 23       	and	r21, r17
    1428:	21 15       	cp	r18, r1
    142a:	31 05       	cpc	r19, r1
    142c:	41 05       	cpc	r20, r1
    142e:	51 05       	cpc	r21, r1
    1430:	21 f0       	breq	.+8      	; 0x143a <_fpadd_parts+0x10c>
    1432:	21 e0       	ldi	r18, 0x01	; 1
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	40 e0       	ldi	r20, 0x00	; 0
    1438:	50 e0       	ldi	r21, 0x00	; 0
    143a:	79 01       	movw	r14, r18
    143c:	8a 01       	movw	r16, r20
    143e:	e6 28       	or	r14, r6
    1440:	f7 28       	or	r15, r7
    1442:	08 29       	or	r16, r8
    1444:	19 29       	or	r17, r9
    1446:	3c c0       	rjmp	.+120    	; 0x14c0 <_fpadd_parts+0x192>
    1448:	23 2b       	or	r18, r19
    144a:	d1 f1       	breq	.+116    	; 0x14c0 <_fpadd_parts+0x192>
    144c:	26 0e       	add	r2, r22
    144e:	37 1e       	adc	r3, r23
    1450:	35 01       	movw	r6, r10
    1452:	46 01       	movw	r8, r12
    1454:	06 2e       	mov	r0, r22
    1456:	04 c0       	rjmp	.+8      	; 0x1460 <_fpadd_parts+0x132>
    1458:	96 94       	lsr	r9
    145a:	87 94       	ror	r8
    145c:	77 94       	ror	r7
    145e:	67 94       	ror	r6
    1460:	0a 94       	dec	r0
    1462:	d2 f7       	brpl	.-12     	; 0x1458 <_fpadd_parts+0x12a>
    1464:	21 e0       	ldi	r18, 0x01	; 1
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 e0       	ldi	r20, 0x00	; 0
    146a:	50 e0       	ldi	r21, 0x00	; 0
    146c:	04 c0       	rjmp	.+8      	; 0x1476 <_fpadd_parts+0x148>
    146e:	22 0f       	add	r18, r18
    1470:	33 1f       	adc	r19, r19
    1472:	44 1f       	adc	r20, r20
    1474:	55 1f       	adc	r21, r21
    1476:	6a 95       	dec	r22
    1478:	d2 f7       	brpl	.-12     	; 0x146e <_fpadd_parts+0x140>
    147a:	21 50       	subi	r18, 0x01	; 1
    147c:	30 40       	sbci	r19, 0x00	; 0
    147e:	40 40       	sbci	r20, 0x00	; 0
    1480:	50 40       	sbci	r21, 0x00	; 0
    1482:	2a 21       	and	r18, r10
    1484:	3b 21       	and	r19, r11
    1486:	4c 21       	and	r20, r12
    1488:	5d 21       	and	r21, r13
    148a:	21 15       	cp	r18, r1
    148c:	31 05       	cpc	r19, r1
    148e:	41 05       	cpc	r20, r1
    1490:	51 05       	cpc	r21, r1
    1492:	21 f0       	breq	.+8      	; 0x149c <_fpadd_parts+0x16e>
    1494:	21 e0       	ldi	r18, 0x01	; 1
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	50 e0       	ldi	r21, 0x00	; 0
    149c:	59 01       	movw	r10, r18
    149e:	6a 01       	movw	r12, r20
    14a0:	a6 28       	or	r10, r6
    14a2:	b7 28       	or	r11, r7
    14a4:	c8 28       	or	r12, r8
    14a6:	d9 28       	or	r13, r9
    14a8:	0b c0       	rjmp	.+22     	; 0x14c0 <_fpadd_parts+0x192>
    14aa:	82 15       	cp	r24, r2
    14ac:	93 05       	cpc	r25, r3
    14ae:	2c f0       	brlt	.+10     	; 0x14ba <_fpadd_parts+0x18c>
    14b0:	1c 01       	movw	r2, r24
    14b2:	aa 24       	eor	r10, r10
    14b4:	bb 24       	eor	r11, r11
    14b6:	65 01       	movw	r12, r10
    14b8:	03 c0       	rjmp	.+6      	; 0x14c0 <_fpadd_parts+0x192>
    14ba:	ee 24       	eor	r14, r14
    14bc:	ff 24       	eor	r15, r15
    14be:	87 01       	movw	r16, r14
    14c0:	11 96       	adiw	r26, 0x01	; 1
    14c2:	9c 91       	ld	r25, X
    14c4:	d2 01       	movw	r26, r4
    14c6:	11 96       	adiw	r26, 0x01	; 1
    14c8:	8c 91       	ld	r24, X
    14ca:	98 17       	cp	r25, r24
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <_fpadd_parts+0x1a2>
    14ce:	45 c0       	rjmp	.+138    	; 0x155a <_fpadd_parts+0x22c>
    14d0:	99 23       	and	r25, r25
    14d2:	39 f0       	breq	.+14     	; 0x14e2 <_fpadd_parts+0x1b4>
    14d4:	a8 01       	movw	r20, r16
    14d6:	97 01       	movw	r18, r14
    14d8:	2a 19       	sub	r18, r10
    14da:	3b 09       	sbc	r19, r11
    14dc:	4c 09       	sbc	r20, r12
    14de:	5d 09       	sbc	r21, r13
    14e0:	06 c0       	rjmp	.+12     	; 0x14ee <_fpadd_parts+0x1c0>
    14e2:	a6 01       	movw	r20, r12
    14e4:	95 01       	movw	r18, r10
    14e6:	2e 19       	sub	r18, r14
    14e8:	3f 09       	sbc	r19, r15
    14ea:	40 0b       	sbc	r20, r16
    14ec:	51 0b       	sbc	r21, r17
    14ee:	57 fd       	sbrc	r21, 7
    14f0:	08 c0       	rjmp	.+16     	; 0x1502 <_fpadd_parts+0x1d4>
    14f2:	11 82       	std	Z+1, r1	; 0x01
    14f4:	33 82       	std	Z+3, r3	; 0x03
    14f6:	22 82       	std	Z+2, r2	; 0x02
    14f8:	24 83       	std	Z+4, r18	; 0x04
    14fa:	35 83       	std	Z+5, r19	; 0x05
    14fc:	46 83       	std	Z+6, r20	; 0x06
    14fe:	57 83       	std	Z+7, r21	; 0x07
    1500:	1d c0       	rjmp	.+58     	; 0x153c <_fpadd_parts+0x20e>
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	81 83       	std	Z+1, r24	; 0x01
    1506:	33 82       	std	Z+3, r3	; 0x03
    1508:	22 82       	std	Z+2, r2	; 0x02
    150a:	88 27       	eor	r24, r24
    150c:	99 27       	eor	r25, r25
    150e:	dc 01       	movw	r26, r24
    1510:	82 1b       	sub	r24, r18
    1512:	93 0b       	sbc	r25, r19
    1514:	a4 0b       	sbc	r26, r20
    1516:	b5 0b       	sbc	r27, r21
    1518:	84 83       	std	Z+4, r24	; 0x04
    151a:	95 83       	std	Z+5, r25	; 0x05
    151c:	a6 83       	std	Z+6, r26	; 0x06
    151e:	b7 83       	std	Z+7, r27	; 0x07
    1520:	0d c0       	rjmp	.+26     	; 0x153c <_fpadd_parts+0x20e>
    1522:	22 0f       	add	r18, r18
    1524:	33 1f       	adc	r19, r19
    1526:	44 1f       	adc	r20, r20
    1528:	55 1f       	adc	r21, r21
    152a:	24 83       	std	Z+4, r18	; 0x04
    152c:	35 83       	std	Z+5, r19	; 0x05
    152e:	46 83       	std	Z+6, r20	; 0x06
    1530:	57 83       	std	Z+7, r21	; 0x07
    1532:	82 81       	ldd	r24, Z+2	; 0x02
    1534:	93 81       	ldd	r25, Z+3	; 0x03
    1536:	01 97       	sbiw	r24, 0x01	; 1
    1538:	93 83       	std	Z+3, r25	; 0x03
    153a:	82 83       	std	Z+2, r24	; 0x02
    153c:	24 81       	ldd	r18, Z+4	; 0x04
    153e:	35 81       	ldd	r19, Z+5	; 0x05
    1540:	46 81       	ldd	r20, Z+6	; 0x06
    1542:	57 81       	ldd	r21, Z+7	; 0x07
    1544:	da 01       	movw	r26, r20
    1546:	c9 01       	movw	r24, r18
    1548:	01 97       	sbiw	r24, 0x01	; 1
    154a:	a1 09       	sbc	r26, r1
    154c:	b1 09       	sbc	r27, r1
    154e:	8f 5f       	subi	r24, 0xFF	; 255
    1550:	9f 4f       	sbci	r25, 0xFF	; 255
    1552:	af 4f       	sbci	r26, 0xFF	; 255
    1554:	bf 43       	sbci	r27, 0x3F	; 63
    1556:	28 f3       	brcs	.-54     	; 0x1522 <_fpadd_parts+0x1f4>
    1558:	0b c0       	rjmp	.+22     	; 0x1570 <_fpadd_parts+0x242>
    155a:	91 83       	std	Z+1, r25	; 0x01
    155c:	33 82       	std	Z+3, r3	; 0x03
    155e:	22 82       	std	Z+2, r2	; 0x02
    1560:	ea 0c       	add	r14, r10
    1562:	fb 1c       	adc	r15, r11
    1564:	0c 1d       	adc	r16, r12
    1566:	1d 1d       	adc	r17, r13
    1568:	e4 82       	std	Z+4, r14	; 0x04
    156a:	f5 82       	std	Z+5, r15	; 0x05
    156c:	06 83       	std	Z+6, r16	; 0x06
    156e:	17 83       	std	Z+7, r17	; 0x07
    1570:	83 e0       	ldi	r24, 0x03	; 3
    1572:	80 83       	st	Z, r24
    1574:	24 81       	ldd	r18, Z+4	; 0x04
    1576:	35 81       	ldd	r19, Z+5	; 0x05
    1578:	46 81       	ldd	r20, Z+6	; 0x06
    157a:	57 81       	ldd	r21, Z+7	; 0x07
    157c:	57 ff       	sbrs	r21, 7
    157e:	1a c0       	rjmp	.+52     	; 0x15b4 <_fpadd_parts+0x286>
    1580:	c9 01       	movw	r24, r18
    1582:	aa 27       	eor	r26, r26
    1584:	97 fd       	sbrc	r25, 7
    1586:	a0 95       	com	r26
    1588:	ba 2f       	mov	r27, r26
    158a:	81 70       	andi	r24, 0x01	; 1
    158c:	90 70       	andi	r25, 0x00	; 0
    158e:	a0 70       	andi	r26, 0x00	; 0
    1590:	b0 70       	andi	r27, 0x00	; 0
    1592:	56 95       	lsr	r21
    1594:	47 95       	ror	r20
    1596:	37 95       	ror	r19
    1598:	27 95       	ror	r18
    159a:	82 2b       	or	r24, r18
    159c:	93 2b       	or	r25, r19
    159e:	a4 2b       	or	r26, r20
    15a0:	b5 2b       	or	r27, r21
    15a2:	84 83       	std	Z+4, r24	; 0x04
    15a4:	95 83       	std	Z+5, r25	; 0x05
    15a6:	a6 83       	std	Z+6, r26	; 0x06
    15a8:	b7 83       	std	Z+7, r27	; 0x07
    15aa:	82 81       	ldd	r24, Z+2	; 0x02
    15ac:	93 81       	ldd	r25, Z+3	; 0x03
    15ae:	01 96       	adiw	r24, 0x01	; 1
    15b0:	93 83       	std	Z+3, r25	; 0x03
    15b2:	82 83       	std	Z+2, r24	; 0x02
    15b4:	df 01       	movw	r26, r30
    15b6:	01 c0       	rjmp	.+2      	; 0x15ba <_fpadd_parts+0x28c>
    15b8:	d2 01       	movw	r26, r4
    15ba:	cd 01       	movw	r24, r26
    15bc:	cd b7       	in	r28, 0x3d	; 61
    15be:	de b7       	in	r29, 0x3e	; 62
    15c0:	e2 e1       	ldi	r30, 0x12	; 18
    15c2:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <__epilogue_restores__>

000015c6 <__subsf3>:
    15c6:	a0 e2       	ldi	r26, 0x20	; 32
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	e9 ee       	ldi	r30, 0xE9	; 233
    15cc:	fa e0       	ldi	r31, 0x0A	; 10
    15ce:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__prologue_saves__+0x18>
    15d2:	69 83       	std	Y+1, r22	; 0x01
    15d4:	7a 83       	std	Y+2, r23	; 0x02
    15d6:	8b 83       	std	Y+3, r24	; 0x03
    15d8:	9c 83       	std	Y+4, r25	; 0x04
    15da:	2d 83       	std	Y+5, r18	; 0x05
    15dc:	3e 83       	std	Y+6, r19	; 0x06
    15de:	4f 83       	std	Y+7, r20	; 0x07
    15e0:	58 87       	std	Y+8, r21	; 0x08
    15e2:	e9 e0       	ldi	r30, 0x09	; 9
    15e4:	ee 2e       	mov	r14, r30
    15e6:	f1 2c       	mov	r15, r1
    15e8:	ec 0e       	add	r14, r28
    15ea:	fd 1e       	adc	r15, r29
    15ec:	ce 01       	movw	r24, r28
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	b7 01       	movw	r22, r14
    15f2:	be d4       	rcall	.+2428   	; 0x1f70 <__unpack_f>
    15f4:	8e 01       	movw	r16, r28
    15f6:	0f 5e       	subi	r16, 0xEF	; 239
    15f8:	1f 4f       	sbci	r17, 0xFF	; 255
    15fa:	ce 01       	movw	r24, r28
    15fc:	05 96       	adiw	r24, 0x05	; 5
    15fe:	b8 01       	movw	r22, r16
    1600:	b7 d4       	rcall	.+2414   	; 0x1f70 <__unpack_f>
    1602:	8a 89       	ldd	r24, Y+18	; 0x12
    1604:	91 e0       	ldi	r25, 0x01	; 1
    1606:	89 27       	eor	r24, r25
    1608:	8a 8b       	std	Y+18, r24	; 0x12
    160a:	c7 01       	movw	r24, r14
    160c:	b8 01       	movw	r22, r16
    160e:	ae 01       	movw	r20, r28
    1610:	47 5e       	subi	r20, 0xE7	; 231
    1612:	5f 4f       	sbci	r21, 0xFF	; 255
    1614:	8c de       	rcall	.-744    	; 0x132e <_fpadd_parts>
    1616:	d7 d3       	rcall	.+1966   	; 0x1dc6 <__pack_f>
    1618:	a0 96       	adiw	r28, 0x20	; 32
    161a:	e6 e0       	ldi	r30, 0x06	; 6
    161c:	0c 94 5c 1f 	jmp	0x3eb8	; 0x3eb8 <__epilogue_restores__+0x18>

00001620 <__addsf3>:
    1620:	a0 e2       	ldi	r26, 0x20	; 32
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e6 e1       	ldi	r30, 0x16	; 22
    1626:	fb e0       	ldi	r31, 0x0B	; 11
    1628:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__prologue_saves__+0x18>
    162c:	69 83       	std	Y+1, r22	; 0x01
    162e:	7a 83       	std	Y+2, r23	; 0x02
    1630:	8b 83       	std	Y+3, r24	; 0x03
    1632:	9c 83       	std	Y+4, r25	; 0x04
    1634:	2d 83       	std	Y+5, r18	; 0x05
    1636:	3e 83       	std	Y+6, r19	; 0x06
    1638:	4f 83       	std	Y+7, r20	; 0x07
    163a:	58 87       	std	Y+8, r21	; 0x08
    163c:	f9 e0       	ldi	r31, 0x09	; 9
    163e:	ef 2e       	mov	r14, r31
    1640:	f1 2c       	mov	r15, r1
    1642:	ec 0e       	add	r14, r28
    1644:	fd 1e       	adc	r15, r29
    1646:	ce 01       	movw	r24, r28
    1648:	01 96       	adiw	r24, 0x01	; 1
    164a:	b7 01       	movw	r22, r14
    164c:	91 d4       	rcall	.+2338   	; 0x1f70 <__unpack_f>
    164e:	8e 01       	movw	r16, r28
    1650:	0f 5e       	subi	r16, 0xEF	; 239
    1652:	1f 4f       	sbci	r17, 0xFF	; 255
    1654:	ce 01       	movw	r24, r28
    1656:	05 96       	adiw	r24, 0x05	; 5
    1658:	b8 01       	movw	r22, r16
    165a:	8a d4       	rcall	.+2324   	; 0x1f70 <__unpack_f>
    165c:	c7 01       	movw	r24, r14
    165e:	b8 01       	movw	r22, r16
    1660:	ae 01       	movw	r20, r28
    1662:	47 5e       	subi	r20, 0xE7	; 231
    1664:	5f 4f       	sbci	r21, 0xFF	; 255
    1666:	63 de       	rcall	.-826    	; 0x132e <_fpadd_parts>
    1668:	ae d3       	rcall	.+1884   	; 0x1dc6 <__pack_f>
    166a:	a0 96       	adiw	r28, 0x20	; 32
    166c:	e6 e0       	ldi	r30, 0x06	; 6
    166e:	0c 94 5c 1f 	jmp	0x3eb8	; 0x3eb8 <__epilogue_restores__+0x18>

00001672 <__mulsf3>:
    1672:	a0 e2       	ldi	r26, 0x20	; 32
    1674:	b0 e0       	ldi	r27, 0x00	; 0
    1676:	ef e3       	ldi	r30, 0x3F	; 63
    1678:	fb e0       	ldi	r31, 0x0B	; 11
    167a:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__prologue_saves__>
    167e:	69 83       	std	Y+1, r22	; 0x01
    1680:	7a 83       	std	Y+2, r23	; 0x02
    1682:	8b 83       	std	Y+3, r24	; 0x03
    1684:	9c 83       	std	Y+4, r25	; 0x04
    1686:	2d 83       	std	Y+5, r18	; 0x05
    1688:	3e 83       	std	Y+6, r19	; 0x06
    168a:	4f 83       	std	Y+7, r20	; 0x07
    168c:	58 87       	std	Y+8, r21	; 0x08
    168e:	ce 01       	movw	r24, r28
    1690:	01 96       	adiw	r24, 0x01	; 1
    1692:	be 01       	movw	r22, r28
    1694:	67 5f       	subi	r22, 0xF7	; 247
    1696:	7f 4f       	sbci	r23, 0xFF	; 255
    1698:	6b d4       	rcall	.+2262   	; 0x1f70 <__unpack_f>
    169a:	ce 01       	movw	r24, r28
    169c:	05 96       	adiw	r24, 0x05	; 5
    169e:	be 01       	movw	r22, r28
    16a0:	6f 5e       	subi	r22, 0xEF	; 239
    16a2:	7f 4f       	sbci	r23, 0xFF	; 255
    16a4:	65 d4       	rcall	.+2250   	; 0x1f70 <__unpack_f>
    16a6:	99 85       	ldd	r25, Y+9	; 0x09
    16a8:	92 30       	cpi	r25, 0x02	; 2
    16aa:	88 f0       	brcs	.+34     	; 0x16ce <__mulsf3+0x5c>
    16ac:	89 89       	ldd	r24, Y+17	; 0x11
    16ae:	82 30       	cpi	r24, 0x02	; 2
    16b0:	c8 f0       	brcs	.+50     	; 0x16e4 <__mulsf3+0x72>
    16b2:	94 30       	cpi	r25, 0x04	; 4
    16b4:	19 f4       	brne	.+6      	; 0x16bc <__mulsf3+0x4a>
    16b6:	82 30       	cpi	r24, 0x02	; 2
    16b8:	51 f4       	brne	.+20     	; 0x16ce <__mulsf3+0x5c>
    16ba:	04 c0       	rjmp	.+8      	; 0x16c4 <__mulsf3+0x52>
    16bc:	84 30       	cpi	r24, 0x04	; 4
    16be:	29 f4       	brne	.+10     	; 0x16ca <__mulsf3+0x58>
    16c0:	92 30       	cpi	r25, 0x02	; 2
    16c2:	81 f4       	brne	.+32     	; 0x16e4 <__mulsf3+0x72>
    16c4:	80 e6       	ldi	r24, 0x60	; 96
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	c6 c0       	rjmp	.+396    	; 0x1856 <__mulsf3+0x1e4>
    16ca:	92 30       	cpi	r25, 0x02	; 2
    16cc:	49 f4       	brne	.+18     	; 0x16e0 <__mulsf3+0x6e>
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    16d2:	8a 89       	ldd	r24, Y+18	; 0x12
    16d4:	98 13       	cpse	r25, r24
    16d6:	21 e0       	ldi	r18, 0x01	; 1
    16d8:	2a 87       	std	Y+10, r18	; 0x0a
    16da:	ce 01       	movw	r24, r28
    16dc:	09 96       	adiw	r24, 0x09	; 9
    16de:	bb c0       	rjmp	.+374    	; 0x1856 <__mulsf3+0x1e4>
    16e0:	82 30       	cpi	r24, 0x02	; 2
    16e2:	49 f4       	brne	.+18     	; 0x16f6 <__mulsf3+0x84>
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e8:	8a 89       	ldd	r24, Y+18	; 0x12
    16ea:	98 13       	cpse	r25, r24
    16ec:	21 e0       	ldi	r18, 0x01	; 1
    16ee:	2a 8b       	std	Y+18, r18	; 0x12
    16f0:	ce 01       	movw	r24, r28
    16f2:	41 96       	adiw	r24, 0x11	; 17
    16f4:	b0 c0       	rjmp	.+352    	; 0x1856 <__mulsf3+0x1e4>
    16f6:	2d 84       	ldd	r2, Y+13	; 0x0d
    16f8:	3e 84       	ldd	r3, Y+14	; 0x0e
    16fa:	4f 84       	ldd	r4, Y+15	; 0x0f
    16fc:	58 88       	ldd	r5, Y+16	; 0x10
    16fe:	6d 88       	ldd	r6, Y+21	; 0x15
    1700:	7e 88       	ldd	r7, Y+22	; 0x16
    1702:	8f 88       	ldd	r8, Y+23	; 0x17
    1704:	98 8c       	ldd	r9, Y+24	; 0x18
    1706:	ee 24       	eor	r14, r14
    1708:	ff 24       	eor	r15, r15
    170a:	87 01       	movw	r16, r14
    170c:	aa 24       	eor	r10, r10
    170e:	bb 24       	eor	r11, r11
    1710:	65 01       	movw	r12, r10
    1712:	40 e0       	ldi	r20, 0x00	; 0
    1714:	50 e0       	ldi	r21, 0x00	; 0
    1716:	60 e0       	ldi	r22, 0x00	; 0
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	e0 e0       	ldi	r30, 0x00	; 0
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	c1 01       	movw	r24, r2
    1720:	81 70       	andi	r24, 0x01	; 1
    1722:	90 70       	andi	r25, 0x00	; 0
    1724:	89 2b       	or	r24, r25
    1726:	e9 f0       	breq	.+58     	; 0x1762 <__mulsf3+0xf0>
    1728:	e6 0c       	add	r14, r6
    172a:	f7 1c       	adc	r15, r7
    172c:	08 1d       	adc	r16, r8
    172e:	19 1d       	adc	r17, r9
    1730:	9a 01       	movw	r18, r20
    1732:	ab 01       	movw	r20, r22
    1734:	2a 0d       	add	r18, r10
    1736:	3b 1d       	adc	r19, r11
    1738:	4c 1d       	adc	r20, r12
    173a:	5d 1d       	adc	r21, r13
    173c:	80 e0       	ldi	r24, 0x00	; 0
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	a0 e0       	ldi	r26, 0x00	; 0
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	e6 14       	cp	r14, r6
    1746:	f7 04       	cpc	r15, r7
    1748:	08 05       	cpc	r16, r8
    174a:	19 05       	cpc	r17, r9
    174c:	20 f4       	brcc	.+8      	; 0x1756 <__mulsf3+0xe4>
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	a0 e0       	ldi	r26, 0x00	; 0
    1754:	b0 e0       	ldi	r27, 0x00	; 0
    1756:	ba 01       	movw	r22, r20
    1758:	a9 01       	movw	r20, r18
    175a:	48 0f       	add	r20, r24
    175c:	59 1f       	adc	r21, r25
    175e:	6a 1f       	adc	r22, r26
    1760:	7b 1f       	adc	r23, r27
    1762:	aa 0c       	add	r10, r10
    1764:	bb 1c       	adc	r11, r11
    1766:	cc 1c       	adc	r12, r12
    1768:	dd 1c       	adc	r13, r13
    176a:	97 fe       	sbrs	r9, 7
    176c:	08 c0       	rjmp	.+16     	; 0x177e <__mulsf3+0x10c>
    176e:	81 e0       	ldi	r24, 0x01	; 1
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	a0 e0       	ldi	r26, 0x00	; 0
    1774:	b0 e0       	ldi	r27, 0x00	; 0
    1776:	a8 2a       	or	r10, r24
    1778:	b9 2a       	or	r11, r25
    177a:	ca 2a       	or	r12, r26
    177c:	db 2a       	or	r13, r27
    177e:	31 96       	adiw	r30, 0x01	; 1
    1780:	e0 32       	cpi	r30, 0x20	; 32
    1782:	f1 05       	cpc	r31, r1
    1784:	49 f0       	breq	.+18     	; 0x1798 <__mulsf3+0x126>
    1786:	66 0c       	add	r6, r6
    1788:	77 1c       	adc	r7, r7
    178a:	88 1c       	adc	r8, r8
    178c:	99 1c       	adc	r9, r9
    178e:	56 94       	lsr	r5
    1790:	47 94       	ror	r4
    1792:	37 94       	ror	r3
    1794:	27 94       	ror	r2
    1796:	c3 cf       	rjmp	.-122    	; 0x171e <__mulsf3+0xac>
    1798:	fa 85       	ldd	r31, Y+10	; 0x0a
    179a:	ea 89       	ldd	r30, Y+18	; 0x12
    179c:	2b 89       	ldd	r18, Y+19	; 0x13
    179e:	3c 89       	ldd	r19, Y+20	; 0x14
    17a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    17a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    17a4:	28 0f       	add	r18, r24
    17a6:	39 1f       	adc	r19, r25
    17a8:	2e 5f       	subi	r18, 0xFE	; 254
    17aa:	3f 4f       	sbci	r19, 0xFF	; 255
    17ac:	17 c0       	rjmp	.+46     	; 0x17dc <__mulsf3+0x16a>
    17ae:	ca 01       	movw	r24, r20
    17b0:	81 70       	andi	r24, 0x01	; 1
    17b2:	90 70       	andi	r25, 0x00	; 0
    17b4:	89 2b       	or	r24, r25
    17b6:	61 f0       	breq	.+24     	; 0x17d0 <__mulsf3+0x15e>
    17b8:	16 95       	lsr	r17
    17ba:	07 95       	ror	r16
    17bc:	f7 94       	ror	r15
    17be:	e7 94       	ror	r14
    17c0:	80 e0       	ldi	r24, 0x00	; 0
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	a0 e0       	ldi	r26, 0x00	; 0
    17c6:	b0 e8       	ldi	r27, 0x80	; 128
    17c8:	e8 2a       	or	r14, r24
    17ca:	f9 2a       	or	r15, r25
    17cc:	0a 2b       	or	r16, r26
    17ce:	1b 2b       	or	r17, r27
    17d0:	76 95       	lsr	r23
    17d2:	67 95       	ror	r22
    17d4:	57 95       	ror	r21
    17d6:	47 95       	ror	r20
    17d8:	2f 5f       	subi	r18, 0xFF	; 255
    17da:	3f 4f       	sbci	r19, 0xFF	; 255
    17dc:	77 fd       	sbrc	r23, 7
    17de:	e7 cf       	rjmp	.-50     	; 0x17ae <__mulsf3+0x13c>
    17e0:	0c c0       	rjmp	.+24     	; 0x17fa <__mulsf3+0x188>
    17e2:	44 0f       	add	r20, r20
    17e4:	55 1f       	adc	r21, r21
    17e6:	66 1f       	adc	r22, r22
    17e8:	77 1f       	adc	r23, r23
    17ea:	17 fd       	sbrc	r17, 7
    17ec:	41 60       	ori	r20, 0x01	; 1
    17ee:	ee 0c       	add	r14, r14
    17f0:	ff 1c       	adc	r15, r15
    17f2:	00 1f       	adc	r16, r16
    17f4:	11 1f       	adc	r17, r17
    17f6:	21 50       	subi	r18, 0x01	; 1
    17f8:	30 40       	sbci	r19, 0x00	; 0
    17fa:	40 30       	cpi	r20, 0x00	; 0
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	59 07       	cpc	r21, r25
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	69 07       	cpc	r22, r25
    1804:	90 e4       	ldi	r25, 0x40	; 64
    1806:	79 07       	cpc	r23, r25
    1808:	60 f3       	brcs	.-40     	; 0x17e2 <__mulsf3+0x170>
    180a:	2b 8f       	std	Y+27, r18	; 0x1b
    180c:	3c 8f       	std	Y+28, r19	; 0x1c
    180e:	db 01       	movw	r26, r22
    1810:	ca 01       	movw	r24, r20
    1812:	8f 77       	andi	r24, 0x7F	; 127
    1814:	90 70       	andi	r25, 0x00	; 0
    1816:	a0 70       	andi	r26, 0x00	; 0
    1818:	b0 70       	andi	r27, 0x00	; 0
    181a:	80 34       	cpi	r24, 0x40	; 64
    181c:	91 05       	cpc	r25, r1
    181e:	a1 05       	cpc	r26, r1
    1820:	b1 05       	cpc	r27, r1
    1822:	61 f4       	brne	.+24     	; 0x183c <__mulsf3+0x1ca>
    1824:	47 fd       	sbrc	r20, 7
    1826:	0a c0       	rjmp	.+20     	; 0x183c <__mulsf3+0x1ca>
    1828:	e1 14       	cp	r14, r1
    182a:	f1 04       	cpc	r15, r1
    182c:	01 05       	cpc	r16, r1
    182e:	11 05       	cpc	r17, r1
    1830:	29 f0       	breq	.+10     	; 0x183c <__mulsf3+0x1ca>
    1832:	40 5c       	subi	r20, 0xC0	; 192
    1834:	5f 4f       	sbci	r21, 0xFF	; 255
    1836:	6f 4f       	sbci	r22, 0xFF	; 255
    1838:	7f 4f       	sbci	r23, 0xFF	; 255
    183a:	40 78       	andi	r20, 0x80	; 128
    183c:	1a 8e       	std	Y+26, r1	; 0x1a
    183e:	fe 17       	cp	r31, r30
    1840:	11 f0       	breq	.+4      	; 0x1846 <__mulsf3+0x1d4>
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	8a 8f       	std	Y+26, r24	; 0x1a
    1846:	4d 8f       	std	Y+29, r20	; 0x1d
    1848:	5e 8f       	std	Y+30, r21	; 0x1e
    184a:	6f 8f       	std	Y+31, r22	; 0x1f
    184c:	78 a3       	std	Y+32, r23	; 0x20
    184e:	83 e0       	ldi	r24, 0x03	; 3
    1850:	89 8f       	std	Y+25, r24	; 0x19
    1852:	ce 01       	movw	r24, r28
    1854:	49 96       	adiw	r24, 0x19	; 25
    1856:	b7 d2       	rcall	.+1390   	; 0x1dc6 <__pack_f>
    1858:	a0 96       	adiw	r28, 0x20	; 32
    185a:	e2 e1       	ldi	r30, 0x12	; 18
    185c:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <__epilogue_restores__>

00001860 <__divsf3>:
    1860:	a8 e1       	ldi	r26, 0x18	; 24
    1862:	b0 e0       	ldi	r27, 0x00	; 0
    1864:	e6 e3       	ldi	r30, 0x36	; 54
    1866:	fc e0       	ldi	r31, 0x0C	; 12
    1868:	0c 94 3c 1f 	jmp	0x3e78	; 0x3e78 <__prologue_saves__+0x10>
    186c:	69 83       	std	Y+1, r22	; 0x01
    186e:	7a 83       	std	Y+2, r23	; 0x02
    1870:	8b 83       	std	Y+3, r24	; 0x03
    1872:	9c 83       	std	Y+4, r25	; 0x04
    1874:	2d 83       	std	Y+5, r18	; 0x05
    1876:	3e 83       	std	Y+6, r19	; 0x06
    1878:	4f 83       	std	Y+7, r20	; 0x07
    187a:	58 87       	std	Y+8, r21	; 0x08
    187c:	b9 e0       	ldi	r27, 0x09	; 9
    187e:	eb 2e       	mov	r14, r27
    1880:	f1 2c       	mov	r15, r1
    1882:	ec 0e       	add	r14, r28
    1884:	fd 1e       	adc	r15, r29
    1886:	ce 01       	movw	r24, r28
    1888:	01 96       	adiw	r24, 0x01	; 1
    188a:	b7 01       	movw	r22, r14
    188c:	71 d3       	rcall	.+1762   	; 0x1f70 <__unpack_f>
    188e:	8e 01       	movw	r16, r28
    1890:	0f 5e       	subi	r16, 0xEF	; 239
    1892:	1f 4f       	sbci	r17, 0xFF	; 255
    1894:	ce 01       	movw	r24, r28
    1896:	05 96       	adiw	r24, 0x05	; 5
    1898:	b8 01       	movw	r22, r16
    189a:	6a d3       	rcall	.+1748   	; 0x1f70 <__unpack_f>
    189c:	29 85       	ldd	r18, Y+9	; 0x09
    189e:	22 30       	cpi	r18, 0x02	; 2
    18a0:	08 f4       	brcc	.+2      	; 0x18a4 <__divsf3+0x44>
    18a2:	7e c0       	rjmp	.+252    	; 0x19a0 <__divsf3+0x140>
    18a4:	39 89       	ldd	r19, Y+17	; 0x11
    18a6:	32 30       	cpi	r19, 0x02	; 2
    18a8:	10 f4       	brcc	.+4      	; 0x18ae <__divsf3+0x4e>
    18aa:	b8 01       	movw	r22, r16
    18ac:	7c c0       	rjmp	.+248    	; 0x19a6 <__divsf3+0x146>
    18ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    18b0:	9a 89       	ldd	r25, Y+18	; 0x12
    18b2:	89 27       	eor	r24, r25
    18b4:	8a 87       	std	Y+10, r24	; 0x0a
    18b6:	24 30       	cpi	r18, 0x04	; 4
    18b8:	11 f0       	breq	.+4      	; 0x18be <__divsf3+0x5e>
    18ba:	22 30       	cpi	r18, 0x02	; 2
    18bc:	31 f4       	brne	.+12     	; 0x18ca <__divsf3+0x6a>
    18be:	23 17       	cp	r18, r19
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <__divsf3+0x64>
    18c2:	6e c0       	rjmp	.+220    	; 0x19a0 <__divsf3+0x140>
    18c4:	60 e6       	ldi	r22, 0x60	; 96
    18c6:	70 e0       	ldi	r23, 0x00	; 0
    18c8:	6e c0       	rjmp	.+220    	; 0x19a6 <__divsf3+0x146>
    18ca:	34 30       	cpi	r19, 0x04	; 4
    18cc:	39 f4       	brne	.+14     	; 0x18dc <__divsf3+0x7c>
    18ce:	1d 86       	std	Y+13, r1	; 0x0d
    18d0:	1e 86       	std	Y+14, r1	; 0x0e
    18d2:	1f 86       	std	Y+15, r1	; 0x0f
    18d4:	18 8a       	std	Y+16, r1	; 0x10
    18d6:	1c 86       	std	Y+12, r1	; 0x0c
    18d8:	1b 86       	std	Y+11, r1	; 0x0b
    18da:	04 c0       	rjmp	.+8      	; 0x18e4 <__divsf3+0x84>
    18dc:	32 30       	cpi	r19, 0x02	; 2
    18de:	21 f4       	brne	.+8      	; 0x18e8 <__divsf3+0x88>
    18e0:	84 e0       	ldi	r24, 0x04	; 4
    18e2:	89 87       	std	Y+9, r24	; 0x09
    18e4:	b7 01       	movw	r22, r14
    18e6:	5f c0       	rjmp	.+190    	; 0x19a6 <__divsf3+0x146>
    18e8:	2b 85       	ldd	r18, Y+11	; 0x0b
    18ea:	3c 85       	ldd	r19, Y+12	; 0x0c
    18ec:	8b 89       	ldd	r24, Y+19	; 0x13
    18ee:	9c 89       	ldd	r25, Y+20	; 0x14
    18f0:	28 1b       	sub	r18, r24
    18f2:	39 0b       	sbc	r19, r25
    18f4:	3c 87       	std	Y+12, r19	; 0x0c
    18f6:	2b 87       	std	Y+11, r18	; 0x0b
    18f8:	ed 84       	ldd	r14, Y+13	; 0x0d
    18fa:	fe 84       	ldd	r15, Y+14	; 0x0e
    18fc:	0f 85       	ldd	r16, Y+15	; 0x0f
    18fe:	18 89       	ldd	r17, Y+16	; 0x10
    1900:	ad 88       	ldd	r10, Y+21	; 0x15
    1902:	be 88       	ldd	r11, Y+22	; 0x16
    1904:	cf 88       	ldd	r12, Y+23	; 0x17
    1906:	d8 8c       	ldd	r13, Y+24	; 0x18
    1908:	ea 14       	cp	r14, r10
    190a:	fb 04       	cpc	r15, r11
    190c:	0c 05       	cpc	r16, r12
    190e:	1d 05       	cpc	r17, r13
    1910:	40 f4       	brcc	.+16     	; 0x1922 <__divsf3+0xc2>
    1912:	ee 0c       	add	r14, r14
    1914:	ff 1c       	adc	r15, r15
    1916:	00 1f       	adc	r16, r16
    1918:	11 1f       	adc	r17, r17
    191a:	21 50       	subi	r18, 0x01	; 1
    191c:	30 40       	sbci	r19, 0x00	; 0
    191e:	3c 87       	std	Y+12, r19	; 0x0c
    1920:	2b 87       	std	Y+11, r18	; 0x0b
    1922:	20 e0       	ldi	r18, 0x00	; 0
    1924:	30 e0       	ldi	r19, 0x00	; 0
    1926:	40 e0       	ldi	r20, 0x00	; 0
    1928:	50 e0       	ldi	r21, 0x00	; 0
    192a:	80 e0       	ldi	r24, 0x00	; 0
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	a0 e0       	ldi	r26, 0x00	; 0
    1930:	b0 e4       	ldi	r27, 0x40	; 64
    1932:	60 e0       	ldi	r22, 0x00	; 0
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	ea 14       	cp	r14, r10
    1938:	fb 04       	cpc	r15, r11
    193a:	0c 05       	cpc	r16, r12
    193c:	1d 05       	cpc	r17, r13
    193e:	40 f0       	brcs	.+16     	; 0x1950 <__divsf3+0xf0>
    1940:	28 2b       	or	r18, r24
    1942:	39 2b       	or	r19, r25
    1944:	4a 2b       	or	r20, r26
    1946:	5b 2b       	or	r21, r27
    1948:	ea 18       	sub	r14, r10
    194a:	fb 08       	sbc	r15, r11
    194c:	0c 09       	sbc	r16, r12
    194e:	1d 09       	sbc	r17, r13
    1950:	b6 95       	lsr	r27
    1952:	a7 95       	ror	r26
    1954:	97 95       	ror	r25
    1956:	87 95       	ror	r24
    1958:	ee 0c       	add	r14, r14
    195a:	ff 1c       	adc	r15, r15
    195c:	00 1f       	adc	r16, r16
    195e:	11 1f       	adc	r17, r17
    1960:	6f 5f       	subi	r22, 0xFF	; 255
    1962:	7f 4f       	sbci	r23, 0xFF	; 255
    1964:	6f 31       	cpi	r22, 0x1F	; 31
    1966:	71 05       	cpc	r23, r1
    1968:	31 f7       	brne	.-52     	; 0x1936 <__divsf3+0xd6>
    196a:	da 01       	movw	r26, r20
    196c:	c9 01       	movw	r24, r18
    196e:	8f 77       	andi	r24, 0x7F	; 127
    1970:	90 70       	andi	r25, 0x00	; 0
    1972:	a0 70       	andi	r26, 0x00	; 0
    1974:	b0 70       	andi	r27, 0x00	; 0
    1976:	80 34       	cpi	r24, 0x40	; 64
    1978:	91 05       	cpc	r25, r1
    197a:	a1 05       	cpc	r26, r1
    197c:	b1 05       	cpc	r27, r1
    197e:	61 f4       	brne	.+24     	; 0x1998 <__divsf3+0x138>
    1980:	27 fd       	sbrc	r18, 7
    1982:	0a c0       	rjmp	.+20     	; 0x1998 <__divsf3+0x138>
    1984:	e1 14       	cp	r14, r1
    1986:	f1 04       	cpc	r15, r1
    1988:	01 05       	cpc	r16, r1
    198a:	11 05       	cpc	r17, r1
    198c:	29 f0       	breq	.+10     	; 0x1998 <__divsf3+0x138>
    198e:	20 5c       	subi	r18, 0xC0	; 192
    1990:	3f 4f       	sbci	r19, 0xFF	; 255
    1992:	4f 4f       	sbci	r20, 0xFF	; 255
    1994:	5f 4f       	sbci	r21, 0xFF	; 255
    1996:	20 78       	andi	r18, 0x80	; 128
    1998:	2d 87       	std	Y+13, r18	; 0x0d
    199a:	3e 87       	std	Y+14, r19	; 0x0e
    199c:	4f 87       	std	Y+15, r20	; 0x0f
    199e:	58 8b       	std	Y+16, r21	; 0x10
    19a0:	be 01       	movw	r22, r28
    19a2:	67 5f       	subi	r22, 0xF7	; 247
    19a4:	7f 4f       	sbci	r23, 0xFF	; 255
    19a6:	cb 01       	movw	r24, r22
    19a8:	0e d2       	rcall	.+1052   	; 0x1dc6 <__pack_f>
    19aa:	68 96       	adiw	r28, 0x18	; 24
    19ac:	ea e0       	ldi	r30, 0x0A	; 10
    19ae:	0c 94 58 1f 	jmp	0x3eb0	; 0x3eb0 <__epilogue_restores__+0x10>

000019b2 <__gtsf2>:
    19b2:	a8 e1       	ldi	r26, 0x18	; 24
    19b4:	b0 e0       	ldi	r27, 0x00	; 0
    19b6:	ef ed       	ldi	r30, 0xDF	; 223
    19b8:	fc e0       	ldi	r31, 0x0C	; 12
    19ba:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__prologue_saves__+0x18>
    19be:	69 83       	std	Y+1, r22	; 0x01
    19c0:	7a 83       	std	Y+2, r23	; 0x02
    19c2:	8b 83       	std	Y+3, r24	; 0x03
    19c4:	9c 83       	std	Y+4, r25	; 0x04
    19c6:	2d 83       	std	Y+5, r18	; 0x05
    19c8:	3e 83       	std	Y+6, r19	; 0x06
    19ca:	4f 83       	std	Y+7, r20	; 0x07
    19cc:	58 87       	std	Y+8, r21	; 0x08
    19ce:	89 e0       	ldi	r24, 0x09	; 9
    19d0:	e8 2e       	mov	r14, r24
    19d2:	f1 2c       	mov	r15, r1
    19d4:	ec 0e       	add	r14, r28
    19d6:	fd 1e       	adc	r15, r29
    19d8:	ce 01       	movw	r24, r28
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	b7 01       	movw	r22, r14
    19de:	c8 d2       	rcall	.+1424   	; 0x1f70 <__unpack_f>
    19e0:	8e 01       	movw	r16, r28
    19e2:	0f 5e       	subi	r16, 0xEF	; 239
    19e4:	1f 4f       	sbci	r17, 0xFF	; 255
    19e6:	ce 01       	movw	r24, r28
    19e8:	05 96       	adiw	r24, 0x05	; 5
    19ea:	b8 01       	movw	r22, r16
    19ec:	c1 d2       	rcall	.+1410   	; 0x1f70 <__unpack_f>
    19ee:	89 85       	ldd	r24, Y+9	; 0x09
    19f0:	82 30       	cpi	r24, 0x02	; 2
    19f2:	38 f0       	brcs	.+14     	; 0x1a02 <__gtsf2+0x50>
    19f4:	89 89       	ldd	r24, Y+17	; 0x11
    19f6:	82 30       	cpi	r24, 0x02	; 2
    19f8:	20 f0       	brcs	.+8      	; 0x1a02 <__gtsf2+0x50>
    19fa:	c7 01       	movw	r24, r14
    19fc:	b8 01       	movw	r22, r16
    19fe:	30 d3       	rcall	.+1632   	; 0x2060 <__fpcmp_parts_f>
    1a00:	01 c0       	rjmp	.+2      	; 0x1a04 <__gtsf2+0x52>
    1a02:	8f ef       	ldi	r24, 0xFF	; 255
    1a04:	68 96       	adiw	r28, 0x18	; 24
    1a06:	e6 e0       	ldi	r30, 0x06	; 6
    1a08:	0c 94 5c 1f 	jmp	0x3eb8	; 0x3eb8 <__epilogue_restores__+0x18>

00001a0c <__gesf2>:
    1a0c:	a8 e1       	ldi	r26, 0x18	; 24
    1a0e:	b0 e0       	ldi	r27, 0x00	; 0
    1a10:	ec e0       	ldi	r30, 0x0C	; 12
    1a12:	fd e0       	ldi	r31, 0x0D	; 13
    1a14:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__prologue_saves__+0x18>
    1a18:	69 83       	std	Y+1, r22	; 0x01
    1a1a:	7a 83       	std	Y+2, r23	; 0x02
    1a1c:	8b 83       	std	Y+3, r24	; 0x03
    1a1e:	9c 83       	std	Y+4, r25	; 0x04
    1a20:	2d 83       	std	Y+5, r18	; 0x05
    1a22:	3e 83       	std	Y+6, r19	; 0x06
    1a24:	4f 83       	std	Y+7, r20	; 0x07
    1a26:	58 87       	std	Y+8, r21	; 0x08
    1a28:	89 e0       	ldi	r24, 0x09	; 9
    1a2a:	e8 2e       	mov	r14, r24
    1a2c:	f1 2c       	mov	r15, r1
    1a2e:	ec 0e       	add	r14, r28
    1a30:	fd 1e       	adc	r15, r29
    1a32:	ce 01       	movw	r24, r28
    1a34:	01 96       	adiw	r24, 0x01	; 1
    1a36:	b7 01       	movw	r22, r14
    1a38:	9b d2       	rcall	.+1334   	; 0x1f70 <__unpack_f>
    1a3a:	8e 01       	movw	r16, r28
    1a3c:	0f 5e       	subi	r16, 0xEF	; 239
    1a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a40:	ce 01       	movw	r24, r28
    1a42:	05 96       	adiw	r24, 0x05	; 5
    1a44:	b8 01       	movw	r22, r16
    1a46:	94 d2       	rcall	.+1320   	; 0x1f70 <__unpack_f>
    1a48:	89 85       	ldd	r24, Y+9	; 0x09
    1a4a:	82 30       	cpi	r24, 0x02	; 2
    1a4c:	38 f0       	brcs	.+14     	; 0x1a5c <__gesf2+0x50>
    1a4e:	89 89       	ldd	r24, Y+17	; 0x11
    1a50:	82 30       	cpi	r24, 0x02	; 2
    1a52:	20 f0       	brcs	.+8      	; 0x1a5c <__gesf2+0x50>
    1a54:	c7 01       	movw	r24, r14
    1a56:	b8 01       	movw	r22, r16
    1a58:	03 d3       	rcall	.+1542   	; 0x2060 <__fpcmp_parts_f>
    1a5a:	01 c0       	rjmp	.+2      	; 0x1a5e <__gesf2+0x52>
    1a5c:	8f ef       	ldi	r24, 0xFF	; 255
    1a5e:	68 96       	adiw	r28, 0x18	; 24
    1a60:	e6 e0       	ldi	r30, 0x06	; 6
    1a62:	0c 94 5c 1f 	jmp	0x3eb8	; 0x3eb8 <__epilogue_restores__+0x18>

00001a66 <__ltsf2>:
    1a66:	a8 e1       	ldi	r26, 0x18	; 24
    1a68:	b0 e0       	ldi	r27, 0x00	; 0
    1a6a:	e9 e3       	ldi	r30, 0x39	; 57
    1a6c:	fd e0       	ldi	r31, 0x0D	; 13
    1a6e:	0c 94 40 1f 	jmp	0x3e80	; 0x3e80 <__prologue_saves__+0x18>
    1a72:	69 83       	std	Y+1, r22	; 0x01
    1a74:	7a 83       	std	Y+2, r23	; 0x02
    1a76:	8b 83       	std	Y+3, r24	; 0x03
    1a78:	9c 83       	std	Y+4, r25	; 0x04
    1a7a:	2d 83       	std	Y+5, r18	; 0x05
    1a7c:	3e 83       	std	Y+6, r19	; 0x06
    1a7e:	4f 83       	std	Y+7, r20	; 0x07
    1a80:	58 87       	std	Y+8, r21	; 0x08
    1a82:	89 e0       	ldi	r24, 0x09	; 9
    1a84:	e8 2e       	mov	r14, r24
    1a86:	f1 2c       	mov	r15, r1
    1a88:	ec 0e       	add	r14, r28
    1a8a:	fd 1e       	adc	r15, r29
    1a8c:	ce 01       	movw	r24, r28
    1a8e:	01 96       	adiw	r24, 0x01	; 1
    1a90:	b7 01       	movw	r22, r14
    1a92:	6e d2       	rcall	.+1244   	; 0x1f70 <__unpack_f>
    1a94:	8e 01       	movw	r16, r28
    1a96:	0f 5e       	subi	r16, 0xEF	; 239
    1a98:	1f 4f       	sbci	r17, 0xFF	; 255
    1a9a:	ce 01       	movw	r24, r28
    1a9c:	05 96       	adiw	r24, 0x05	; 5
    1a9e:	b8 01       	movw	r22, r16
    1aa0:	67 d2       	rcall	.+1230   	; 0x1f70 <__unpack_f>
    1aa2:	89 85       	ldd	r24, Y+9	; 0x09
    1aa4:	82 30       	cpi	r24, 0x02	; 2
    1aa6:	38 f0       	brcs	.+14     	; 0x1ab6 <__ltsf2+0x50>
    1aa8:	89 89       	ldd	r24, Y+17	; 0x11
    1aaa:	82 30       	cpi	r24, 0x02	; 2
    1aac:	20 f0       	brcs	.+8      	; 0x1ab6 <__ltsf2+0x50>
    1aae:	c7 01       	movw	r24, r14
    1ab0:	b8 01       	movw	r22, r16
    1ab2:	d6 d2       	rcall	.+1452   	; 0x2060 <__fpcmp_parts_f>
    1ab4:	01 c0       	rjmp	.+2      	; 0x1ab8 <__ltsf2+0x52>
    1ab6:	81 e0       	ldi	r24, 0x01	; 1
    1ab8:	68 96       	adiw	r28, 0x18	; 24
    1aba:	e6 e0       	ldi	r30, 0x06	; 6
    1abc:	0c 94 5c 1f 	jmp	0x3eb8	; 0x3eb8 <__epilogue_restores__+0x18>

00001ac0 <__floatsisf>:
    1ac0:	a8 e0       	ldi	r26, 0x08	; 8
    1ac2:	b0 e0       	ldi	r27, 0x00	; 0
    1ac4:	e6 e6       	ldi	r30, 0x66	; 102
    1ac6:	fd e0       	ldi	r31, 0x0D	; 13
    1ac8:	0c 94 3d 1f 	jmp	0x3e7a	; 0x3e7a <__prologue_saves__+0x12>
    1acc:	9b 01       	movw	r18, r22
    1ace:	ac 01       	movw	r20, r24
    1ad0:	83 e0       	ldi	r24, 0x03	; 3
    1ad2:	89 83       	std	Y+1, r24	; 0x01
    1ad4:	da 01       	movw	r26, r20
    1ad6:	c9 01       	movw	r24, r18
    1ad8:	88 27       	eor	r24, r24
    1ada:	b7 fd       	sbrc	r27, 7
    1adc:	83 95       	inc	r24
    1ade:	99 27       	eor	r25, r25
    1ae0:	aa 27       	eor	r26, r26
    1ae2:	bb 27       	eor	r27, r27
    1ae4:	b8 2e       	mov	r11, r24
    1ae6:	21 15       	cp	r18, r1
    1ae8:	31 05       	cpc	r19, r1
    1aea:	41 05       	cpc	r20, r1
    1aec:	51 05       	cpc	r21, r1
    1aee:	19 f4       	brne	.+6      	; 0x1af6 <__floatsisf+0x36>
    1af0:	82 e0       	ldi	r24, 0x02	; 2
    1af2:	89 83       	std	Y+1, r24	; 0x01
    1af4:	39 c0       	rjmp	.+114    	; 0x1b68 <__floatsisf+0xa8>
    1af6:	88 23       	and	r24, r24
    1af8:	a9 f0       	breq	.+42     	; 0x1b24 <__floatsisf+0x64>
    1afa:	20 30       	cpi	r18, 0x00	; 0
    1afc:	80 e0       	ldi	r24, 0x00	; 0
    1afe:	38 07       	cpc	r19, r24
    1b00:	80 e0       	ldi	r24, 0x00	; 0
    1b02:	48 07       	cpc	r20, r24
    1b04:	80 e8       	ldi	r24, 0x80	; 128
    1b06:	58 07       	cpc	r21, r24
    1b08:	29 f4       	brne	.+10     	; 0x1b14 <__floatsisf+0x54>
    1b0a:	60 e0       	ldi	r22, 0x00	; 0
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	80 e0       	ldi	r24, 0x00	; 0
    1b10:	9f ec       	ldi	r25, 0xCF	; 207
    1b12:	2e c0       	rjmp	.+92     	; 0x1b70 <__floatsisf+0xb0>
    1b14:	ee 24       	eor	r14, r14
    1b16:	ff 24       	eor	r15, r15
    1b18:	87 01       	movw	r16, r14
    1b1a:	e2 1a       	sub	r14, r18
    1b1c:	f3 0a       	sbc	r15, r19
    1b1e:	04 0b       	sbc	r16, r20
    1b20:	15 0b       	sbc	r17, r21
    1b22:	02 c0       	rjmp	.+4      	; 0x1b28 <__floatsisf+0x68>
    1b24:	79 01       	movw	r14, r18
    1b26:	8a 01       	movw	r16, r20
    1b28:	8e e1       	ldi	r24, 0x1E	; 30
    1b2a:	c8 2e       	mov	r12, r24
    1b2c:	d1 2c       	mov	r13, r1
    1b2e:	dc 82       	std	Y+4, r13	; 0x04
    1b30:	cb 82       	std	Y+3, r12	; 0x03
    1b32:	ed 82       	std	Y+5, r14	; 0x05
    1b34:	fe 82       	std	Y+6, r15	; 0x06
    1b36:	0f 83       	std	Y+7, r16	; 0x07
    1b38:	18 87       	std	Y+8, r17	; 0x08
    1b3a:	c8 01       	movw	r24, r16
    1b3c:	b7 01       	movw	r22, r14
    1b3e:	f4 d0       	rcall	.+488    	; 0x1d28 <__clzsi2>
    1b40:	01 97       	sbiw	r24, 0x01	; 1
    1b42:	18 16       	cp	r1, r24
    1b44:	19 06       	cpc	r1, r25
    1b46:	84 f4       	brge	.+32     	; 0x1b68 <__floatsisf+0xa8>
    1b48:	08 2e       	mov	r0, r24
    1b4a:	04 c0       	rjmp	.+8      	; 0x1b54 <__floatsisf+0x94>
    1b4c:	ee 0c       	add	r14, r14
    1b4e:	ff 1c       	adc	r15, r15
    1b50:	00 1f       	adc	r16, r16
    1b52:	11 1f       	adc	r17, r17
    1b54:	0a 94       	dec	r0
    1b56:	d2 f7       	brpl	.-12     	; 0x1b4c <__floatsisf+0x8c>
    1b58:	ed 82       	std	Y+5, r14	; 0x05
    1b5a:	fe 82       	std	Y+6, r15	; 0x06
    1b5c:	0f 83       	std	Y+7, r16	; 0x07
    1b5e:	18 87       	std	Y+8, r17	; 0x08
    1b60:	c8 1a       	sub	r12, r24
    1b62:	d9 0a       	sbc	r13, r25
    1b64:	dc 82       	std	Y+4, r13	; 0x04
    1b66:	cb 82       	std	Y+3, r12	; 0x03
    1b68:	ba 82       	std	Y+2, r11	; 0x02
    1b6a:	ce 01       	movw	r24, r28
    1b6c:	01 96       	adiw	r24, 0x01	; 1
    1b6e:	2b d1       	rcall	.+598    	; 0x1dc6 <__pack_f>
    1b70:	28 96       	adiw	r28, 0x08	; 8
    1b72:	e9 e0       	ldi	r30, 0x09	; 9
    1b74:	0c 94 59 1f 	jmp	0x3eb2	; 0x3eb2 <__epilogue_restores__+0x12>

00001b78 <__fixsfsi>:
    1b78:	ac e0       	ldi	r26, 0x0C	; 12
    1b7a:	b0 e0       	ldi	r27, 0x00	; 0
    1b7c:	e2 ec       	ldi	r30, 0xC2	; 194
    1b7e:	fd e0       	ldi	r31, 0x0D	; 13
    1b80:	0c 94 44 1f 	jmp	0x3e88	; 0x3e88 <__prologue_saves__+0x20>
    1b84:	69 83       	std	Y+1, r22	; 0x01
    1b86:	7a 83       	std	Y+2, r23	; 0x02
    1b88:	8b 83       	std	Y+3, r24	; 0x03
    1b8a:	9c 83       	std	Y+4, r25	; 0x04
    1b8c:	ce 01       	movw	r24, r28
    1b8e:	01 96       	adiw	r24, 0x01	; 1
    1b90:	be 01       	movw	r22, r28
    1b92:	6b 5f       	subi	r22, 0xFB	; 251
    1b94:	7f 4f       	sbci	r23, 0xFF	; 255
    1b96:	ec d1       	rcall	.+984    	; 0x1f70 <__unpack_f>
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	82 30       	cpi	r24, 0x02	; 2
    1b9c:	61 f1       	breq	.+88     	; 0x1bf6 <__fixsfsi+0x7e>
    1b9e:	82 30       	cpi	r24, 0x02	; 2
    1ba0:	50 f1       	brcs	.+84     	; 0x1bf6 <__fixsfsi+0x7e>
    1ba2:	84 30       	cpi	r24, 0x04	; 4
    1ba4:	21 f4       	brne	.+8      	; 0x1bae <__fixsfsi+0x36>
    1ba6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ba8:	88 23       	and	r24, r24
    1baa:	51 f1       	breq	.+84     	; 0x1c00 <__fixsfsi+0x88>
    1bac:	2e c0       	rjmp	.+92     	; 0x1c0a <__fixsfsi+0x92>
    1bae:	2f 81       	ldd	r18, Y+7	; 0x07
    1bb0:	38 85       	ldd	r19, Y+8	; 0x08
    1bb2:	37 fd       	sbrc	r19, 7
    1bb4:	20 c0       	rjmp	.+64     	; 0x1bf6 <__fixsfsi+0x7e>
    1bb6:	6e 81       	ldd	r22, Y+6	; 0x06
    1bb8:	2f 31       	cpi	r18, 0x1F	; 31
    1bba:	31 05       	cpc	r19, r1
    1bbc:	1c f0       	brlt	.+6      	; 0x1bc4 <__fixsfsi+0x4c>
    1bbe:	66 23       	and	r22, r22
    1bc0:	f9 f0       	breq	.+62     	; 0x1c00 <__fixsfsi+0x88>
    1bc2:	23 c0       	rjmp	.+70     	; 0x1c0a <__fixsfsi+0x92>
    1bc4:	8e e1       	ldi	r24, 0x1E	; 30
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	82 1b       	sub	r24, r18
    1bca:	93 0b       	sbc	r25, r19
    1bcc:	29 85       	ldd	r18, Y+9	; 0x09
    1bce:	3a 85       	ldd	r19, Y+10	; 0x0a
    1bd0:	4b 85       	ldd	r20, Y+11	; 0x0b
    1bd2:	5c 85       	ldd	r21, Y+12	; 0x0c
    1bd4:	04 c0       	rjmp	.+8      	; 0x1bde <__fixsfsi+0x66>
    1bd6:	56 95       	lsr	r21
    1bd8:	47 95       	ror	r20
    1bda:	37 95       	ror	r19
    1bdc:	27 95       	ror	r18
    1bde:	8a 95       	dec	r24
    1be0:	d2 f7       	brpl	.-12     	; 0x1bd6 <__fixsfsi+0x5e>
    1be2:	66 23       	and	r22, r22
    1be4:	b1 f0       	breq	.+44     	; 0x1c12 <__fixsfsi+0x9a>
    1be6:	50 95       	com	r21
    1be8:	40 95       	com	r20
    1bea:	30 95       	com	r19
    1bec:	21 95       	neg	r18
    1bee:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf0:	4f 4f       	sbci	r20, 0xFF	; 255
    1bf2:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf4:	0e c0       	rjmp	.+28     	; 0x1c12 <__fixsfsi+0x9a>
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	40 e0       	ldi	r20, 0x00	; 0
    1bfc:	50 e0       	ldi	r21, 0x00	; 0
    1bfe:	09 c0       	rjmp	.+18     	; 0x1c12 <__fixsfsi+0x9a>
    1c00:	2f ef       	ldi	r18, 0xFF	; 255
    1c02:	3f ef       	ldi	r19, 0xFF	; 255
    1c04:	4f ef       	ldi	r20, 0xFF	; 255
    1c06:	5f e7       	ldi	r21, 0x7F	; 127
    1c08:	04 c0       	rjmp	.+8      	; 0x1c12 <__fixsfsi+0x9a>
    1c0a:	20 e0       	ldi	r18, 0x00	; 0
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	40 e0       	ldi	r20, 0x00	; 0
    1c10:	50 e8       	ldi	r21, 0x80	; 128
    1c12:	b9 01       	movw	r22, r18
    1c14:	ca 01       	movw	r24, r20
    1c16:	2c 96       	adiw	r28, 0x0c	; 12
    1c18:	e2 e0       	ldi	r30, 0x02	; 2
    1c1a:	0c 94 60 1f 	jmp	0x3ec0	; 0x3ec0 <__epilogue_restores__+0x20>

00001c1e <__ashrdi3>:
    1c1e:	ef 92       	push	r14
    1c20:	ff 92       	push	r15
    1c22:	0f 93       	push	r16
    1c24:	df 93       	push	r29
    1c26:	cf 93       	push	r28
    1c28:	cd b7       	in	r28, 0x3d	; 61
    1c2a:	de b7       	in	r29, 0x3e	; 62
    1c2c:	60 97       	sbiw	r28, 0x10	; 16
    1c2e:	0f b6       	in	r0, 0x3f	; 63
    1c30:	f8 94       	cli
    1c32:	de bf       	out	0x3e, r29	; 62
    1c34:	0f be       	out	0x3f, r0	; 63
    1c36:	cd bf       	out	0x3d, r28	; 61
    1c38:	a8 2f       	mov	r26, r24
    1c3a:	00 23       	and	r16, r16
    1c3c:	09 f4       	brne	.+2      	; 0x1c40 <__ashrdi3+0x22>
    1c3e:	67 c0       	rjmp	.+206    	; 0x1d0e <__ashrdi3+0xf0>
    1c40:	7e 01       	movw	r14, r28
    1c42:	08 94       	sec
    1c44:	e1 1c       	adc	r14, r1
    1c46:	f1 1c       	adc	r15, r1
    1c48:	88 e0       	ldi	r24, 0x08	; 8
    1c4a:	f7 01       	movw	r30, r14
    1c4c:	11 92       	st	Z+, r1
    1c4e:	8a 95       	dec	r24
    1c50:	e9 f7       	brne	.-6      	; 0x1c4c <__ashrdi3+0x2e>
    1c52:	29 83       	std	Y+1, r18	; 0x01
    1c54:	3a 83       	std	Y+2, r19	; 0x02
    1c56:	4b 83       	std	Y+3, r20	; 0x03
    1c58:	5c 83       	std	Y+4, r21	; 0x04
    1c5a:	6d 83       	std	Y+5, r22	; 0x05
    1c5c:	7e 83       	std	Y+6, r23	; 0x06
    1c5e:	af 83       	std	Y+7, r26	; 0x07
    1c60:	98 87       	std	Y+8, r25	; 0x08
    1c62:	80 e2       	ldi	r24, 0x20	; 32
    1c64:	80 1b       	sub	r24, r16
    1c66:	4d 81       	ldd	r20, Y+5	; 0x05
    1c68:	5e 81       	ldd	r21, Y+6	; 0x06
    1c6a:	6f 81       	ldd	r22, Y+7	; 0x07
    1c6c:	78 85       	ldd	r23, Y+8	; 0x08
    1c6e:	e8 2f       	mov	r30, r24
    1c70:	ff 27       	eor	r31, r31
    1c72:	e7 fd       	sbrc	r30, 7
    1c74:	f0 95       	com	r31
    1c76:	18 16       	cp	r1, r24
    1c78:	b4 f0       	brlt	.+44     	; 0x1ca6 <__ashrdi3+0x88>
    1c7a:	db 01       	movw	r26, r22
    1c7c:	ca 01       	movw	r24, r20
    1c7e:	bb 0f       	add	r27, r27
    1c80:	88 0b       	sbc	r24, r24
    1c82:	98 2f       	mov	r25, r24
    1c84:	dc 01       	movw	r26, r24
    1c86:	8d 87       	std	Y+13, r24	; 0x0d
    1c88:	9e 87       	std	Y+14, r25	; 0x0e
    1c8a:	af 87       	std	Y+15, r26	; 0x0f
    1c8c:	b8 8b       	std	Y+16, r27	; 0x10
    1c8e:	88 27       	eor	r24, r24
    1c90:	99 27       	eor	r25, r25
    1c92:	8e 1b       	sub	r24, r30
    1c94:	9f 0b       	sbc	r25, r31
    1c96:	04 c0       	rjmp	.+8      	; 0x1ca0 <__ashrdi3+0x82>
    1c98:	75 95       	asr	r23
    1c9a:	67 95       	ror	r22
    1c9c:	57 95       	ror	r21
    1c9e:	47 95       	ror	r20
    1ca0:	8a 95       	dec	r24
    1ca2:	d2 f7       	brpl	.-12     	; 0x1c98 <__ashrdi3+0x7a>
    1ca4:	28 c0       	rjmp	.+80     	; 0x1cf6 <__ashrdi3+0xd8>
    1ca6:	20 2f       	mov	r18, r16
    1ca8:	33 27       	eor	r19, r19
    1caa:	27 fd       	sbrc	r18, 7
    1cac:	30 95       	com	r19
    1cae:	db 01       	movw	r26, r22
    1cb0:	ca 01       	movw	r24, r20
    1cb2:	02 2e       	mov	r0, r18
    1cb4:	04 c0       	rjmp	.+8      	; 0x1cbe <__ashrdi3+0xa0>
    1cb6:	b5 95       	asr	r27
    1cb8:	a7 95       	ror	r26
    1cba:	97 95       	ror	r25
    1cbc:	87 95       	ror	r24
    1cbe:	0a 94       	dec	r0
    1cc0:	d2 f7       	brpl	.-12     	; 0x1cb6 <__ashrdi3+0x98>
    1cc2:	8d 87       	std	Y+13, r24	; 0x0d
    1cc4:	9e 87       	std	Y+14, r25	; 0x0e
    1cc6:	af 87       	std	Y+15, r26	; 0x0f
    1cc8:	b8 8b       	std	Y+16, r27	; 0x10
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <__ashrdi3+0xb6>
    1ccc:	44 0f       	add	r20, r20
    1cce:	55 1f       	adc	r21, r21
    1cd0:	66 1f       	adc	r22, r22
    1cd2:	77 1f       	adc	r23, r23
    1cd4:	ea 95       	dec	r30
    1cd6:	d2 f7       	brpl	.-12     	; 0x1ccc <__ashrdi3+0xae>
    1cd8:	89 81       	ldd	r24, Y+1	; 0x01
    1cda:	9a 81       	ldd	r25, Y+2	; 0x02
    1cdc:	ab 81       	ldd	r26, Y+3	; 0x03
    1cde:	bc 81       	ldd	r27, Y+4	; 0x04
    1ce0:	04 c0       	rjmp	.+8      	; 0x1cea <__ashrdi3+0xcc>
    1ce2:	b6 95       	lsr	r27
    1ce4:	a7 95       	ror	r26
    1ce6:	97 95       	ror	r25
    1ce8:	87 95       	ror	r24
    1cea:	2a 95       	dec	r18
    1cec:	d2 f7       	brpl	.-12     	; 0x1ce2 <__ashrdi3+0xc4>
    1cee:	48 2b       	or	r20, r24
    1cf0:	59 2b       	or	r21, r25
    1cf2:	6a 2b       	or	r22, r26
    1cf4:	7b 2b       	or	r23, r27
    1cf6:	49 87       	std	Y+9, r20	; 0x09
    1cf8:	5a 87       	std	Y+10, r21	; 0x0a
    1cfa:	6b 87       	std	Y+11, r22	; 0x0b
    1cfc:	7c 87       	std	Y+12, r23	; 0x0c
    1cfe:	29 85       	ldd	r18, Y+9	; 0x09
    1d00:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d02:	4b 85       	ldd	r20, Y+11	; 0x0b
    1d04:	5c 85       	ldd	r21, Y+12	; 0x0c
    1d06:	6d 85       	ldd	r22, Y+13	; 0x0d
    1d08:	7e 85       	ldd	r23, Y+14	; 0x0e
    1d0a:	af 85       	ldd	r26, Y+15	; 0x0f
    1d0c:	98 89       	ldd	r25, Y+16	; 0x10
    1d0e:	8a 2f       	mov	r24, r26
    1d10:	60 96       	adiw	r28, 0x10	; 16
    1d12:	0f b6       	in	r0, 0x3f	; 63
    1d14:	f8 94       	cli
    1d16:	de bf       	out	0x3e, r29	; 62
    1d18:	0f be       	out	0x3f, r0	; 63
    1d1a:	cd bf       	out	0x3d, r28	; 61
    1d1c:	cf 91       	pop	r28
    1d1e:	df 91       	pop	r29
    1d20:	0f 91       	pop	r16
    1d22:	ff 90       	pop	r15
    1d24:	ef 90       	pop	r14
    1d26:	08 95       	ret

00001d28 <__clzsi2>:
    1d28:	ef 92       	push	r14
    1d2a:	ff 92       	push	r15
    1d2c:	0f 93       	push	r16
    1d2e:	1f 93       	push	r17
    1d30:	7b 01       	movw	r14, r22
    1d32:	8c 01       	movw	r16, r24
    1d34:	80 e0       	ldi	r24, 0x00	; 0
    1d36:	e8 16       	cp	r14, r24
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	f8 06       	cpc	r15, r24
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	08 07       	cpc	r16, r24
    1d40:	80 e0       	ldi	r24, 0x00	; 0
    1d42:	18 07       	cpc	r17, r24
    1d44:	88 f4       	brcc	.+34     	; 0x1d68 <__clzsi2+0x40>
    1d46:	8f ef       	ldi	r24, 0xFF	; 255
    1d48:	e8 16       	cp	r14, r24
    1d4a:	f1 04       	cpc	r15, r1
    1d4c:	01 05       	cpc	r16, r1
    1d4e:	11 05       	cpc	r17, r1
    1d50:	31 f0       	breq	.+12     	; 0x1d5e <__clzsi2+0x36>
    1d52:	28 f0       	brcs	.+10     	; 0x1d5e <__clzsi2+0x36>
    1d54:	88 e0       	ldi	r24, 0x08	; 8
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	a0 e0       	ldi	r26, 0x00	; 0
    1d5a:	b0 e0       	ldi	r27, 0x00	; 0
    1d5c:	17 c0       	rjmp	.+46     	; 0x1d8c <__clzsi2+0x64>
    1d5e:	80 e0       	ldi	r24, 0x00	; 0
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	a0 e0       	ldi	r26, 0x00	; 0
    1d64:	b0 e0       	ldi	r27, 0x00	; 0
    1d66:	12 c0       	rjmp	.+36     	; 0x1d8c <__clzsi2+0x64>
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	e8 16       	cp	r14, r24
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	f8 06       	cpc	r15, r24
    1d70:	80 e0       	ldi	r24, 0x00	; 0
    1d72:	08 07       	cpc	r16, r24
    1d74:	81 e0       	ldi	r24, 0x01	; 1
    1d76:	18 07       	cpc	r17, r24
    1d78:	28 f0       	brcs	.+10     	; 0x1d84 <__clzsi2+0x5c>
    1d7a:	88 e1       	ldi	r24, 0x18	; 24
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	a0 e0       	ldi	r26, 0x00	; 0
    1d80:	b0 e0       	ldi	r27, 0x00	; 0
    1d82:	04 c0       	rjmp	.+8      	; 0x1d8c <__clzsi2+0x64>
    1d84:	80 e1       	ldi	r24, 0x10	; 16
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	a0 e0       	ldi	r26, 0x00	; 0
    1d8a:	b0 e0       	ldi	r27, 0x00	; 0
    1d8c:	20 e2       	ldi	r18, 0x20	; 32
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	40 e0       	ldi	r20, 0x00	; 0
    1d92:	50 e0       	ldi	r21, 0x00	; 0
    1d94:	28 1b       	sub	r18, r24
    1d96:	39 0b       	sbc	r19, r25
    1d98:	4a 0b       	sbc	r20, r26
    1d9a:	5b 0b       	sbc	r21, r27
    1d9c:	04 c0       	rjmp	.+8      	; 0x1da6 <__clzsi2+0x7e>
    1d9e:	16 95       	lsr	r17
    1da0:	07 95       	ror	r16
    1da2:	f7 94       	ror	r15
    1da4:	e7 94       	ror	r14
    1da6:	8a 95       	dec	r24
    1da8:	d2 f7       	brpl	.-12     	; 0x1d9e <__clzsi2+0x76>
    1daa:	f7 01       	movw	r30, r14
    1dac:	e8 59       	subi	r30, 0x98	; 152
    1dae:	ff 4f       	sbci	r31, 0xFF	; 255
    1db0:	80 81       	ld	r24, Z
    1db2:	28 1b       	sub	r18, r24
    1db4:	31 09       	sbc	r19, r1
    1db6:	41 09       	sbc	r20, r1
    1db8:	51 09       	sbc	r21, r1
    1dba:	c9 01       	movw	r24, r18
    1dbc:	1f 91       	pop	r17
    1dbe:	0f 91       	pop	r16
    1dc0:	ff 90       	pop	r15
    1dc2:	ef 90       	pop	r14
    1dc4:	08 95       	ret

00001dc6 <__pack_f>:
    1dc6:	df 92       	push	r13
    1dc8:	ef 92       	push	r14
    1dca:	ff 92       	push	r15
    1dcc:	0f 93       	push	r16
    1dce:	1f 93       	push	r17
    1dd0:	fc 01       	movw	r30, r24
    1dd2:	e4 80       	ldd	r14, Z+4	; 0x04
    1dd4:	f5 80       	ldd	r15, Z+5	; 0x05
    1dd6:	06 81       	ldd	r16, Z+6	; 0x06
    1dd8:	17 81       	ldd	r17, Z+7	; 0x07
    1dda:	d1 80       	ldd	r13, Z+1	; 0x01
    1ddc:	80 81       	ld	r24, Z
    1dde:	82 30       	cpi	r24, 0x02	; 2
    1de0:	48 f4       	brcc	.+18     	; 0x1df4 <__pack_f+0x2e>
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	a0 e1       	ldi	r26, 0x10	; 16
    1de8:	b0 e0       	ldi	r27, 0x00	; 0
    1dea:	e8 2a       	or	r14, r24
    1dec:	f9 2a       	or	r15, r25
    1dee:	0a 2b       	or	r16, r26
    1df0:	1b 2b       	or	r17, r27
    1df2:	a5 c0       	rjmp	.+330    	; 0x1f3e <__pack_f+0x178>
    1df4:	84 30       	cpi	r24, 0x04	; 4
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <__pack_f+0x34>
    1df8:	9f c0       	rjmp	.+318    	; 0x1f38 <__pack_f+0x172>
    1dfa:	82 30       	cpi	r24, 0x02	; 2
    1dfc:	21 f4       	brne	.+8      	; 0x1e06 <__pack_f+0x40>
    1dfe:	ee 24       	eor	r14, r14
    1e00:	ff 24       	eor	r15, r15
    1e02:	87 01       	movw	r16, r14
    1e04:	05 c0       	rjmp	.+10     	; 0x1e10 <__pack_f+0x4a>
    1e06:	e1 14       	cp	r14, r1
    1e08:	f1 04       	cpc	r15, r1
    1e0a:	01 05       	cpc	r16, r1
    1e0c:	11 05       	cpc	r17, r1
    1e0e:	19 f4       	brne	.+6      	; 0x1e16 <__pack_f+0x50>
    1e10:	e0 e0       	ldi	r30, 0x00	; 0
    1e12:	f0 e0       	ldi	r31, 0x00	; 0
    1e14:	96 c0       	rjmp	.+300    	; 0x1f42 <__pack_f+0x17c>
    1e16:	62 81       	ldd	r22, Z+2	; 0x02
    1e18:	73 81       	ldd	r23, Z+3	; 0x03
    1e1a:	9f ef       	ldi	r25, 0xFF	; 255
    1e1c:	62 38       	cpi	r22, 0x82	; 130
    1e1e:	79 07       	cpc	r23, r25
    1e20:	0c f0       	brlt	.+2      	; 0x1e24 <__pack_f+0x5e>
    1e22:	5b c0       	rjmp	.+182    	; 0x1eda <__pack_f+0x114>
    1e24:	22 e8       	ldi	r18, 0x82	; 130
    1e26:	3f ef       	ldi	r19, 0xFF	; 255
    1e28:	26 1b       	sub	r18, r22
    1e2a:	37 0b       	sbc	r19, r23
    1e2c:	2a 31       	cpi	r18, 0x1A	; 26
    1e2e:	31 05       	cpc	r19, r1
    1e30:	2c f0       	brlt	.+10     	; 0x1e3c <__pack_f+0x76>
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	40 e0       	ldi	r20, 0x00	; 0
    1e38:	50 e0       	ldi	r21, 0x00	; 0
    1e3a:	2a c0       	rjmp	.+84     	; 0x1e90 <__pack_f+0xca>
    1e3c:	b8 01       	movw	r22, r16
    1e3e:	a7 01       	movw	r20, r14
    1e40:	02 2e       	mov	r0, r18
    1e42:	04 c0       	rjmp	.+8      	; 0x1e4c <__pack_f+0x86>
    1e44:	76 95       	lsr	r23
    1e46:	67 95       	ror	r22
    1e48:	57 95       	ror	r21
    1e4a:	47 95       	ror	r20
    1e4c:	0a 94       	dec	r0
    1e4e:	d2 f7       	brpl	.-12     	; 0x1e44 <__pack_f+0x7e>
    1e50:	81 e0       	ldi	r24, 0x01	; 1
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	a0 e0       	ldi	r26, 0x00	; 0
    1e56:	b0 e0       	ldi	r27, 0x00	; 0
    1e58:	04 c0       	rjmp	.+8      	; 0x1e62 <__pack_f+0x9c>
    1e5a:	88 0f       	add	r24, r24
    1e5c:	99 1f       	adc	r25, r25
    1e5e:	aa 1f       	adc	r26, r26
    1e60:	bb 1f       	adc	r27, r27
    1e62:	2a 95       	dec	r18
    1e64:	d2 f7       	brpl	.-12     	; 0x1e5a <__pack_f+0x94>
    1e66:	01 97       	sbiw	r24, 0x01	; 1
    1e68:	a1 09       	sbc	r26, r1
    1e6a:	b1 09       	sbc	r27, r1
    1e6c:	8e 21       	and	r24, r14
    1e6e:	9f 21       	and	r25, r15
    1e70:	a0 23       	and	r26, r16
    1e72:	b1 23       	and	r27, r17
    1e74:	00 97       	sbiw	r24, 0x00	; 0
    1e76:	a1 05       	cpc	r26, r1
    1e78:	b1 05       	cpc	r27, r1
    1e7a:	21 f0       	breq	.+8      	; 0x1e84 <__pack_f+0xbe>
    1e7c:	81 e0       	ldi	r24, 0x01	; 1
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	a0 e0       	ldi	r26, 0x00	; 0
    1e82:	b0 e0       	ldi	r27, 0x00	; 0
    1e84:	9a 01       	movw	r18, r20
    1e86:	ab 01       	movw	r20, r22
    1e88:	28 2b       	or	r18, r24
    1e8a:	39 2b       	or	r19, r25
    1e8c:	4a 2b       	or	r20, r26
    1e8e:	5b 2b       	or	r21, r27
    1e90:	da 01       	movw	r26, r20
    1e92:	c9 01       	movw	r24, r18
    1e94:	8f 77       	andi	r24, 0x7F	; 127
    1e96:	90 70       	andi	r25, 0x00	; 0
    1e98:	a0 70       	andi	r26, 0x00	; 0
    1e9a:	b0 70       	andi	r27, 0x00	; 0
    1e9c:	80 34       	cpi	r24, 0x40	; 64
    1e9e:	91 05       	cpc	r25, r1
    1ea0:	a1 05       	cpc	r26, r1
    1ea2:	b1 05       	cpc	r27, r1
    1ea4:	39 f4       	brne	.+14     	; 0x1eb4 <__pack_f+0xee>
    1ea6:	27 ff       	sbrs	r18, 7
    1ea8:	09 c0       	rjmp	.+18     	; 0x1ebc <__pack_f+0xf6>
    1eaa:	20 5c       	subi	r18, 0xC0	; 192
    1eac:	3f 4f       	sbci	r19, 0xFF	; 255
    1eae:	4f 4f       	sbci	r20, 0xFF	; 255
    1eb0:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb2:	04 c0       	rjmp	.+8      	; 0x1ebc <__pack_f+0xf6>
    1eb4:	21 5c       	subi	r18, 0xC1	; 193
    1eb6:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb8:	4f 4f       	sbci	r20, 0xFF	; 255
    1eba:	5f 4f       	sbci	r21, 0xFF	; 255
    1ebc:	e0 e0       	ldi	r30, 0x00	; 0
    1ebe:	f0 e0       	ldi	r31, 0x00	; 0
    1ec0:	20 30       	cpi	r18, 0x00	; 0
    1ec2:	a0 e0       	ldi	r26, 0x00	; 0
    1ec4:	3a 07       	cpc	r19, r26
    1ec6:	a0 e0       	ldi	r26, 0x00	; 0
    1ec8:	4a 07       	cpc	r20, r26
    1eca:	a0 e4       	ldi	r26, 0x40	; 64
    1ecc:	5a 07       	cpc	r21, r26
    1ece:	10 f0       	brcs	.+4      	; 0x1ed4 <__pack_f+0x10e>
    1ed0:	e1 e0       	ldi	r30, 0x01	; 1
    1ed2:	f0 e0       	ldi	r31, 0x00	; 0
    1ed4:	79 01       	movw	r14, r18
    1ed6:	8a 01       	movw	r16, r20
    1ed8:	27 c0       	rjmp	.+78     	; 0x1f28 <__pack_f+0x162>
    1eda:	60 38       	cpi	r22, 0x80	; 128
    1edc:	71 05       	cpc	r23, r1
    1ede:	64 f5       	brge	.+88     	; 0x1f38 <__pack_f+0x172>
    1ee0:	fb 01       	movw	r30, r22
    1ee2:	e1 58       	subi	r30, 0x81	; 129
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	d8 01       	movw	r26, r16
    1ee8:	c7 01       	movw	r24, r14
    1eea:	8f 77       	andi	r24, 0x7F	; 127
    1eec:	90 70       	andi	r25, 0x00	; 0
    1eee:	a0 70       	andi	r26, 0x00	; 0
    1ef0:	b0 70       	andi	r27, 0x00	; 0
    1ef2:	80 34       	cpi	r24, 0x40	; 64
    1ef4:	91 05       	cpc	r25, r1
    1ef6:	a1 05       	cpc	r26, r1
    1ef8:	b1 05       	cpc	r27, r1
    1efa:	39 f4       	brne	.+14     	; 0x1f0a <__pack_f+0x144>
    1efc:	e7 fe       	sbrs	r14, 7
    1efe:	0d c0       	rjmp	.+26     	; 0x1f1a <__pack_f+0x154>
    1f00:	80 e4       	ldi	r24, 0x40	; 64
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	a0 e0       	ldi	r26, 0x00	; 0
    1f06:	b0 e0       	ldi	r27, 0x00	; 0
    1f08:	04 c0       	rjmp	.+8      	; 0x1f12 <__pack_f+0x14c>
    1f0a:	8f e3       	ldi	r24, 0x3F	; 63
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	a0 e0       	ldi	r26, 0x00	; 0
    1f10:	b0 e0       	ldi	r27, 0x00	; 0
    1f12:	e8 0e       	add	r14, r24
    1f14:	f9 1e       	adc	r15, r25
    1f16:	0a 1f       	adc	r16, r26
    1f18:	1b 1f       	adc	r17, r27
    1f1a:	17 ff       	sbrs	r17, 7
    1f1c:	05 c0       	rjmp	.+10     	; 0x1f28 <__pack_f+0x162>
    1f1e:	16 95       	lsr	r17
    1f20:	07 95       	ror	r16
    1f22:	f7 94       	ror	r15
    1f24:	e7 94       	ror	r14
    1f26:	31 96       	adiw	r30, 0x01	; 1
    1f28:	87 e0       	ldi	r24, 0x07	; 7
    1f2a:	16 95       	lsr	r17
    1f2c:	07 95       	ror	r16
    1f2e:	f7 94       	ror	r15
    1f30:	e7 94       	ror	r14
    1f32:	8a 95       	dec	r24
    1f34:	d1 f7       	brne	.-12     	; 0x1f2a <__pack_f+0x164>
    1f36:	05 c0       	rjmp	.+10     	; 0x1f42 <__pack_f+0x17c>
    1f38:	ee 24       	eor	r14, r14
    1f3a:	ff 24       	eor	r15, r15
    1f3c:	87 01       	movw	r16, r14
    1f3e:	ef ef       	ldi	r30, 0xFF	; 255
    1f40:	f0 e0       	ldi	r31, 0x00	; 0
    1f42:	6e 2f       	mov	r22, r30
    1f44:	67 95       	ror	r22
    1f46:	66 27       	eor	r22, r22
    1f48:	67 95       	ror	r22
    1f4a:	90 2f       	mov	r25, r16
    1f4c:	9f 77       	andi	r25, 0x7F	; 127
    1f4e:	d7 94       	ror	r13
    1f50:	dd 24       	eor	r13, r13
    1f52:	d7 94       	ror	r13
    1f54:	8e 2f       	mov	r24, r30
    1f56:	86 95       	lsr	r24
    1f58:	49 2f       	mov	r20, r25
    1f5a:	46 2b       	or	r20, r22
    1f5c:	58 2f       	mov	r21, r24
    1f5e:	5d 29       	or	r21, r13
    1f60:	b7 01       	movw	r22, r14
    1f62:	ca 01       	movw	r24, r20
    1f64:	1f 91       	pop	r17
    1f66:	0f 91       	pop	r16
    1f68:	ff 90       	pop	r15
    1f6a:	ef 90       	pop	r14
    1f6c:	df 90       	pop	r13
    1f6e:	08 95       	ret

00001f70 <__unpack_f>:
    1f70:	fc 01       	movw	r30, r24
    1f72:	db 01       	movw	r26, r22
    1f74:	40 81       	ld	r20, Z
    1f76:	51 81       	ldd	r21, Z+1	; 0x01
    1f78:	22 81       	ldd	r18, Z+2	; 0x02
    1f7a:	62 2f       	mov	r22, r18
    1f7c:	6f 77       	andi	r22, 0x7F	; 127
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	22 1f       	adc	r18, r18
    1f82:	22 27       	eor	r18, r18
    1f84:	22 1f       	adc	r18, r18
    1f86:	93 81       	ldd	r25, Z+3	; 0x03
    1f88:	89 2f       	mov	r24, r25
    1f8a:	88 0f       	add	r24, r24
    1f8c:	82 2b       	or	r24, r18
    1f8e:	28 2f       	mov	r18, r24
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	99 1f       	adc	r25, r25
    1f94:	99 27       	eor	r25, r25
    1f96:	99 1f       	adc	r25, r25
    1f98:	11 96       	adiw	r26, 0x01	; 1
    1f9a:	9c 93       	st	X, r25
    1f9c:	11 97       	sbiw	r26, 0x01	; 1
    1f9e:	21 15       	cp	r18, r1
    1fa0:	31 05       	cpc	r19, r1
    1fa2:	a9 f5       	brne	.+106    	; 0x200e <__unpack_f+0x9e>
    1fa4:	41 15       	cp	r20, r1
    1fa6:	51 05       	cpc	r21, r1
    1fa8:	61 05       	cpc	r22, r1
    1faa:	71 05       	cpc	r23, r1
    1fac:	11 f4       	brne	.+4      	; 0x1fb2 <__unpack_f+0x42>
    1fae:	82 e0       	ldi	r24, 0x02	; 2
    1fb0:	37 c0       	rjmp	.+110    	; 0x2020 <__unpack_f+0xb0>
    1fb2:	82 e8       	ldi	r24, 0x82	; 130
    1fb4:	9f ef       	ldi	r25, 0xFF	; 255
    1fb6:	13 96       	adiw	r26, 0x03	; 3
    1fb8:	9c 93       	st	X, r25
    1fba:	8e 93       	st	-X, r24
    1fbc:	12 97       	sbiw	r26, 0x02	; 2
    1fbe:	9a 01       	movw	r18, r20
    1fc0:	ab 01       	movw	r20, r22
    1fc2:	67 e0       	ldi	r22, 0x07	; 7
    1fc4:	22 0f       	add	r18, r18
    1fc6:	33 1f       	adc	r19, r19
    1fc8:	44 1f       	adc	r20, r20
    1fca:	55 1f       	adc	r21, r21
    1fcc:	6a 95       	dec	r22
    1fce:	d1 f7       	brne	.-12     	; 0x1fc4 <__unpack_f+0x54>
    1fd0:	83 e0       	ldi	r24, 0x03	; 3
    1fd2:	8c 93       	st	X, r24
    1fd4:	0d c0       	rjmp	.+26     	; 0x1ff0 <__unpack_f+0x80>
    1fd6:	22 0f       	add	r18, r18
    1fd8:	33 1f       	adc	r19, r19
    1fda:	44 1f       	adc	r20, r20
    1fdc:	55 1f       	adc	r21, r21
    1fde:	12 96       	adiw	r26, 0x02	; 2
    1fe0:	8d 91       	ld	r24, X+
    1fe2:	9c 91       	ld	r25, X
    1fe4:	13 97       	sbiw	r26, 0x03	; 3
    1fe6:	01 97       	sbiw	r24, 0x01	; 1
    1fe8:	13 96       	adiw	r26, 0x03	; 3
    1fea:	9c 93       	st	X, r25
    1fec:	8e 93       	st	-X, r24
    1fee:	12 97       	sbiw	r26, 0x02	; 2
    1ff0:	20 30       	cpi	r18, 0x00	; 0
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	38 07       	cpc	r19, r24
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	48 07       	cpc	r20, r24
    1ffa:	80 e4       	ldi	r24, 0x40	; 64
    1ffc:	58 07       	cpc	r21, r24
    1ffe:	58 f3       	brcs	.-42     	; 0x1fd6 <__unpack_f+0x66>
    2000:	14 96       	adiw	r26, 0x04	; 4
    2002:	2d 93       	st	X+, r18
    2004:	3d 93       	st	X+, r19
    2006:	4d 93       	st	X+, r20
    2008:	5c 93       	st	X, r21
    200a:	17 97       	sbiw	r26, 0x07	; 7
    200c:	08 95       	ret
    200e:	2f 3f       	cpi	r18, 0xFF	; 255
    2010:	31 05       	cpc	r19, r1
    2012:	79 f4       	brne	.+30     	; 0x2032 <__unpack_f+0xc2>
    2014:	41 15       	cp	r20, r1
    2016:	51 05       	cpc	r21, r1
    2018:	61 05       	cpc	r22, r1
    201a:	71 05       	cpc	r23, r1
    201c:	19 f4       	brne	.+6      	; 0x2024 <__unpack_f+0xb4>
    201e:	84 e0       	ldi	r24, 0x04	; 4
    2020:	8c 93       	st	X, r24
    2022:	08 95       	ret
    2024:	64 ff       	sbrs	r22, 4
    2026:	03 c0       	rjmp	.+6      	; 0x202e <__unpack_f+0xbe>
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	8c 93       	st	X, r24
    202c:	12 c0       	rjmp	.+36     	; 0x2052 <__unpack_f+0xe2>
    202e:	1c 92       	st	X, r1
    2030:	10 c0       	rjmp	.+32     	; 0x2052 <__unpack_f+0xe2>
    2032:	2f 57       	subi	r18, 0x7F	; 127
    2034:	30 40       	sbci	r19, 0x00	; 0
    2036:	13 96       	adiw	r26, 0x03	; 3
    2038:	3c 93       	st	X, r19
    203a:	2e 93       	st	-X, r18
    203c:	12 97       	sbiw	r26, 0x02	; 2
    203e:	83 e0       	ldi	r24, 0x03	; 3
    2040:	8c 93       	st	X, r24
    2042:	87 e0       	ldi	r24, 0x07	; 7
    2044:	44 0f       	add	r20, r20
    2046:	55 1f       	adc	r21, r21
    2048:	66 1f       	adc	r22, r22
    204a:	77 1f       	adc	r23, r23
    204c:	8a 95       	dec	r24
    204e:	d1 f7       	brne	.-12     	; 0x2044 <__unpack_f+0xd4>
    2050:	70 64       	ori	r23, 0x40	; 64
    2052:	14 96       	adiw	r26, 0x04	; 4
    2054:	4d 93       	st	X+, r20
    2056:	5d 93       	st	X+, r21
    2058:	6d 93       	st	X+, r22
    205a:	7c 93       	st	X, r23
    205c:	17 97       	sbiw	r26, 0x07	; 7
    205e:	08 95       	ret

00002060 <__fpcmp_parts_f>:
    2060:	1f 93       	push	r17
    2062:	dc 01       	movw	r26, r24
    2064:	fb 01       	movw	r30, r22
    2066:	9c 91       	ld	r25, X
    2068:	92 30       	cpi	r25, 0x02	; 2
    206a:	08 f4       	brcc	.+2      	; 0x206e <__fpcmp_parts_f+0xe>
    206c:	47 c0       	rjmp	.+142    	; 0x20fc <__fpcmp_parts_f+0x9c>
    206e:	80 81       	ld	r24, Z
    2070:	82 30       	cpi	r24, 0x02	; 2
    2072:	08 f4       	brcc	.+2      	; 0x2076 <__fpcmp_parts_f+0x16>
    2074:	43 c0       	rjmp	.+134    	; 0x20fc <__fpcmp_parts_f+0x9c>
    2076:	94 30       	cpi	r25, 0x04	; 4
    2078:	51 f4       	brne	.+20     	; 0x208e <__fpcmp_parts_f+0x2e>
    207a:	11 96       	adiw	r26, 0x01	; 1
    207c:	1c 91       	ld	r17, X
    207e:	84 30       	cpi	r24, 0x04	; 4
    2080:	99 f5       	brne	.+102    	; 0x20e8 <__fpcmp_parts_f+0x88>
    2082:	81 81       	ldd	r24, Z+1	; 0x01
    2084:	68 2f       	mov	r22, r24
    2086:	70 e0       	ldi	r23, 0x00	; 0
    2088:	61 1b       	sub	r22, r17
    208a:	71 09       	sbc	r23, r1
    208c:	3f c0       	rjmp	.+126    	; 0x210c <__fpcmp_parts_f+0xac>
    208e:	84 30       	cpi	r24, 0x04	; 4
    2090:	21 f0       	breq	.+8      	; 0x209a <__fpcmp_parts_f+0x3a>
    2092:	92 30       	cpi	r25, 0x02	; 2
    2094:	31 f4       	brne	.+12     	; 0x20a2 <__fpcmp_parts_f+0x42>
    2096:	82 30       	cpi	r24, 0x02	; 2
    2098:	b9 f1       	breq	.+110    	; 0x2108 <__fpcmp_parts_f+0xa8>
    209a:	81 81       	ldd	r24, Z+1	; 0x01
    209c:	88 23       	and	r24, r24
    209e:	89 f1       	breq	.+98     	; 0x2102 <__fpcmp_parts_f+0xa2>
    20a0:	2d c0       	rjmp	.+90     	; 0x20fc <__fpcmp_parts_f+0x9c>
    20a2:	11 96       	adiw	r26, 0x01	; 1
    20a4:	1c 91       	ld	r17, X
    20a6:	11 97       	sbiw	r26, 0x01	; 1
    20a8:	82 30       	cpi	r24, 0x02	; 2
    20aa:	f1 f0       	breq	.+60     	; 0x20e8 <__fpcmp_parts_f+0x88>
    20ac:	81 81       	ldd	r24, Z+1	; 0x01
    20ae:	18 17       	cp	r17, r24
    20b0:	d9 f4       	brne	.+54     	; 0x20e8 <__fpcmp_parts_f+0x88>
    20b2:	12 96       	adiw	r26, 0x02	; 2
    20b4:	2d 91       	ld	r18, X+
    20b6:	3c 91       	ld	r19, X
    20b8:	13 97       	sbiw	r26, 0x03	; 3
    20ba:	82 81       	ldd	r24, Z+2	; 0x02
    20bc:	93 81       	ldd	r25, Z+3	; 0x03
    20be:	82 17       	cp	r24, r18
    20c0:	93 07       	cpc	r25, r19
    20c2:	94 f0       	brlt	.+36     	; 0x20e8 <__fpcmp_parts_f+0x88>
    20c4:	28 17       	cp	r18, r24
    20c6:	39 07       	cpc	r19, r25
    20c8:	bc f0       	brlt	.+46     	; 0x20f8 <__fpcmp_parts_f+0x98>
    20ca:	14 96       	adiw	r26, 0x04	; 4
    20cc:	8d 91       	ld	r24, X+
    20ce:	9d 91       	ld	r25, X+
    20d0:	0d 90       	ld	r0, X+
    20d2:	bc 91       	ld	r27, X
    20d4:	a0 2d       	mov	r26, r0
    20d6:	24 81       	ldd	r18, Z+4	; 0x04
    20d8:	35 81       	ldd	r19, Z+5	; 0x05
    20da:	46 81       	ldd	r20, Z+6	; 0x06
    20dc:	57 81       	ldd	r21, Z+7	; 0x07
    20de:	28 17       	cp	r18, r24
    20e0:	39 07       	cpc	r19, r25
    20e2:	4a 07       	cpc	r20, r26
    20e4:	5b 07       	cpc	r21, r27
    20e6:	18 f4       	brcc	.+6      	; 0x20ee <__fpcmp_parts_f+0x8e>
    20e8:	11 23       	and	r17, r17
    20ea:	41 f0       	breq	.+16     	; 0x20fc <__fpcmp_parts_f+0x9c>
    20ec:	0a c0       	rjmp	.+20     	; 0x2102 <__fpcmp_parts_f+0xa2>
    20ee:	82 17       	cp	r24, r18
    20f0:	93 07       	cpc	r25, r19
    20f2:	a4 07       	cpc	r26, r20
    20f4:	b5 07       	cpc	r27, r21
    20f6:	40 f4       	brcc	.+16     	; 0x2108 <__fpcmp_parts_f+0xa8>
    20f8:	11 23       	and	r17, r17
    20fa:	19 f0       	breq	.+6      	; 0x2102 <__fpcmp_parts_f+0xa2>
    20fc:	61 e0       	ldi	r22, 0x01	; 1
    20fe:	70 e0       	ldi	r23, 0x00	; 0
    2100:	05 c0       	rjmp	.+10     	; 0x210c <__fpcmp_parts_f+0xac>
    2102:	6f ef       	ldi	r22, 0xFF	; 255
    2104:	7f ef       	ldi	r23, 0xFF	; 255
    2106:	02 c0       	rjmp	.+4      	; 0x210c <__fpcmp_parts_f+0xac>
    2108:	60 e0       	ldi	r22, 0x00	; 0
    210a:	70 e0       	ldi	r23, 0x00	; 0
    210c:	cb 01       	movw	r24, r22
    210e:	1f 91       	pop	r17
    2110:	08 95       	ret

00002112 <__vector_13>:
#include "UART.h"
#include <avr/io.h> //todo remove this

void (*ISR_USART_RXC)(), (*ISR_USART_TXC)(), (*ISR_USART_DRE)();

void USART_RXC_vect() {
    2112:	df 93       	push	r29
    2114:	cf 93       	push	r28
    2116:	cd b7       	in	r28, 0x3d	; 61
    2118:	de b7       	in	r29, 0x3e	; 62
	if (ISR_USART_RXC)
    211a:	80 91 6a 01 	lds	r24, 0x016A
    211e:	90 91 6b 01 	lds	r25, 0x016B
    2122:	00 97       	sbiw	r24, 0x00	; 0
    2124:	29 f0       	breq	.+10     	; 0x2130 <__vector_13+0x1e>
		ISR_USART_RXC();
    2126:	e0 91 6a 01 	lds	r30, 0x016A
    212a:	f0 91 6b 01 	lds	r31, 0x016B
    212e:	09 95       	icall
	UCSRA |= (1 << RXC);
    2130:	ab e2       	ldi	r26, 0x2B	; 43
    2132:	b0 e0       	ldi	r27, 0x00	; 0
    2134:	eb e2       	ldi	r30, 0x2B	; 43
    2136:	f0 e0       	ldi	r31, 0x00	; 0
    2138:	80 81       	ld	r24, Z
    213a:	80 68       	ori	r24, 0x80	; 128
    213c:	8c 93       	st	X, r24
	sei();
    213e:	78 94       	sei
}
    2140:	cf 91       	pop	r28
    2142:	df 91       	pop	r29
    2144:	08 95       	ret

00002146 <__vector_15>:
void USART_TXC_vect() {
    2146:	df 93       	push	r29
    2148:	cf 93       	push	r28
    214a:	cd b7       	in	r28, 0x3d	; 61
    214c:	de b7       	in	r29, 0x3e	; 62
	if (ISR_USART_TXC)
    214e:	80 91 6c 01 	lds	r24, 0x016C
    2152:	90 91 6d 01 	lds	r25, 0x016D
    2156:	00 97       	sbiw	r24, 0x00	; 0
    2158:	29 f0       	breq	.+10     	; 0x2164 <__vector_15+0x1e>
		ISR_USART_TXC();
    215a:	e0 91 6c 01 	lds	r30, 0x016C
    215e:	f0 91 6d 01 	lds	r31, 0x016D
    2162:	09 95       	icall
	UCSRA |= (1 << TXC);
    2164:	ab e2       	ldi	r26, 0x2B	; 43
    2166:	b0 e0       	ldi	r27, 0x00	; 0
    2168:	eb e2       	ldi	r30, 0x2B	; 43
    216a:	f0 e0       	ldi	r31, 0x00	; 0
    216c:	80 81       	ld	r24, Z
    216e:	80 64       	ori	r24, 0x40	; 64
    2170:	8c 93       	st	X, r24
	sei();
    2172:	78 94       	sei
}
    2174:	cf 91       	pop	r28
    2176:	df 91       	pop	r29
    2178:	08 95       	ret

0000217a <__vector_14>:
void USART_UDRE_vect() {
    217a:	df 93       	push	r29
    217c:	cf 93       	push	r28
    217e:	cd b7       	in	r28, 0x3d	; 61
    2180:	de b7       	in	r29, 0x3e	; 62
	if (ISR_USART_DRE)
    2182:	80 91 6e 01 	lds	r24, 0x016E
    2186:	90 91 6f 01 	lds	r25, 0x016F
    218a:	00 97       	sbiw	r24, 0x00	; 0
    218c:	29 f0       	breq	.+10     	; 0x2198 <__vector_14+0x1e>
		ISR_USART_DRE();
    218e:	e0 91 6e 01 	lds	r30, 0x016E
    2192:	f0 91 6f 01 	lds	r31, 0x016F
    2196:	09 95       	icall
	UCSRA |= (1 << TXC);
    2198:	ab e2       	ldi	r26, 0x2B	; 43
    219a:	b0 e0       	ldi	r27, 0x00	; 0
    219c:	eb e2       	ldi	r30, 0x2B	; 43
    219e:	f0 e0       	ldi	r31, 0x00	; 0
    21a0:	80 81       	ld	r24, Z
    21a2:	80 64       	ori	r24, 0x40	; 64
    21a4:	8c 93       	st	X, r24
	sei();
    21a6:	78 94       	sei
}
    21a8:	cf 91       	pop	r28
    21aa:	df 91       	pop	r29
    21ac:	08 95       	ret

000021ae <UART_addISR>:
//	if (ISR_USART_TXC)
//		ISR_USART_TXC();
//	UCSRA |= (1 << TXC);
//	sei();
//}
void UART_addISR(UART_NUM_t UART, UART_INTERRUPT_t ISR_type, void (*ISR)()) {
    21ae:	df 93       	push	r29
    21b0:	cf 93       	push	r28
    21b2:	00 d0       	rcall	.+0      	; 0x21b4 <UART_addISR+0x6>
    21b4:	00 d0       	rcall	.+0      	; 0x21b6 <UART_addISR+0x8>
    21b6:	cd b7       	in	r28, 0x3d	; 61
    21b8:	de b7       	in	r29, 0x3e	; 62
    21ba:	89 83       	std	Y+1, r24	; 0x01
    21bc:	6a 83       	std	Y+2, r22	; 0x02
    21be:	5c 83       	std	Y+4, r21	; 0x04
    21c0:	4b 83       	std	Y+3, r20	; 0x03
	if (ISR_type == USART_RXC) {
    21c2:	8a 81       	ldd	r24, Y+2	; 0x02
    21c4:	88 23       	and	r24, r24
    21c6:	71 f4       	brne	.+28     	; 0x21e4 <UART_addISR+0x36>
		ISR_USART_RXC = ISR;
    21c8:	8b 81       	ldd	r24, Y+3	; 0x03
    21ca:	9c 81       	ldd	r25, Y+4	; 0x04
    21cc:	90 93 6b 01 	sts	0x016B, r25
    21d0:	80 93 6a 01 	sts	0x016A, r24
		UCSRB |= (1 << RXCIE);
    21d4:	aa e2       	ldi	r26, 0x2A	; 42
    21d6:	b0 e0       	ldi	r27, 0x00	; 0
    21d8:	ea e2       	ldi	r30, 0x2A	; 42
    21da:	f0 e0       	ldi	r31, 0x00	; 0
    21dc:	80 81       	ld	r24, Z
    21de:	80 68       	ori	r24, 0x80	; 128
    21e0:	8c 93       	st	X, r24
    21e2:	21 c0       	rjmp	.+66     	; 0x2226 <UART_addISR+0x78>
	} else if (ISR_type == USART_TXC) {
    21e4:	8a 81       	ldd	r24, Y+2	; 0x02
    21e6:	81 30       	cpi	r24, 0x01	; 1
    21e8:	71 f4       	brne	.+28     	; 0x2206 <UART_addISR+0x58>
		ISR_USART_TXC = ISR;
    21ea:	8b 81       	ldd	r24, Y+3	; 0x03
    21ec:	9c 81       	ldd	r25, Y+4	; 0x04
    21ee:	90 93 6d 01 	sts	0x016D, r25
    21f2:	80 93 6c 01 	sts	0x016C, r24
		UCSRB |= (1 << TXCIE);
    21f6:	aa e2       	ldi	r26, 0x2A	; 42
    21f8:	b0 e0       	ldi	r27, 0x00	; 0
    21fa:	ea e2       	ldi	r30, 0x2A	; 42
    21fc:	f0 e0       	ldi	r31, 0x00	; 0
    21fe:	80 81       	ld	r24, Z
    2200:	80 64       	ori	r24, 0x40	; 64
    2202:	8c 93       	st	X, r24
    2204:	10 c0       	rjmp	.+32     	; 0x2226 <UART_addISR+0x78>
	} else if (ISR_type == USART_DRE) {
    2206:	8a 81       	ldd	r24, Y+2	; 0x02
    2208:	82 30       	cpi	r24, 0x02	; 2
    220a:	69 f4       	brne	.+26     	; 0x2226 <UART_addISR+0x78>
		ISR_USART_DRE = ISR;
    220c:	8b 81       	ldd	r24, Y+3	; 0x03
    220e:	9c 81       	ldd	r25, Y+4	; 0x04
    2210:	90 93 6f 01 	sts	0x016F, r25
    2214:	80 93 6e 01 	sts	0x016E, r24
		UCSRB |= (1 << UDRIE);
    2218:	aa e2       	ldi	r26, 0x2A	; 42
    221a:	b0 e0       	ldi	r27, 0x00	; 0
    221c:	ea e2       	ldi	r30, 0x2A	; 42
    221e:	f0 e0       	ldi	r31, 0x00	; 0
    2220:	80 81       	ld	r24, Z
    2222:	80 62       	ori	r24, 0x20	; 32
    2224:	8c 93       	st	X, r24
	}
	sei();
    2226:	78 94       	sei
}
    2228:	0f 90       	pop	r0
    222a:	0f 90       	pop	r0
    222c:	0f 90       	pop	r0
    222e:	0f 90       	pop	r0
    2230:	cf 91       	pop	r28
    2232:	df 91       	pop	r29
    2234:	08 95       	ret

00002236 <UART_init>:

void UART_init(UART_NUM_t UART, u16 baudRate) {
    2236:	2f 92       	push	r2
    2238:	3f 92       	push	r3
    223a:	4f 92       	push	r4
    223c:	5f 92       	push	r5
    223e:	6f 92       	push	r6
    2240:	7f 92       	push	r7
    2242:	8f 92       	push	r8
    2244:	9f 92       	push	r9
    2246:	af 92       	push	r10
    2248:	bf 92       	push	r11
    224a:	cf 92       	push	r12
    224c:	df 92       	push	r13
    224e:	ef 92       	push	r14
    2250:	ff 92       	push	r15
    2252:	0f 93       	push	r16
    2254:	1f 93       	push	r17
    2256:	df 93       	push	r29
    2258:	cf 93       	push	r28
    225a:	cd b7       	in	r28, 0x3d	; 61
    225c:	de b7       	in	r29, 0x3e	; 62
    225e:	e0 97       	sbiw	r28, 0x30	; 48
    2260:	0f b6       	in	r0, 0x3f	; 63
    2262:	f8 94       	cli
    2264:	de bf       	out	0x3e, r29	; 62
    2266:	0f be       	out	0x3f, r0	; 63
    2268:	cd bf       	out	0x3d, r28	; 61
    226a:	8b 83       	std	Y+3, r24	; 0x03
    226c:	7d 83       	std	Y+5, r23	; 0x05
    226e:	6c 83       	std	Y+4, r22	; 0x04
	//calc baudRate
	u16 temp = round((ECU_FREQ / (16 * baudRate)) - 1);
    2270:	8c 81       	ldd	r24, Y+4	; 0x04
    2272:	9d 81       	ldd	r25, Y+5	; 0x05
    2274:	82 95       	swap	r24
    2276:	92 95       	swap	r25
    2278:	90 7f       	andi	r25, 0xF0	; 240
    227a:	98 27       	eor	r25, r24
    227c:	80 7f       	andi	r24, 0xF0	; 240
    227e:	98 27       	eor	r25, r24
    2280:	1c 01       	movw	r2, r24
    2282:	44 24       	eor	r4, r4
    2284:	55 24       	eor	r5, r5
    2286:	66 24       	eor	r6, r6
    2288:	77 24       	eor	r7, r7
    228a:	43 01       	movw	r8, r6
    228c:	20 e4       	ldi	r18, 0x40	; 64
    228e:	32 e4       	ldi	r19, 0x42	; 66
    2290:	4f e0       	ldi	r20, 0x0F	; 15
    2292:	50 e0       	ldi	r21, 0x00	; 0
    2294:	60 e0       	ldi	r22, 0x00	; 0
    2296:	70 e0       	ldi	r23, 0x00	; 0
    2298:	80 e0       	ldi	r24, 0x00	; 0
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	a2 2c       	mov	r10, r2
    229e:	b3 2c       	mov	r11, r3
    22a0:	c4 2c       	mov	r12, r4
    22a2:	d5 2c       	mov	r13, r5
    22a4:	e6 2c       	mov	r14, r6
    22a6:	f7 2c       	mov	r15, r7
    22a8:	08 2d       	mov	r16, r8
    22aa:	19 2d       	mov	r17, r9
    22ac:	0e 94 6f 01 	call	0x2de	; 0x2de <__divdi3>
    22b0:	a2 2e       	mov	r10, r18
    22b2:	b3 2e       	mov	r11, r19
    22b4:	c4 2e       	mov	r12, r20
    22b6:	d5 2e       	mov	r13, r21
    22b8:	e6 2e       	mov	r14, r22
    22ba:	f7 2e       	mov	r15, r23
    22bc:	08 2f       	mov	r16, r24
    22be:	19 2f       	mov	r17, r25
    22c0:	ae 82       	std	Y+6, r10	; 0x06
    22c2:	bf 82       	std	Y+7, r11	; 0x07
    22c4:	c8 86       	std	Y+8, r12	; 0x08
    22c6:	d9 86       	std	Y+9, r13	; 0x09
    22c8:	ea 86       	std	Y+10, r14	; 0x0a
    22ca:	fb 86       	std	Y+11, r15	; 0x0b
    22cc:	0c 87       	std	Y+12, r16	; 0x0c
    22ce:	1d 87       	std	Y+13, r17	; 0x0d
    22d0:	8f ef       	ldi	r24, 0xFF	; 255
    22d2:	8e 87       	std	Y+14, r24	; 0x0e
    22d4:	9f ef       	ldi	r25, 0xFF	; 255
    22d6:	9f 87       	std	Y+15, r25	; 0x0f
    22d8:	8f ef       	ldi	r24, 0xFF	; 255
    22da:	88 8b       	std	Y+16, r24	; 0x10
    22dc:	9f ef       	ldi	r25, 0xFF	; 255
    22de:	99 8b       	std	Y+17, r25	; 0x11
    22e0:	8f ef       	ldi	r24, 0xFF	; 255
    22e2:	8a 8b       	std	Y+18, r24	; 0x12
    22e4:	9f ef       	ldi	r25, 0xFF	; 255
    22e6:	9b 8b       	std	Y+19, r25	; 0x13
    22e8:	8f ef       	ldi	r24, 0xFF	; 255
    22ea:	8c 8b       	std	Y+20, r24	; 0x14
    22ec:	9f ef       	ldi	r25, 0xFF	; 255
    22ee:	9d 8b       	std	Y+21, r25	; 0x15
    22f0:	8e 81       	ldd	r24, Y+6	; 0x06
    22f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    22f4:	89 0f       	add	r24, r25
    22f6:	8e 8b       	std	Y+22, r24	; 0x16
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	8e 8f       	std	Y+30, r24	; 0x1e
    22fc:	9e 89       	ldd	r25, Y+22	; 0x16
    22fe:	8e 81       	ldd	r24, Y+6	; 0x06
    2300:	98 17       	cp	r25, r24
    2302:	08 f0       	brcs	.+2      	; 0x2306 <UART_init+0xd0>
    2304:	1e 8e       	std	Y+30, r1	; 0x1e
    2306:	9f 81       	ldd	r25, Y+7	; 0x07
    2308:	8f 85       	ldd	r24, Y+15	; 0x0f
    230a:	98 0f       	add	r25, r24
    230c:	9f 8b       	std	Y+23, r25	; 0x17
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	9f 8f       	std	Y+31, r25	; 0x1f
    2312:	8f 89       	ldd	r24, Y+23	; 0x17
    2314:	9f 81       	ldd	r25, Y+7	; 0x07
    2316:	89 17       	cp	r24, r25
    2318:	08 f0       	brcs	.+2      	; 0x231c <UART_init+0xe6>
    231a:	1f 8e       	std	Y+31, r1	; 0x1f
    231c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    231e:	9f 89       	ldd	r25, Y+23	; 0x17
    2320:	89 0f       	add	r24, r25
    2322:	88 a3       	std	Y+32, r24	; 0x20
    2324:	81 e0       	ldi	r24, 0x01	; 1
    2326:	89 a3       	std	Y+33, r24	; 0x21
    2328:	98 a1       	ldd	r25, Y+32	; 0x20
    232a:	8f 89       	ldd	r24, Y+23	; 0x17
    232c:	98 17       	cp	r25, r24
    232e:	08 f0       	brcs	.+2      	; 0x2332 <UART_init+0xfc>
    2330:	19 a2       	std	Y+33, r1	; 0x21
    2332:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2334:	89 a1       	ldd	r24, Y+33	; 0x21
    2336:	98 2b       	or	r25, r24
    2338:	9f 8f       	std	Y+31, r25	; 0x1f
    233a:	98 a1       	ldd	r25, Y+32	; 0x20
    233c:	9f 8b       	std	Y+23, r25	; 0x17
    233e:	88 85       	ldd	r24, Y+8	; 0x08
    2340:	98 89       	ldd	r25, Y+16	; 0x10
    2342:	89 0f       	add	r24, r25
    2344:	88 8f       	std	Y+24, r24	; 0x18
    2346:	81 e0       	ldi	r24, 0x01	; 1
    2348:	8a a3       	std	Y+34, r24	; 0x22
    234a:	98 8d       	ldd	r25, Y+24	; 0x18
    234c:	88 85       	ldd	r24, Y+8	; 0x08
    234e:	98 17       	cp	r25, r24
    2350:	08 f0       	brcs	.+2      	; 0x2354 <UART_init+0x11e>
    2352:	1a a2       	std	Y+34, r1	; 0x22
    2354:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2356:	88 8d       	ldd	r24, Y+24	; 0x18
    2358:	98 0f       	add	r25, r24
    235a:	9b a3       	std	Y+35, r25	; 0x23
    235c:	91 e0       	ldi	r25, 0x01	; 1
    235e:	9c a3       	std	Y+36, r25	; 0x24
    2360:	8b a1       	ldd	r24, Y+35	; 0x23
    2362:	98 8d       	ldd	r25, Y+24	; 0x18
    2364:	89 17       	cp	r24, r25
    2366:	08 f0       	brcs	.+2      	; 0x236a <UART_init+0x134>
    2368:	1c a2       	std	Y+36, r1	; 0x24
    236a:	8a a1       	ldd	r24, Y+34	; 0x22
    236c:	9c a1       	ldd	r25, Y+36	; 0x24
    236e:	89 2b       	or	r24, r25
    2370:	8a a3       	std	Y+34, r24	; 0x22
    2372:	8b a1       	ldd	r24, Y+35	; 0x23
    2374:	88 8f       	std	Y+24, r24	; 0x18
    2376:	99 85       	ldd	r25, Y+9	; 0x09
    2378:	89 89       	ldd	r24, Y+17	; 0x11
    237a:	98 0f       	add	r25, r24
    237c:	99 8f       	std	Y+25, r25	; 0x19
    237e:	91 e0       	ldi	r25, 0x01	; 1
    2380:	9d a3       	std	Y+37, r25	; 0x25
    2382:	89 8d       	ldd	r24, Y+25	; 0x19
    2384:	99 85       	ldd	r25, Y+9	; 0x09
    2386:	89 17       	cp	r24, r25
    2388:	08 f0       	brcs	.+2      	; 0x238c <UART_init+0x156>
    238a:	1d a2       	std	Y+37, r1	; 0x25
    238c:	8a a1       	ldd	r24, Y+34	; 0x22
    238e:	99 8d       	ldd	r25, Y+25	; 0x19
    2390:	89 0f       	add	r24, r25
    2392:	8e a3       	std	Y+38, r24	; 0x26
    2394:	81 e0       	ldi	r24, 0x01	; 1
    2396:	8f a3       	std	Y+39, r24	; 0x27
    2398:	9e a1       	ldd	r25, Y+38	; 0x26
    239a:	89 8d       	ldd	r24, Y+25	; 0x19
    239c:	98 17       	cp	r25, r24
    239e:	08 f0       	brcs	.+2      	; 0x23a2 <UART_init+0x16c>
    23a0:	1f a2       	std	Y+39, r1	; 0x27
    23a2:	9d a1       	ldd	r25, Y+37	; 0x25
    23a4:	8f a1       	ldd	r24, Y+39	; 0x27
    23a6:	98 2b       	or	r25, r24
    23a8:	9d a3       	std	Y+37, r25	; 0x25
    23aa:	9e a1       	ldd	r25, Y+38	; 0x26
    23ac:	99 8f       	std	Y+25, r25	; 0x19
    23ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    23b0:	9a 89       	ldd	r25, Y+18	; 0x12
    23b2:	89 0f       	add	r24, r25
    23b4:	8a 8f       	std	Y+26, r24	; 0x1a
    23b6:	81 e0       	ldi	r24, 0x01	; 1
    23b8:	88 a7       	std	Y+40, r24	; 0x28
    23ba:	9a 8d       	ldd	r25, Y+26	; 0x1a
    23bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    23be:	98 17       	cp	r25, r24
    23c0:	08 f0       	brcs	.+2      	; 0x23c4 <UART_init+0x18e>
    23c2:	18 a6       	std	Y+40, r1	; 0x28
    23c4:	9d a1       	ldd	r25, Y+37	; 0x25
    23c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    23c8:	98 0f       	add	r25, r24
    23ca:	99 a7       	std	Y+41, r25	; 0x29
    23cc:	91 e0       	ldi	r25, 0x01	; 1
    23ce:	9a a7       	std	Y+42, r25	; 0x2a
    23d0:	89 a5       	ldd	r24, Y+41	; 0x29
    23d2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    23d4:	89 17       	cp	r24, r25
    23d6:	08 f0       	brcs	.+2      	; 0x23da <UART_init+0x1a4>
    23d8:	1a a6       	std	Y+42, r1	; 0x2a
    23da:	88 a5       	ldd	r24, Y+40	; 0x28
    23dc:	9a a5       	ldd	r25, Y+42	; 0x2a
    23de:	89 2b       	or	r24, r25
    23e0:	88 a7       	std	Y+40, r24	; 0x28
    23e2:	89 a5       	ldd	r24, Y+41	; 0x29
    23e4:	8a 8f       	std	Y+26, r24	; 0x1a
    23e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    23e8:	8b 89       	ldd	r24, Y+19	; 0x13
    23ea:	98 0f       	add	r25, r24
    23ec:	9b 8f       	std	Y+27, r25	; 0x1b
    23ee:	91 e0       	ldi	r25, 0x01	; 1
    23f0:	9b a7       	std	Y+43, r25	; 0x2b
    23f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23f4:	9b 85       	ldd	r25, Y+11	; 0x0b
    23f6:	89 17       	cp	r24, r25
    23f8:	08 f0       	brcs	.+2      	; 0x23fc <UART_init+0x1c6>
    23fa:	1b a6       	std	Y+43, r1	; 0x2b
    23fc:	88 a5       	ldd	r24, Y+40	; 0x28
    23fe:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2400:	89 0f       	add	r24, r25
    2402:	8c a7       	std	Y+44, r24	; 0x2c
    2404:	81 e0       	ldi	r24, 0x01	; 1
    2406:	8d a7       	std	Y+45, r24	; 0x2d
    2408:	9c a5       	ldd	r25, Y+44	; 0x2c
    240a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    240c:	98 17       	cp	r25, r24
    240e:	08 f0       	brcs	.+2      	; 0x2412 <UART_init+0x1dc>
    2410:	1d a6       	std	Y+45, r1	; 0x2d
    2412:	9b a5       	ldd	r25, Y+43	; 0x2b
    2414:	8d a5       	ldd	r24, Y+45	; 0x2d
    2416:	98 2b       	or	r25, r24
    2418:	9b a7       	std	Y+43, r25	; 0x2b
    241a:	9c a5       	ldd	r25, Y+44	; 0x2c
    241c:	9b 8f       	std	Y+27, r25	; 0x1b
    241e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2420:	9c 89       	ldd	r25, Y+20	; 0x14
    2422:	89 0f       	add	r24, r25
    2424:	8c 8f       	std	Y+28, r24	; 0x1c
    2426:	81 e0       	ldi	r24, 0x01	; 1
    2428:	8e a7       	std	Y+46, r24	; 0x2e
    242a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    242c:	8c 85       	ldd	r24, Y+12	; 0x0c
    242e:	98 17       	cp	r25, r24
    2430:	08 f0       	brcs	.+2      	; 0x2434 <UART_init+0x1fe>
    2432:	1e a6       	std	Y+46, r1	; 0x2e
    2434:	9b a5       	ldd	r25, Y+43	; 0x2b
    2436:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2438:	98 0f       	add	r25, r24
    243a:	9f a7       	std	Y+47, r25	; 0x2f
    243c:	91 e0       	ldi	r25, 0x01	; 1
    243e:	98 ab       	std	Y+48, r25	; 0x30
    2440:	8f a5       	ldd	r24, Y+47	; 0x2f
    2442:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2444:	89 17       	cp	r24, r25
    2446:	08 f0       	brcs	.+2      	; 0x244a <UART_init+0x214>
    2448:	18 aa       	std	Y+48, r1	; 0x30
    244a:	8e a5       	ldd	r24, Y+46	; 0x2e
    244c:	98 a9       	ldd	r25, Y+48	; 0x30
    244e:	89 2b       	or	r24, r25
    2450:	8e a7       	std	Y+46, r24	; 0x2e
    2452:	8f a5       	ldd	r24, Y+47	; 0x2f
    2454:	8c 8f       	std	Y+28, r24	; 0x1c
    2456:	9d 85       	ldd	r25, Y+13	; 0x0d
    2458:	8d 89       	ldd	r24, Y+21	; 0x15
    245a:	98 0f       	add	r25, r24
    245c:	9d 8f       	std	Y+29, r25	; 0x1d
    245e:	8e a5       	ldd	r24, Y+46	; 0x2e
    2460:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2462:	89 0f       	add	r24, r25
    2464:	8d 8f       	std	Y+29, r24	; 0x1d
    2466:	ae 88       	ldd	r10, Y+22	; 0x16
    2468:	bf 88       	ldd	r11, Y+23	; 0x17
    246a:	c8 8c       	ldd	r12, Y+24	; 0x18
    246c:	d9 8c       	ldd	r13, Y+25	; 0x19
    246e:	ea 8c       	ldd	r14, Y+26	; 0x1a
    2470:	fb 8c       	ldd	r15, Y+27	; 0x1b
    2472:	0c 8d       	ldd	r16, Y+28	; 0x1c
    2474:	1d 8d       	ldd	r17, Y+29	; 0x1d
    2476:	2a 2d       	mov	r18, r10
    2478:	3b 2d       	mov	r19, r11
    247a:	4c 2d       	mov	r20, r12
    247c:	5d 2d       	mov	r21, r13
    247e:	6e 2d       	mov	r22, r14
    2480:	7f 2d       	mov	r23, r15
    2482:	80 2f       	mov	r24, r16
    2484:	91 2f       	mov	r25, r17
    2486:	0e 94 74 00 	call	0xe8	; 0xe8 <__floatdisf>
    248a:	dc 01       	movw	r26, r24
    248c:	cb 01       	movw	r24, r22
    248e:	bc 01       	movw	r22, r24
    2490:	cd 01       	movw	r24, r26
    2492:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <round>
    2496:	dc 01       	movw	r26, r24
    2498:	cb 01       	movw	r24, r22
    249a:	bc 01       	movw	r22, r24
    249c:	cd 01       	movw	r24, r26
    249e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    24a2:	dc 01       	movw	r26, r24
    24a4:	cb 01       	movw	r24, r22
    24a6:	9a 83       	std	Y+2, r25	; 0x02
    24a8:	89 83       	std	Y+1, r24	; 0x01

	UBRRH = (u8) (temp >> 8);
    24aa:	e0 e4       	ldi	r30, 0x40	; 64
    24ac:	f0 e0       	ldi	r31, 0x00	; 0
    24ae:	89 81       	ldd	r24, Y+1	; 0x01
    24b0:	9a 81       	ldd	r25, Y+2	; 0x02
    24b2:	89 2f       	mov	r24, r25
    24b4:	99 27       	eor	r25, r25
    24b6:	80 83       	st	Z, r24
	UBRRL = (u8) temp;
    24b8:	e9 e2       	ldi	r30, 0x29	; 41
    24ba:	f0 e0       	ldi	r31, 0x00	; 0
    24bc:	89 81       	ldd	r24, Y+1	; 0x01
    24be:	80 83       	st	Z, r24

	UCSRB |= (1 << RXEN) | (1 << TXEN);
    24c0:	aa e2       	ldi	r26, 0x2A	; 42
    24c2:	b0 e0       	ldi	r27, 0x00	; 0
    24c4:	ea e2       	ldi	r30, 0x2A	; 42
    24c6:	f0 e0       	ldi	r31, 0x00	; 0
    24c8:	80 81       	ld	r24, Z
    24ca:	88 61       	ori	r24, 0x18	; 24
    24cc:	8c 93       	st	X, r24

	UCSRC &= ~(1 << UMSEL); //enable reg
    24ce:	a0 e4       	ldi	r26, 0x40	; 64
    24d0:	b0 e0       	ldi	r27, 0x00	; 0
    24d2:	e0 e4       	ldi	r30, 0x40	; 64
    24d4:	f0 e0       	ldi	r31, 0x00	; 0
    24d6:	80 81       	ld	r24, Z
    24d8:	8f 7b       	andi	r24, 0xBF	; 191
    24da:	8c 93       	st	X, r24
	//2stop , odd parity , 8bit data
	UCSRC |= (1 << URSEL) | (3 << UPM0) | (1 << USBS) | (3 << UCSZ0);
    24dc:	a0 e4       	ldi	r26, 0x40	; 64
    24de:	b0 e0       	ldi	r27, 0x00	; 0
    24e0:	e0 e4       	ldi	r30, 0x40	; 64
    24e2:	f0 e0       	ldi	r31, 0x00	; 0
    24e4:	80 81       	ld	r24, Z
    24e6:	8e 6b       	ori	r24, 0xBE	; 190
    24e8:	8c 93       	st	X, r24

}
    24ea:	e0 96       	adiw	r28, 0x30	; 48
    24ec:	0f b6       	in	r0, 0x3f	; 63
    24ee:	f8 94       	cli
    24f0:	de bf       	out	0x3e, r29	; 62
    24f2:	0f be       	out	0x3f, r0	; 63
    24f4:	cd bf       	out	0x3d, r28	; 61
    24f6:	cf 91       	pop	r28
    24f8:	df 91       	pop	r29
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	ff 90       	pop	r15
    2500:	ef 90       	pop	r14
    2502:	df 90       	pop	r13
    2504:	cf 90       	pop	r12
    2506:	bf 90       	pop	r11
    2508:	af 90       	pop	r10
    250a:	9f 90       	pop	r9
    250c:	8f 90       	pop	r8
    250e:	7f 90       	pop	r7
    2510:	6f 90       	pop	r6
    2512:	5f 90       	pop	r5
    2514:	4f 90       	pop	r4
    2516:	3f 90       	pop	r3
    2518:	2f 90       	pop	r2
    251a:	08 95       	ret

0000251c <__vector_10>:
//
//	if (t0_isr)
//		t0_isr();
//}

void TIMER0_COMP_vect() {
    251c:	df 93       	push	r29
    251e:	cf 93       	push	r28
    2520:	0f 92       	push	r0
    2522:	cd b7       	in	r28, 0x3d	; 61
    2524:	de b7       	in	r29, 0x3e	; 62

	for (u8 i = 0; i < TIMER0_HANDLERS_MAX_COUNT; i++)
    2526:	19 82       	std	Y+1, r1	; 0x01
    2528:	1b c0       	rjmp	.+54     	; 0x2560 <__vector_10+0x44>
		if (t0_isr[i])
    252a:	89 81       	ldd	r24, Y+1	; 0x01
    252c:	88 2f       	mov	r24, r24
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	88 0f       	add	r24, r24
    2532:	99 1f       	adc	r25, r25
    2534:	fc 01       	movw	r30, r24
    2536:	ee 58       	subi	r30, 0x8E	; 142
    2538:	fe 4f       	sbci	r31, 0xFE	; 254
    253a:	80 81       	ld	r24, Z
    253c:	91 81       	ldd	r25, Z+1	; 0x01
    253e:	00 97       	sbiw	r24, 0x00	; 0
    2540:	61 f0       	breq	.+24     	; 0x255a <__vector_10+0x3e>
			t0_isr[i]();
    2542:	89 81       	ldd	r24, Y+1	; 0x01
    2544:	88 2f       	mov	r24, r24
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	88 0f       	add	r24, r24
    254a:	99 1f       	adc	r25, r25
    254c:	fc 01       	movw	r30, r24
    254e:	ee 58       	subi	r30, 0x8E	; 142
    2550:	fe 4f       	sbci	r31, 0xFE	; 254
    2552:	01 90       	ld	r0, Z+
    2554:	f0 81       	ld	r31, Z
    2556:	e0 2d       	mov	r30, r0
    2558:	09 95       	icall
//		t0_isr();
//}

void TIMER0_COMP_vect() {

	for (u8 i = 0; i < TIMER0_HANDLERS_MAX_COUNT; i++)
    255a:	89 81       	ldd	r24, Y+1	; 0x01
    255c:	8f 5f       	subi	r24, 0xFF	; 255
    255e:	89 83       	std	Y+1, r24	; 0x01
    2560:	89 81       	ldd	r24, Y+1	; 0x01
    2562:	88 23       	and	r24, r24
    2564:	11 f3       	breq	.-60     	; 0x252a <__vector_10+0xe>
		if (t0_isr[i])
			t0_isr[i]();
}
    2566:	0f 90       	pop	r0
    2568:	cf 91       	pop	r28
    256a:	df 91       	pop	r29
    256c:	08 95       	ret

0000256e <__vector_4>:
void TIMER2_COMP_vect() {
    256e:	df 93       	push	r29
    2570:	cf 93       	push	r28
    2572:	0f 92       	push	r0
    2574:	cd b7       	in	r28, 0x3d	; 61
    2576:	de b7       	in	r29, 0x3e	; 62
	for (u8 i = 0; i < TIMER2_HANDLERS_MAX_COUNT; i++)
    2578:	19 82       	std	Y+1, r1	; 0x01
    257a:	1b c0       	rjmp	.+54     	; 0x25b2 <__vector_4+0x44>
		if (t2_isr[i])
    257c:	89 81       	ldd	r24, Y+1	; 0x01
    257e:	88 2f       	mov	r24, r24
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	88 0f       	add	r24, r24
    2584:	99 1f       	adc	r25, r25
    2586:	fc 01       	movw	r30, r24
    2588:	ec 58       	subi	r30, 0x8C	; 140
    258a:	fe 4f       	sbci	r31, 0xFE	; 254
    258c:	80 81       	ld	r24, Z
    258e:	91 81       	ldd	r25, Z+1	; 0x01
    2590:	00 97       	sbiw	r24, 0x00	; 0
    2592:	61 f0       	breq	.+24     	; 0x25ac <__vector_4+0x3e>
			t2_isr[i]();
    2594:	89 81       	ldd	r24, Y+1	; 0x01
    2596:	88 2f       	mov	r24, r24
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	88 0f       	add	r24, r24
    259c:	99 1f       	adc	r25, r25
    259e:	fc 01       	movw	r30, r24
    25a0:	ec 58       	subi	r30, 0x8C	; 140
    25a2:	fe 4f       	sbci	r31, 0xFE	; 254
    25a4:	01 90       	ld	r0, Z+
    25a6:	f0 81       	ld	r31, Z
    25a8:	e0 2d       	mov	r30, r0
    25aa:	09 95       	icall
	for (u8 i = 0; i < TIMER0_HANDLERS_MAX_COUNT; i++)
		if (t0_isr[i])
			t0_isr[i]();
}
void TIMER2_COMP_vect() {
	for (u8 i = 0; i < TIMER2_HANDLERS_MAX_COUNT; i++)
    25ac:	89 81       	ldd	r24, Y+1	; 0x01
    25ae:	8f 5f       	subi	r24, 0xFF	; 255
    25b0:	89 83       	std	Y+1, r24	; 0x01
    25b2:	89 81       	ldd	r24, Y+1	; 0x01
    25b4:	88 23       	and	r24, r24
    25b6:	11 f3       	breq	.-60     	; 0x257c <__vector_4+0xe>
		if (t2_isr[i])
			t2_isr[i]();
}
    25b8:	0f 90       	pop	r0
    25ba:	cf 91       	pop	r28
    25bc:	df 91       	pop	r29
    25be:	08 95       	ret

000025c0 <DIO_init_port_output>:
 *      Author: mh-sh
 */

#include "DIO.h"

void DIO_init_port_output(enum_port_base_t port_base, u8 port_mask) {
    25c0:	df 93       	push	r29
    25c2:	cf 93       	push	r28
    25c4:	00 d0       	rcall	.+0      	; 0x25c6 <DIO_init_port_output+0x6>
    25c6:	cd b7       	in	r28, 0x3d	; 61
    25c8:	de b7       	in	r29, 0x3e	; 62
    25ca:	89 83       	std	Y+1, r24	; 0x01
    25cc:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + DDR) |= port_mask;
    25ce:	89 81       	ldd	r24, Y+1	; 0x01
    25d0:	88 2f       	mov	r24, r24
    25d2:	90 e0       	ldi	r25, 0x00	; 0
    25d4:	01 96       	adiw	r24, 0x01	; 1
    25d6:	dc 01       	movw	r26, r24
    25d8:	89 81       	ldd	r24, Y+1	; 0x01
    25da:	88 2f       	mov	r24, r24
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	01 96       	adiw	r24, 0x01	; 1
    25e0:	fc 01       	movw	r30, r24
    25e2:	90 81       	ld	r25, Z
    25e4:	8a 81       	ldd	r24, Y+2	; 0x02
    25e6:	89 2b       	or	r24, r25
    25e8:	8c 93       	st	X, r24
}
    25ea:	0f 90       	pop	r0
    25ec:	0f 90       	pop	r0
    25ee:	cf 91       	pop	r28
    25f0:	df 91       	pop	r29
    25f2:	08 95       	ret

000025f4 <DIO_write_port>:
void DIO_init_port_input(enum_port_base_t port_base, u8 port_mask) {
	*(volatile u8*) (port_base + DDR) &= ~port_mask;
}

void DIO_write_port(enum_port_base_t port_base, u8 port_mask, u8 data) {
    25f4:	df 93       	push	r29
    25f6:	cf 93       	push	r28
    25f8:	00 d0       	rcall	.+0      	; 0x25fa <DIO_write_port+0x6>
    25fa:	0f 92       	push	r0
    25fc:	cd b7       	in	r28, 0x3d	; 61
    25fe:	de b7       	in	r29, 0x3e	; 62
    2600:	89 83       	std	Y+1, r24	; 0x01
    2602:	6a 83       	std	Y+2, r22	; 0x02
    2604:	4b 83       	std	Y+3, r20	; 0x03
	*(volatile u8*) (port_base + PORT) &= ~(port_mask);
    2606:	89 81       	ldd	r24, Y+1	; 0x01
    2608:	88 2f       	mov	r24, r24
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	02 96       	adiw	r24, 0x02	; 2
    260e:	dc 01       	movw	r26, r24
    2610:	89 81       	ldd	r24, Y+1	; 0x01
    2612:	88 2f       	mov	r24, r24
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	02 96       	adiw	r24, 0x02	; 2
    2618:	fc 01       	movw	r30, r24
    261a:	80 81       	ld	r24, Z
    261c:	98 2f       	mov	r25, r24
    261e:	8a 81       	ldd	r24, Y+2	; 0x02
    2620:	80 95       	com	r24
    2622:	89 23       	and	r24, r25
    2624:	8c 93       	st	X, r24
	*(volatile u8*) (port_base + PORT) |= data & (port_mask);
    2626:	89 81       	ldd	r24, Y+1	; 0x01
    2628:	88 2f       	mov	r24, r24
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	02 96       	adiw	r24, 0x02	; 2
    262e:	dc 01       	movw	r26, r24
    2630:	89 81       	ldd	r24, Y+1	; 0x01
    2632:	88 2f       	mov	r24, r24
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	02 96       	adiw	r24, 0x02	; 2
    2638:	fc 01       	movw	r30, r24
    263a:	20 81       	ld	r18, Z
    263c:	9b 81       	ldd	r25, Y+3	; 0x03
    263e:	8a 81       	ldd	r24, Y+2	; 0x02
    2640:	89 23       	and	r24, r25
    2642:	82 2b       	or	r24, r18
    2644:	8c 93       	st	X, r24
}
    2646:	0f 90       	pop	r0
    2648:	0f 90       	pop	r0
    264a:	0f 90       	pop	r0
    264c:	cf 91       	pop	r28
    264e:	df 91       	pop	r29
    2650:	08 95       	ret

00002652 <DIO_write_pin>:
void DIO_write_pin(enum_port_base_t port_base, u8 pin_no, bool_t data) {
    2652:	df 93       	push	r29
    2654:	cf 93       	push	r28
    2656:	00 d0       	rcall	.+0      	; 0x2658 <DIO_write_pin+0x6>
    2658:	0f 92       	push	r0
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	89 83       	std	Y+1, r24	; 0x01
    2660:	6a 83       	std	Y+2, r22	; 0x02
    2662:	4b 83       	std	Y+3, r20	; 0x03
	*(volatile u8*) (port_base + PORT) &= ~(1 << pin_no);
    2664:	89 81       	ldd	r24, Y+1	; 0x01
    2666:	88 2f       	mov	r24, r24
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	02 96       	adiw	r24, 0x02	; 2
    266c:	dc 01       	movw	r26, r24
    266e:	89 81       	ldd	r24, Y+1	; 0x01
    2670:	88 2f       	mov	r24, r24
    2672:	90 e0       	ldi	r25, 0x00	; 0
    2674:	02 96       	adiw	r24, 0x02	; 2
    2676:	fc 01       	movw	r30, r24
    2678:	80 81       	ld	r24, Z
    267a:	48 2f       	mov	r20, r24
    267c:	8a 81       	ldd	r24, Y+2	; 0x02
    267e:	28 2f       	mov	r18, r24
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	81 e0       	ldi	r24, 0x01	; 1
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	02 c0       	rjmp	.+4      	; 0x268c <DIO_write_pin+0x3a>
    2688:	88 0f       	add	r24, r24
    268a:	99 1f       	adc	r25, r25
    268c:	2a 95       	dec	r18
    268e:	e2 f7       	brpl	.-8      	; 0x2688 <DIO_write_pin+0x36>
    2690:	80 95       	com	r24
    2692:	84 23       	and	r24, r20
    2694:	8c 93       	st	X, r24
	*(volatile u8*) (port_base + PORT) |= data << pin_no;
    2696:	89 81       	ldd	r24, Y+1	; 0x01
    2698:	88 2f       	mov	r24, r24
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	02 96       	adiw	r24, 0x02	; 2
    269e:	dc 01       	movw	r26, r24
    26a0:	89 81       	ldd	r24, Y+1	; 0x01
    26a2:	88 2f       	mov	r24, r24
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	02 96       	adiw	r24, 0x02	; 2
    26a8:	fc 01       	movw	r30, r24
    26aa:	80 81       	ld	r24, Z
    26ac:	48 2f       	mov	r20, r24
    26ae:	8b 81       	ldd	r24, Y+3	; 0x03
    26b0:	28 2f       	mov	r18, r24
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	8a 81       	ldd	r24, Y+2	; 0x02
    26b6:	88 2f       	mov	r24, r24
    26b8:	90 e0       	ldi	r25, 0x00	; 0
    26ba:	b9 01       	movw	r22, r18
    26bc:	02 c0       	rjmp	.+4      	; 0x26c2 <DIO_write_pin+0x70>
    26be:	66 0f       	add	r22, r22
    26c0:	77 1f       	adc	r23, r23
    26c2:	8a 95       	dec	r24
    26c4:	e2 f7       	brpl	.-8      	; 0x26be <DIO_write_pin+0x6c>
    26c6:	cb 01       	movw	r24, r22
    26c8:	84 2b       	or	r24, r20
    26ca:	8c 93       	st	X, r24
}
    26cc:	0f 90       	pop	r0
    26ce:	0f 90       	pop	r0
    26d0:	0f 90       	pop	r0
    26d2:	cf 91       	pop	r28
    26d4:	df 91       	pop	r29
    26d6:	08 95       	ret

000026d8 <DIO_set_pin>:
	*(volatile u8*) (port_base + PORT) |= port_mask;
}
void DIO_clear_port(enum_port_base_t port_base, u8 port_mask) {
	*(volatile u8*) (port_base + PORT) &= ~port_mask;
}
void DIO_set_pin(enum_port_base_t port_base, u8 pin_no) {
    26d8:	df 93       	push	r29
    26da:	cf 93       	push	r28
    26dc:	00 d0       	rcall	.+0      	; 0x26de <DIO_set_pin+0x6>
    26de:	cd b7       	in	r28, 0x3d	; 61
    26e0:	de b7       	in	r29, 0x3e	; 62
    26e2:	89 83       	std	Y+1, r24	; 0x01
    26e4:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) |= 1 << pin_no;
    26e6:	89 81       	ldd	r24, Y+1	; 0x01
    26e8:	88 2f       	mov	r24, r24
    26ea:	90 e0       	ldi	r25, 0x00	; 0
    26ec:	02 96       	adiw	r24, 0x02	; 2
    26ee:	dc 01       	movw	r26, r24
    26f0:	89 81       	ldd	r24, Y+1	; 0x01
    26f2:	88 2f       	mov	r24, r24
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	02 96       	adiw	r24, 0x02	; 2
    26f8:	fc 01       	movw	r30, r24
    26fa:	80 81       	ld	r24, Z
    26fc:	48 2f       	mov	r20, r24
    26fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2700:	28 2f       	mov	r18, r24
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	81 e0       	ldi	r24, 0x01	; 1
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	02 2e       	mov	r0, r18
    270a:	02 c0       	rjmp	.+4      	; 0x2710 <DIO_set_pin+0x38>
    270c:	88 0f       	add	r24, r24
    270e:	99 1f       	adc	r25, r25
    2710:	0a 94       	dec	r0
    2712:	e2 f7       	brpl	.-8      	; 0x270c <DIO_set_pin+0x34>
    2714:	84 2b       	or	r24, r20
    2716:	8c 93       	st	X, r24
}
    2718:	0f 90       	pop	r0
    271a:	0f 90       	pop	r0
    271c:	cf 91       	pop	r28
    271e:	df 91       	pop	r29
    2720:	08 95       	ret

00002722 <DIO_clear_pin>:
void DIO_clear_pin(enum_port_base_t port_base, u8 pin_no) {
    2722:	df 93       	push	r29
    2724:	cf 93       	push	r28
    2726:	00 d0       	rcall	.+0      	; 0x2728 <DIO_clear_pin+0x6>
    2728:	cd b7       	in	r28, 0x3d	; 61
    272a:	de b7       	in	r29, 0x3e	; 62
    272c:	89 83       	std	Y+1, r24	; 0x01
    272e:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) &= ~(1 << pin_no);
    2730:	89 81       	ldd	r24, Y+1	; 0x01
    2732:	88 2f       	mov	r24, r24
    2734:	90 e0       	ldi	r25, 0x00	; 0
    2736:	02 96       	adiw	r24, 0x02	; 2
    2738:	dc 01       	movw	r26, r24
    273a:	89 81       	ldd	r24, Y+1	; 0x01
    273c:	88 2f       	mov	r24, r24
    273e:	90 e0       	ldi	r25, 0x00	; 0
    2740:	02 96       	adiw	r24, 0x02	; 2
    2742:	fc 01       	movw	r30, r24
    2744:	80 81       	ld	r24, Z
    2746:	48 2f       	mov	r20, r24
    2748:	8a 81       	ldd	r24, Y+2	; 0x02
    274a:	28 2f       	mov	r18, r24
    274c:	30 e0       	ldi	r19, 0x00	; 0
    274e:	81 e0       	ldi	r24, 0x01	; 1
    2750:	90 e0       	ldi	r25, 0x00	; 0
    2752:	02 2e       	mov	r0, r18
    2754:	02 c0       	rjmp	.+4      	; 0x275a <DIO_clear_pin+0x38>
    2756:	88 0f       	add	r24, r24
    2758:	99 1f       	adc	r25, r25
    275a:	0a 94       	dec	r0
    275c:	e2 f7       	brpl	.-8      	; 0x2756 <DIO_clear_pin+0x34>
    275e:	80 95       	com	r24
    2760:	84 23       	and	r24, r20
    2762:	8c 93       	st	X, r24
}
    2764:	0f 90       	pop	r0
    2766:	0f 90       	pop	r0
    2768:	cf 91       	pop	r28
    276a:	df 91       	pop	r29
    276c:	08 95       	ret

0000276e <DIO_read_pin>:

u8 DIO_read_port(enum_port_base_t port_base, u8 port_mask) {
	return ((*(volatile u8*) (port_base + PIN)) & (port_mask));
}
u8 DIO_read_pin(enum_port_base_t port_base, u8 pin_no) {
    276e:	df 93       	push	r29
    2770:	cf 93       	push	r28
    2772:	00 d0       	rcall	.+0      	; 0x2774 <DIO_read_pin+0x6>
    2774:	cd b7       	in	r28, 0x3d	; 61
    2776:	de b7       	in	r29, 0x3e	; 62
    2778:	89 83       	std	Y+1, r24	; 0x01
    277a:	6a 83       	std	Y+2, r22	; 0x02
	return ((*(volatile u8*) (port_base + PIN)) & (1 << pin_no));
    277c:	89 81       	ldd	r24, Y+1	; 0x01
    277e:	88 2f       	mov	r24, r24
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	fc 01       	movw	r30, r24
    2784:	80 81       	ld	r24, Z
    2786:	48 2f       	mov	r20, r24
    2788:	8a 81       	ldd	r24, Y+2	; 0x02
    278a:	28 2f       	mov	r18, r24
    278c:	30 e0       	ldi	r19, 0x00	; 0
    278e:	81 e0       	ldi	r24, 0x01	; 1
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	02 2e       	mov	r0, r18
    2794:	02 c0       	rjmp	.+4      	; 0x279a <DIO_read_pin+0x2c>
    2796:	88 0f       	add	r24, r24
    2798:	99 1f       	adc	r25, r25
    279a:	0a 94       	dec	r0
    279c:	e2 f7       	brpl	.-8      	; 0x2796 <DIO_read_pin+0x28>
    279e:	84 23       	and	r24, r20
}
    27a0:	0f 90       	pop	r0
    27a2:	0f 90       	pop	r0
    27a4:	cf 91       	pop	r28
    27a6:	df 91       	pop	r29
    27a8:	08 95       	ret

000027aa <lcd_init>:
 *      Author: mh-sh
 */

#include "lcd.h"

void lcd_init(gcfg_lcd_t * lcd) {
    27aa:	df 93       	push	r29
    27ac:	cf 93       	push	r28
    27ae:	cd b7       	in	r28, 0x3d	; 61
    27b0:	de b7       	in	r29, 0x3e	; 62
    27b2:	e2 97       	sbiw	r28, 0x32	; 50
    27b4:	0f b6       	in	r0, 0x3f	; 63
    27b6:	f8 94       	cli
    27b8:	de bf       	out	0x3e, r29	; 62
    27ba:	0f be       	out	0x3f, r0	; 63
    27bc:	cd bf       	out	0x3d, r28	; 61
    27be:	9a ab       	std	Y+50, r25	; 0x32
    27c0:	89 ab       	std	Y+49, r24	; 0x31

	if (lcd->nbit == n4BIT_MODE) {
    27c2:	e9 a9       	ldd	r30, Y+49	; 0x31
    27c4:	fa a9       	ldd	r31, Y+50	; 0x32
    27c6:	80 81       	ld	r24, Z
    27c8:	81 30       	cpi	r24, 0x01	; 1
    27ca:	a1 f5       	brne	.+104    	; 0x2834 <lcd_init+0x8a>
		DIO_init_port_output(lcd->controlPort,
    27cc:	e9 a9       	ldd	r30, Y+49	; 0x31
    27ce:	fa a9       	ldd	r31, Y+50	; 0x32
    27d0:	52 81       	ldd	r21, Z+2	; 0x02
    27d2:	e9 a9       	ldd	r30, Y+49	; 0x31
    27d4:	fa a9       	ldd	r31, Y+50	; 0x32
    27d6:	85 81       	ldd	r24, Z+5	; 0x05
    27d8:	28 2f       	mov	r18, r24
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	81 e0       	ldi	r24, 0x01	; 1
    27de:	90 e0       	ldi	r25, 0x00	; 0
    27e0:	02 c0       	rjmp	.+4      	; 0x27e6 <lcd_init+0x3c>
    27e2:	88 0f       	add	r24, r24
    27e4:	99 1f       	adc	r25, r25
    27e6:	2a 95       	dec	r18
    27e8:	e2 f7       	brpl	.-8      	; 0x27e2 <lcd_init+0x38>
    27ea:	48 2f       	mov	r20, r24
    27ec:	e9 a9       	ldd	r30, Y+49	; 0x31
    27ee:	fa a9       	ldd	r31, Y+50	; 0x32
    27f0:	83 81       	ldd	r24, Z+3	; 0x03
    27f2:	28 2f       	mov	r18, r24
    27f4:	30 e0       	ldi	r19, 0x00	; 0
    27f6:	81 e0       	ldi	r24, 0x01	; 1
    27f8:	90 e0       	ldi	r25, 0x00	; 0
    27fa:	02 c0       	rjmp	.+4      	; 0x2800 <lcd_init+0x56>
    27fc:	88 0f       	add	r24, r24
    27fe:	99 1f       	adc	r25, r25
    2800:	2a 95       	dec	r18
    2802:	e2 f7       	brpl	.-8      	; 0x27fc <lcd_init+0x52>
    2804:	48 2b       	or	r20, r24
    2806:	e9 a9       	ldd	r30, Y+49	; 0x31
    2808:	fa a9       	ldd	r31, Y+50	; 0x32
    280a:	84 81       	ldd	r24, Z+4	; 0x04
    280c:	28 2f       	mov	r18, r24
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	81 e0       	ldi	r24, 0x01	; 1
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	02 c0       	rjmp	.+4      	; 0x281a <lcd_init+0x70>
    2816:	88 0f       	add	r24, r24
    2818:	99 1f       	adc	r25, r25
    281a:	2a 95       	dec	r18
    281c:	e2 f7       	brpl	.-8      	; 0x2816 <lcd_init+0x6c>
    281e:	84 2b       	or	r24, r20
    2820:	98 2f       	mov	r25, r24
    2822:	85 2f       	mov	r24, r21
    2824:	69 2f       	mov	r22, r25
    2826:	cc de       	rcall	.-616    	; 0x25c0 <DIO_init_port_output>
    2828:	e9 a9       	ldd	r30, Y+49	; 0x31
				(1 << lcd->EN) | (1 << lcd->RS) | (1 << lcd->RW));
		DIO_init_port_output(lcd->dataPort, 0xF0);
    282a:	fa a9       	ldd	r31, Y+50	; 0x32
    282c:	81 81       	ldd	r24, Z+1	; 0x01
    282e:	60 ef       	ldi	r22, 0xF0	; 240
    2830:	c7 de       	rcall	.-626    	; 0x25c0 <DIO_init_port_output>
    2832:	0f c0       	rjmp	.+30     	; 0x2852 <lcd_init+0xa8>
    2834:	e9 a9       	ldd	r30, Y+49	; 0x31
    2836:	fa a9       	ldd	r31, Y+50	; 0x32
	} else if (lcd->nbit == n8BIT_MODE) {
    2838:	80 81       	ld	r24, Z
    283a:	82 30       	cpi	r24, 0x02	; 2
    283c:	51 f4       	brne	.+20     	; 0x2852 <lcd_init+0xa8>
    283e:	e9 a9       	ldd	r30, Y+49	; 0x31
    2840:	fa a9       	ldd	r31, Y+50	; 0x32
		DIO_init_port_output(lcd->controlPort, 0xFF);
    2842:	82 81       	ldd	r24, Z+2	; 0x02
    2844:	6f ef       	ldi	r22, 0xFF	; 255
    2846:	bc de       	rcall	.-648    	; 0x25c0 <DIO_init_port_output>
    2848:	e9 a9       	ldd	r30, Y+49	; 0x31
    284a:	fa a9       	ldd	r31, Y+50	; 0x32
    284c:	81 81       	ldd	r24, Z+1	; 0x01
		DIO_init_port_output(lcd->dataPort, 0xFF);
    284e:	6f ef       	ldi	r22, 0xFF	; 255
    2850:	b7 de       	rcall	.-658    	; 0x25c0 <DIO_init_port_output>
    2852:	e9 a9       	ldd	r30, Y+49	; 0x31
    2854:	fa a9       	ldd	r31, Y+50	; 0x32
    2856:	82 81       	ldd	r24, Z+2	; 0x02
    2858:	e9 a9       	ldd	r30, Y+49	; 0x31
	} else {
		// todo error
	}
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    285a:	fa a9       	ldd	r31, Y+50	; 0x32
    285c:	95 81       	ldd	r25, Z+5	; 0x05
    285e:	69 2f       	mov	r22, r25
    2860:	60 df       	rcall	.-320    	; 0x2722 <DIO_clear_pin>
    2862:	80 e0       	ldi	r24, 0x00	; 0
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	aa ef       	ldi	r26, 0xFA	; 250
    2868:	b4 e4       	ldi	r27, 0x44	; 68
    286a:	8d a7       	std	Y+45, r24	; 0x2d
    286c:	9e a7       	std	Y+46, r25	; 0x2e
    286e:	af a7       	std	Y+47, r26	; 0x2f
    2870:	b8 ab       	std	Y+48, r27	; 0x30
    2872:	6d a5       	ldd	r22, Y+45	; 0x2d
    2874:	7e a5       	ldd	r23, Y+46	; 0x2e
    2876:	8f a5       	ldd	r24, Y+47	; 0x2f
    2878:	98 a9       	ldd	r25, Y+48	; 0x30
    287a:	2b ea       	ldi	r18, 0xAB	; 171
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    287c:	3a ea       	ldi	r19, 0xAA	; 170
    287e:	4a ea       	ldi	r20, 0xAA	; 170
    2880:	5e e3       	ldi	r21, 0x3E	; 62
    2882:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2886:	dc 01       	movw	r26, r24
    2888:	cb 01       	movw	r24, r22
    288a:	89 a7       	std	Y+41, r24	; 0x29
    288c:	9a a7       	std	Y+42, r25	; 0x2a
    288e:	ab a7       	std	Y+43, r26	; 0x2b
    2890:	bc a7       	std	Y+44, r27	; 0x2c
    2892:	69 a5       	ldd	r22, Y+41	; 0x29
    2894:	7a a5       	ldd	r23, Y+42	; 0x2a
    2896:	8b a5       	ldd	r24, Y+43	; 0x2b
    2898:	9c a5       	ldd	r25, Y+44	; 0x2c
    289a:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    289c:	30 e0       	ldi	r19, 0x00	; 0
    289e:	40 e8       	ldi	r20, 0x80	; 128
    28a0:	5f e3       	ldi	r21, 0x3F	; 63
    28a2:	e1 d8       	rcall	.-3646   	; 0x1a66 <__ltsf2>
    28a4:	88 23       	and	r24, r24
    28a6:	1c f4       	brge	.+6      	; 0x28ae <lcd_init+0x104>
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	88 a7       	std	Y+40, r24	; 0x28
    28ac:	8e c0       	rjmp	.+284    	; 0x29ca <lcd_init+0x220>
    28ae:	69 a5       	ldd	r22, Y+41	; 0x29
    28b0:	7a a5       	ldd	r23, Y+42	; 0x2a
    28b2:	8b a5       	ldd	r24, Y+43	; 0x2b
		__ticks = 1;
    28b4:	9c a5       	ldd	r25, Y+44	; 0x2c
    28b6:	20 e0       	ldi	r18, 0x00	; 0
    28b8:	30 e0       	ldi	r19, 0x00	; 0
	else if (__tmp > 255)
    28ba:	4f e7       	ldi	r20, 0x7F	; 127
    28bc:	53 e4       	ldi	r21, 0x43	; 67
    28be:	79 d8       	rcall	.-3854   	; 0x19b2 <__gtsf2>
    28c0:	18 16       	cp	r1, r24
    28c2:	0c f0       	brlt	.+2      	; 0x28c6 <lcd_init+0x11c>
    28c4:	79 c0       	rjmp	.+242    	; 0x29b8 <lcd_init+0x20e>
    28c6:	6d a5       	ldd	r22, Y+45	; 0x2d
    28c8:	7e a5       	ldd	r23, Y+46	; 0x2e
    28ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    28cc:	98 a9       	ldd	r25, Y+48	; 0x30
    28ce:	20 e0       	ldi	r18, 0x00	; 0
    28d0:	30 e0       	ldi	r19, 0x00	; 0
    28d2:	4a e7       	ldi	r20, 0x7A	; 122
	{
		_delay_ms(__us / 1000.0);
    28d4:	54 e4       	ldi	r21, 0x44	; 68
    28d6:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    28da:	dc 01       	movw	r26, r24
    28dc:	cb 01       	movw	r24, r22
    28de:	8c a3       	std	Y+36, r24	; 0x24
    28e0:	9d a3       	std	Y+37, r25	; 0x25
    28e2:	ae a3       	std	Y+38, r26	; 0x26
    28e4:	bf a3       	std	Y+39, r27	; 0x27
    28e6:	6c a1       	ldd	r22, Y+36	; 0x24
    28e8:	7d a1       	ldd	r23, Y+37	; 0x25
    28ea:	8e a1       	ldd	r24, Y+38	; 0x26
    28ec:	9f a1       	ldd	r25, Y+39	; 0x27
    28ee:	20 e0       	ldi	r18, 0x00	; 0
    28f0:	30 e0       	ldi	r19, 0x00	; 0
    28f2:	4a e7       	ldi	r20, 0x7A	; 122
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28f4:	53 e4       	ldi	r21, 0x43	; 67
    28f6:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    28fa:	dc 01       	movw	r26, r24
    28fc:	cb 01       	movw	r24, r22
    28fe:	88 a3       	std	Y+32, r24	; 0x20
    2900:	99 a3       	std	Y+33, r25	; 0x21
    2902:	aa a3       	std	Y+34, r26	; 0x22
    2904:	bb a3       	std	Y+35, r27	; 0x23
    2906:	68 a1       	ldd	r22, Y+32	; 0x20
    2908:	79 a1       	ldd	r23, Y+33	; 0x21
    290a:	8a a1       	ldd	r24, Y+34	; 0x22
    290c:	9b a1       	ldd	r25, Y+35	; 0x23
    290e:	20 e0       	ldi	r18, 0x00	; 0
    2910:	30 e0       	ldi	r19, 0x00	; 0
    2912:	40 e8       	ldi	r20, 0x80	; 128
	if (__tmp < 1.0)
    2914:	5f e3       	ldi	r21, 0x3F	; 63
    2916:	a7 d8       	rcall	.-3762   	; 0x1a66 <__ltsf2>
    2918:	88 23       	and	r24, r24
    291a:	2c f4       	brge	.+10     	; 0x2926 <lcd_init+0x17c>
    291c:	81 e0       	ldi	r24, 0x01	; 1
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	9f 8f       	std	Y+31, r25	; 0x1f
    2922:	8e 8f       	std	Y+30, r24	; 0x1e
    2924:	3e c0       	rjmp	.+124    	; 0x29a2 <lcd_init+0x1f8>
    2926:	68 a1       	ldd	r22, Y+32	; 0x20
    2928:	79 a1       	ldd	r23, Y+33	; 0x21
    292a:	8a a1       	ldd	r24, Y+34	; 0x22
		__ticks = 1;
    292c:	9b a1       	ldd	r25, Y+35	; 0x23
    292e:	20 e0       	ldi	r18, 0x00	; 0
    2930:	3f ef       	ldi	r19, 0xFF	; 255
    2932:	4f e7       	ldi	r20, 0x7F	; 127
    2934:	57 e4       	ldi	r21, 0x47	; 71
	else if (__tmp > 65535)
    2936:	3d d8       	rcall	.-3974   	; 0x19b2 <__gtsf2>
    2938:	18 16       	cp	r1, r24
    293a:	4c f5       	brge	.+82     	; 0x298e <lcd_init+0x1e4>
    293c:	6c a1       	ldd	r22, Y+36	; 0x24
    293e:	7d a1       	ldd	r23, Y+37	; 0x25
    2940:	8e a1       	ldd	r24, Y+38	; 0x26
    2942:	9f a1       	ldd	r25, Y+39	; 0x27
    2944:	20 e0       	ldi	r18, 0x00	; 0
    2946:	30 e0       	ldi	r19, 0x00	; 0
    2948:	40 e2       	ldi	r20, 0x20	; 32
    294a:	51 e4       	ldi	r21, 0x41	; 65
    294c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2950:	dc 01       	movw	r26, r24
    2952:	cb 01       	movw	r24, r22
    2954:	bc 01       	movw	r22, r24
    2956:	cd 01       	movw	r24, r26
    2958:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    295c:	dc 01       	movw	r26, r24
    295e:	cb 01       	movw	r24, r22
    2960:	9f 8f       	std	Y+31, r25	; 0x1f
    2962:	8e 8f       	std	Y+30, r24	; 0x1e
    2964:	0f c0       	rjmp	.+30     	; 0x2984 <lcd_init+0x1da>
    2966:	89 e1       	ldi	r24, 0x19	; 25
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	9d 8f       	std	Y+29, r25	; 0x1d
    296c:	8c 8f       	std	Y+28, r24	; 0x1c
    296e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2970:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2972:	01 97       	sbiw	r24, 0x01	; 1
    2974:	f1 f7       	brne	.-4      	; 0x2972 <lcd_init+0x1c8>
    2976:	9d 8f       	std	Y+29, r25	; 0x1d
    2978:	8c 8f       	std	Y+28, r24	; 0x1c
    297a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    297c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    297e:	01 97       	sbiw	r24, 0x01	; 1
    2980:	9f 8f       	std	Y+31, r25	; 0x1f
    2982:	8e 8f       	std	Y+30, r24	; 0x1e
    2984:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2986:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2988:	00 97       	sbiw	r24, 0x00	; 0
    298a:	69 f7       	brne	.-38     	; 0x2966 <lcd_init+0x1bc>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    298c:	24 c0       	rjmp	.+72     	; 0x29d6 <lcd_init+0x22c>
    298e:	68 a1       	ldd	r22, Y+32	; 0x20
    2990:	79 a1       	ldd	r23, Y+33	; 0x21
    2992:	8a a1       	ldd	r24, Y+34	; 0x22
    2994:	9b a1       	ldd	r25, Y+35	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2996:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    299a:	dc 01       	movw	r26, r24
    299c:	cb 01       	movw	r24, r22
    299e:	9f 8f       	std	Y+31, r25	; 0x1f
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29a0:	8e 8f       	std	Y+30, r24	; 0x1e
    29a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    29a4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    29a6:	9b 8f       	std	Y+27, r25	; 0x1b
    29a8:	8a 8f       	std	Y+26, r24	; 0x1a
    29aa:	8a 8d       	ldd	r24, Y+26	; 0x1a
    29ac:	9b 8d       	ldd	r25, Y+27	; 0x1b
    29ae:	01 97       	sbiw	r24, 0x01	; 1
    29b0:	f1 f7       	brne	.-4      	; 0x29ae <lcd_init+0x204>
    29b2:	9b 8f       	std	Y+27, r25	; 0x1b
    29b4:	8a 8f       	std	Y+26, r24	; 0x1a
    29b6:	0f c0       	rjmp	.+30     	; 0x29d6 <lcd_init+0x22c>
    29b8:	69 a5       	ldd	r22, Y+41	; 0x29
    29ba:	7a a5       	ldd	r23, Y+42	; 0x2a
    29bc:	8b a5       	ldd	r24, Y+43	; 0x2b
    29be:	9c a5       	ldd	r25, Y+44	; 0x2c
    29c0:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    29c4:	dc 01       	movw	r26, r24
    29c6:	cb 01       	movw	r24, r22
    29c8:	88 a7       	std	Y+40, r24	; 0x28
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29ca:	88 a5       	ldd	r24, Y+40	; 0x28
    29cc:	89 8f       	std	Y+25, r24	; 0x19
    29ce:	89 8d       	ldd	r24, Y+25	; 0x19
    29d0:	8a 95       	dec	r24
    29d2:	f1 f7       	brne	.-4      	; 0x29d0 <lcd_init+0x226>
    29d4:	89 8f       	std	Y+25, r24	; 0x19
    29d6:	e9 a9       	ldd	r30, Y+49	; 0x31
    29d8:	fa a9       	ldd	r31, Y+50	; 0x32
    29da:	80 81       	ld	r24, Z
    29dc:	81 30       	cpi	r24, 0x01	; 1
    29de:	69 f4       	brne	.+26     	; 0x29fa <lcd_init+0x250>
    29e0:	89 a9       	ldd	r24, Y+49	; 0x31
    29e2:	9a a9       	ldd	r25, Y+50	; 0x32
    29e4:	63 e3       	ldi	r22, 0x33	; 51
    29e6:	e4 d0       	rcall	.+456    	; 0x2bb0 <lcd_send_command>
	_delay_us(2000);
	if (lcd->nbit == n4BIT_MODE) {
    29e8:	89 a9       	ldd	r24, Y+49	; 0x31
    29ea:	9a a9       	ldd	r25, Y+50	; 0x32
    29ec:	62 e3       	ldi	r22, 0x32	; 50
    29ee:	e0 d0       	rcall	.+448    	; 0x2bb0 <lcd_send_command>
    29f0:	89 a9       	ldd	r24, Y+49	; 0x31

		lcd_send_command(lcd, 0x33); //vodoo
    29f2:	9a a9       	ldd	r25, Y+50	; 0x32
    29f4:	6c e2       	ldi	r22, 0x2C	; 44
    29f6:	dc d0       	rcall	.+440    	; 0x2bb0 <lcd_send_command>
    29f8:	09 c0       	rjmp	.+18     	; 0x2a0c <lcd_init+0x262>
    29fa:	e9 a9       	ldd	r30, Y+49	; 0x31
		lcd_send_command(lcd, 0x32); //vodoo
    29fc:	fa a9       	ldd	r31, Y+50	; 0x32
    29fe:	80 81       	ld	r24, Z
    2a00:	82 30       	cpi	r24, 0x02	; 2
    2a02:	21 f4       	brne	.+8      	; 0x2a0c <lcd_init+0x262>
    2a04:	89 a9       	ldd	r24, Y+49	; 0x31
		lcd_send_command(lcd, 0x2C); //2 line , 5*11, 4bit
    2a06:	9a a9       	ldd	r25, Y+50	; 0x32
    2a08:	6c e3       	ldi	r22, 0x3C	; 60
    2a0a:	d2 d0       	rcall	.+420    	; 0x2bb0 <lcd_send_command>
    2a0c:	89 a9       	ldd	r24, Y+49	; 0x31
    2a0e:	9a a9       	ldd	r25, Y+50	; 0x32
    2a10:	6e e0       	ldi	r22, 0x0E	; 14
	} else if (lcd->nbit == n8BIT_MODE) {
    2a12:	ce d0       	rcall	.+412    	; 0x2bb0 <lcd_send_command>
    2a14:	89 a9       	ldd	r24, Y+49	; 0x31
    2a16:	9a a9       	ldd	r25, Y+50	; 0x32
    2a18:	66 e0       	ldi	r22, 0x06	; 6
    2a1a:	ca d0       	rcall	.+404    	; 0x2bb0 <lcd_send_command>
		lcd_send_command(lcd, 0x3C); //2 line , 5*11, 8bit
    2a1c:	89 a9       	ldd	r24, Y+49	; 0x31
    2a1e:	9a a9       	ldd	r25, Y+50	; 0x32
    2a20:	61 e0       	ldi	r22, 0x01	; 1
    2a22:	c6 d0       	rcall	.+396    	; 0x2bb0 <lcd_send_command>
    2a24:	80 e0       	ldi	r24, 0x00	; 0
	}

	lcd_send_command(lcd, 0x0E); //cursor on
    2a26:	90 e0       	ldi	r25, 0x00	; 0
    2a28:	aa ef       	ldi	r26, 0xFA	; 250
    2a2a:	b4 e4       	ldi	r27, 0x44	; 68
    2a2c:	8d 8b       	std	Y+21, r24	; 0x15
    2a2e:	9e 8b       	std	Y+22, r25	; 0x16
	lcd_send_command(lcd, 0x06); //shift right
    2a30:	af 8b       	std	Y+23, r26	; 0x17
    2a32:	b8 8f       	std	Y+24, r27	; 0x18
    2a34:	6d 89       	ldd	r22, Y+21	; 0x15
    2a36:	7e 89       	ldd	r23, Y+22	; 0x16
    2a38:	8f 89       	ldd	r24, Y+23	; 0x17
    2a3a:	98 8d       	ldd	r25, Y+24	; 0x18
    2a3c:	2b ea       	ldi	r18, 0xAB	; 171
    2a3e:	3a ea       	ldi	r19, 0xAA	; 170
    2a40:	4a ea       	ldi	r20, 0xAA	; 170
    2a42:	5e e3       	ldi	r21, 0x3E	; 62
    2a44:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2a48:	dc 01       	movw	r26, r24
    2a4a:	cb 01       	movw	r24, r22
    2a4c:	89 8b       	std	Y+17, r24	; 0x11
    2a4e:	9a 8b       	std	Y+18, r25	; 0x12
    2a50:	ab 8b       	std	Y+19, r26	; 0x13
    2a52:	bc 8b       	std	Y+20, r27	; 0x14
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2a54:	69 89       	ldd	r22, Y+17	; 0x11
    2a56:	7a 89       	ldd	r23, Y+18	; 0x12
    2a58:	8b 89       	ldd	r24, Y+19	; 0x13
    2a5a:	9c 89       	ldd	r25, Y+20	; 0x14
    2a5c:	20 e0       	ldi	r18, 0x00	; 0
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	40 e8       	ldi	r20, 0x80	; 128
    2a62:	5f e3       	ldi	r21, 0x3F	; 63
    2a64:	00 d8       	rcall	.-4096   	; 0x1a66 <__ltsf2>
    2a66:	88 23       	and	r24, r24
    2a68:	1c f4       	brge	.+6      	; 0x2a70 <lcd_init+0x2c6>
    2a6a:	81 e0       	ldi	r24, 0x01	; 1
    2a6c:	88 8b       	std	Y+16, r24	; 0x10
    2a6e:	91 c0       	rjmp	.+290    	; 0x2b92 <lcd_init+0x3e8>
    2a70:	69 89       	ldd	r22, Y+17	; 0x11
    2a72:	7a 89       	ldd	r23, Y+18	; 0x12
	if (__tmp < 1.0)
    2a74:	8b 89       	ldd	r24, Y+19	; 0x13
    2a76:	9c 89       	ldd	r25, Y+20	; 0x14
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	4f e7       	ldi	r20, 0x7F	; 127
    2a7e:	53 e4       	ldi	r21, 0x43	; 67
    2a80:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2a84:	18 16       	cp	r1, r24
    2a86:	0c f0       	brlt	.+2      	; 0x2a8a <lcd_init+0x2e0>
    2a88:	7b c0       	rjmp	.+246    	; 0x2b80 <lcd_init+0x3d6>
    2a8a:	6d 89       	ldd	r22, Y+21	; 0x15
		__ticks = 1;
    2a8c:	7e 89       	ldd	r23, Y+22	; 0x16
    2a8e:	8f 89       	ldd	r24, Y+23	; 0x17
    2a90:	98 8d       	ldd	r25, Y+24	; 0x18
	else if (__tmp > 255)
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	30 e0       	ldi	r19, 0x00	; 0
    2a96:	4a e7       	ldi	r20, 0x7A	; 122
    2a98:	54 e4       	ldi	r21, 0x44	; 68
    2a9a:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    2a9e:	dc 01       	movw	r26, r24
    2aa0:	cb 01       	movw	r24, r22
    2aa2:	8c 87       	std	Y+12, r24	; 0x0c
    2aa4:	9d 87       	std	Y+13, r25	; 0x0d
    2aa6:	ae 87       	std	Y+14, r26	; 0x0e
    2aa8:	bf 87       	std	Y+15, r27	; 0x0f
    2aaa:	6c 85       	ldd	r22, Y+12	; 0x0c
	{
		_delay_ms(__us / 1000.0);
    2aac:	7d 85       	ldd	r23, Y+13	; 0x0d
    2aae:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ab0:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ab2:	20 e0       	ldi	r18, 0x00	; 0
    2ab4:	30 e0       	ldi	r19, 0x00	; 0
    2ab6:	4a e7       	ldi	r20, 0x7A	; 122
    2ab8:	53 e4       	ldi	r21, 0x43	; 67
    2aba:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2abe:	dc 01       	movw	r26, r24
    2ac0:	cb 01       	movw	r24, r22
    2ac2:	88 87       	std	Y+8, r24	; 0x08
    2ac4:	99 87       	std	Y+9, r25	; 0x09
    2ac6:	aa 87       	std	Y+10, r26	; 0x0a
    2ac8:	bb 87       	std	Y+11, r27	; 0x0b
    2aca:	68 85       	ldd	r22, Y+8	; 0x08
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2acc:	79 85       	ldd	r23, Y+9	; 0x09
    2ace:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ad0:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ad2:	20 e0       	ldi	r18, 0x00	; 0
    2ad4:	30 e0       	ldi	r19, 0x00	; 0
    2ad6:	40 e8       	ldi	r20, 0x80	; 128
    2ad8:	5f e3       	ldi	r21, 0x3F	; 63
    2ada:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    2ade:	88 23       	and	r24, r24
    2ae0:	2c f4       	brge	.+10     	; 0x2aec <lcd_init+0x342>
    2ae2:	81 e0       	ldi	r24, 0x01	; 1
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	9f 83       	std	Y+7, r25	; 0x07
    2ae8:	8e 83       	std	Y+6, r24	; 0x06
    2aea:	3f c0       	rjmp	.+126    	; 0x2b6a <lcd_init+0x3c0>
	if (__tmp < 1.0)
    2aec:	68 85       	ldd	r22, Y+8	; 0x08
    2aee:	79 85       	ldd	r23, Y+9	; 0x09
    2af0:	8a 85       	ldd	r24, Y+10	; 0x0a
    2af2:	9b 85       	ldd	r25, Y+11	; 0x0b
    2af4:	20 e0       	ldi	r18, 0x00	; 0
    2af6:	3f ef       	ldi	r19, 0xFF	; 255
    2af8:	4f e7       	ldi	r20, 0x7F	; 127
    2afa:	57 e4       	ldi	r21, 0x47	; 71
    2afc:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2b00:	18 16       	cp	r1, r24
    2b02:	4c f5       	brge	.+82     	; 0x2b56 <lcd_init+0x3ac>
		__ticks = 1;
    2b04:	6c 85       	ldd	r22, Y+12	; 0x0c
    2b06:	7d 85       	ldd	r23, Y+13	; 0x0d
    2b08:	8e 85       	ldd	r24, Y+14	; 0x0e
    2b0a:	9f 85       	ldd	r25, Y+15	; 0x0f
    2b0c:	20 e0       	ldi	r18, 0x00	; 0
	else if (__tmp > 65535)
    2b0e:	30 e0       	ldi	r19, 0x00	; 0
    2b10:	40 e2       	ldi	r20, 0x20	; 32
    2b12:	51 e4       	ldi	r21, 0x41	; 65
    2b14:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2b18:	dc 01       	movw	r26, r24
    2b1a:	cb 01       	movw	r24, r22
    2b1c:	bc 01       	movw	r22, r24
    2b1e:	cd 01       	movw	r24, r26
    2b20:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2b24:	dc 01       	movw	r26, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b26:	cb 01       	movw	r24, r22
    2b28:	9f 83       	std	Y+7, r25	; 0x07
    2b2a:	8e 83       	std	Y+6, r24	; 0x06
    2b2c:	0f c0       	rjmp	.+30     	; 0x2b4c <lcd_init+0x3a2>
    2b2e:	89 e1       	ldi	r24, 0x19	; 25
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	9d 83       	std	Y+5, r25	; 0x05
    2b34:	8c 83       	std	Y+4, r24	; 0x04
    2b36:	8c 81       	ldd	r24, Y+4	; 0x04
    2b38:	9d 81       	ldd	r25, Y+5	; 0x05
    2b3a:	01 97       	sbiw	r24, 0x01	; 1
    2b3c:	f1 f7       	brne	.-4      	; 0x2b3a <lcd_init+0x390>
    2b3e:	9d 83       	std	Y+5, r25	; 0x05
    2b40:	8c 83       	std	Y+4, r24	; 0x04
    2b42:	8e 81       	ldd	r24, Y+6	; 0x06
    2b44:	9f 81       	ldd	r25, Y+7	; 0x07
    2b46:	01 97       	sbiw	r24, 0x01	; 1
    2b48:	9f 83       	std	Y+7, r25	; 0x07
    2b4a:	8e 83       	std	Y+6, r24	; 0x06
    2b4c:	8e 81       	ldd	r24, Y+6	; 0x06
    2b4e:	9f 81       	ldd	r25, Y+7	; 0x07
    2b50:	00 97       	sbiw	r24, 0x00	; 0
    2b52:	69 f7       	brne	.-38     	; 0x2b2e <lcd_init+0x384>
    2b54:	24 c0       	rjmp	.+72     	; 0x2b9e <lcd_init+0x3f4>
    2b56:	68 85       	ldd	r22, Y+8	; 0x08
    2b58:	79 85       	ldd	r23, Y+9	; 0x09
    2b5a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b5c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b5e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2b62:	dc 01       	movw	r26, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b64:	cb 01       	movw	r24, r22
    2b66:	9f 83       	std	Y+7, r25	; 0x07
    2b68:	8e 83       	std	Y+6, r24	; 0x06
    2b6a:	8e 81       	ldd	r24, Y+6	; 0x06
    2b6c:	9f 81       	ldd	r25, Y+7	; 0x07
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b6e:	9b 83       	std	Y+3, r25	; 0x03
    2b70:	8a 83       	std	Y+2, r24	; 0x02
    2b72:	8a 81       	ldd	r24, Y+2	; 0x02
    2b74:	9b 81       	ldd	r25, Y+3	; 0x03
    2b76:	01 97       	sbiw	r24, 0x01	; 1
    2b78:	f1 f7       	brne	.-4      	; 0x2b76 <lcd_init+0x3cc>
    2b7a:	9b 83       	std	Y+3, r25	; 0x03
    2b7c:	8a 83       	std	Y+2, r24	; 0x02
    2b7e:	0f c0       	rjmp	.+30     	; 0x2b9e <lcd_init+0x3f4>
    2b80:	69 89       	ldd	r22, Y+17	; 0x11
    2b82:	7a 89       	ldd	r23, Y+18	; 0x12
    2b84:	8b 89       	ldd	r24, Y+19	; 0x13
    2b86:	9c 89       	ldd	r25, Y+20	; 0x14
    2b88:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2b8c:	dc 01       	movw	r26, r24
    2b8e:	cb 01       	movw	r24, r22
    2b90:	88 8b       	std	Y+16, r24	; 0x10
    2b92:	88 89       	ldd	r24, Y+16	; 0x10
    2b94:	89 83       	std	Y+1, r24	; 0x01
    2b96:	89 81       	ldd	r24, Y+1	; 0x01
    2b98:	8a 95       	dec	r24
    2b9a:	f1 f7       	brne	.-4      	; 0x2b98 <lcd_init+0x3ee>
    2b9c:	89 83       	std	Y+1, r24	; 0x01
    2b9e:	e2 96       	adiw	r28, 0x32	; 50
    2ba0:	0f b6       	in	r0, 0x3f	; 63
    2ba2:	f8 94       	cli
    2ba4:	de bf       	out	0x3e, r29	; 62
    2ba6:	0f be       	out	0x3f, r0	; 63
    2ba8:	cd bf       	out	0x3d, r28	; 61
    2baa:	cf 91       	pop	r28
    2bac:	df 91       	pop	r29
    2bae:	08 95       	ret

00002bb0 <lcd_send_command>:
	lcd_send_command(lcd, 0x01); //clear
	_delay_us(2000);

}
void lcd_send_command(gcfg_lcd_t * lcd, u8 cmd) {
    2bb0:	0f 93       	push	r16
    2bb2:	1f 93       	push	r17
    2bb4:	df 93       	push	r29
    2bb6:	cf 93       	push	r28
    2bb8:	cd b7       	in	r28, 0x3d	; 61
    2bba:	de b7       	in	r29, 0x3e	; 62
    2bbc:	c3 56       	subi	r28, 0x63	; 99
    2bbe:	d0 40       	sbci	r29, 0x00	; 0
    2bc0:	0f b6       	in	r0, 0x3f	; 63
    2bc2:	f8 94       	cli
    2bc4:	de bf       	out	0x3e, r29	; 62
    2bc6:	0f be       	out	0x3f, r0	; 63
    2bc8:	cd bf       	out	0x3d, r28	; 61
    2bca:	fe 01       	movw	r30, r28
    2bcc:	ef 59       	subi	r30, 0x9F	; 159
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	ed 59       	subi	r30, 0x9D	; 157
    2bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bda:	60 83       	st	Z, r22
	DIO_clear_pin(lcd->controlPort, (lcd->RS));
    2bdc:	fe 01       	movw	r30, r28
    2bde:	ef 59       	subi	r30, 0x9F	; 159
    2be0:	ff 4f       	sbci	r31, 0xFF	; 255
    2be2:	01 90       	ld	r0, Z+
    2be4:	f0 81       	ld	r31, Z
    2be6:	e0 2d       	mov	r30, r0
    2be8:	82 81       	ldd	r24, Z+2	; 0x02
    2bea:	fe 01       	movw	r30, r28
    2bec:	ef 59       	subi	r30, 0x9F	; 159
    2bee:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf0:	01 90       	ld	r0, Z+
    2bf2:	f0 81       	ld	r31, Z
    2bf4:	e0 2d       	mov	r30, r0
    2bf6:	93 81       	ldd	r25, Z+3	; 0x03
    2bf8:	69 2f       	mov	r22, r25
    2bfa:	93 dd       	rcall	.-1242   	; 0x2722 <DIO_clear_pin>
    2bfc:	fe 01       	movw	r30, r28
	DIO_clear_pin(lcd->controlPort, (lcd->RW));
    2bfe:	ef 59       	subi	r30, 0x9F	; 159
    2c00:	ff 4f       	sbci	r31, 0xFF	; 255
    2c02:	01 90       	ld	r0, Z+
    2c04:	f0 81       	ld	r31, Z
    2c06:	e0 2d       	mov	r30, r0
    2c08:	82 81       	ldd	r24, Z+2	; 0x02
    2c0a:	fe 01       	movw	r30, r28
    2c0c:	ef 59       	subi	r30, 0x9F	; 159
    2c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c10:	01 90       	ld	r0, Z+
    2c12:	f0 81       	ld	r31, Z
    2c14:	e0 2d       	mov	r30, r0
    2c16:	94 81       	ldd	r25, Z+4	; 0x04
    2c18:	69 2f       	mov	r22, r25
    2c1a:	83 dd       	rcall	.-1274   	; 0x2722 <DIO_clear_pin>
    2c1c:	fe 01       	movw	r30, r28
    2c1e:	ef 59       	subi	r30, 0x9F	; 159

	if (lcd->nbit == n4BIT_MODE) {
    2c20:	ff 4f       	sbci	r31, 0xFF	; 255
    2c22:	01 90       	ld	r0, Z+
    2c24:	f0 81       	ld	r31, Z
    2c26:	e0 2d       	mov	r30, r0
    2c28:	80 81       	ld	r24, Z
    2c2a:	81 30       	cpi	r24, 0x01	; 1
    2c2c:	09 f0       	breq	.+2      	; 0x2c30 <lcd_send_command+0x80>
    2c2e:	50 c2       	rjmp	.+1184   	; 0x30d0 <lcd_send_command+0x520>
    2c30:	fe 01       	movw	r30, r28
    2c32:	ef 59       	subi	r30, 0x9F	; 159
		DIO_write_port(lcd->dataPort, 0xF0, (cmd & 0xF0));
    2c34:	ff 4f       	sbci	r31, 0xFF	; 255
    2c36:	01 90       	ld	r0, Z+
    2c38:	f0 81       	ld	r31, Z
    2c3a:	e0 2d       	mov	r30, r0
    2c3c:	21 81       	ldd	r18, Z+1	; 0x01
    2c3e:	fe 01       	movw	r30, r28
    2c40:	ed 59       	subi	r30, 0x9D	; 157
    2c42:	ff 4f       	sbci	r31, 0xFF	; 255
    2c44:	80 81       	ld	r24, Z
    2c46:	98 2f       	mov	r25, r24
    2c48:	90 7f       	andi	r25, 0xF0	; 240
    2c4a:	82 2f       	mov	r24, r18
    2c4c:	60 ef       	ldi	r22, 0xF0	; 240
    2c4e:	49 2f       	mov	r20, r25
    2c50:	d1 dc       	rcall	.-1630   	; 0x25f4 <DIO_write_port>
    2c52:	fe 01       	movw	r30, r28
    2c54:	ef 59       	subi	r30, 0x9F	; 159
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
		DIO_set_pin(lcd->controlPort, (lcd->EN));
    2c58:	01 90       	ld	r0, Z+
    2c5a:	f0 81       	ld	r31, Z
    2c5c:	e0 2d       	mov	r30, r0
    2c5e:	82 81       	ldd	r24, Z+2	; 0x02
    2c60:	fe 01       	movw	r30, r28
    2c62:	ef 59       	subi	r30, 0x9F	; 159
    2c64:	ff 4f       	sbci	r31, 0xFF	; 255
    2c66:	01 90       	ld	r0, Z+
    2c68:	f0 81       	ld	r31, Z
    2c6a:	e0 2d       	mov	r30, r0
    2c6c:	95 81       	ldd	r25, Z+5	; 0x05
    2c6e:	69 2f       	mov	r22, r25
    2c70:	33 dd       	rcall	.-1434   	; 0x26d8 <DIO_set_pin>
    2c72:	fe 01       	movw	r30, r28
    2c74:	e3 5a       	subi	r30, 0xA3	; 163
    2c76:	ff 4f       	sbci	r31, 0xFF	; 255
    2c78:	80 e0       	ldi	r24, 0x00	; 0
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	a0 e8       	ldi	r26, 0x80	; 128
    2c7e:	bf e3       	ldi	r27, 0x3F	; 63
    2c80:	80 83       	st	Z, r24
    2c82:	91 83       	std	Z+1, r25	; 0x01
    2c84:	a2 83       	std	Z+2, r26	; 0x02
    2c86:	b3 83       	std	Z+3, r27	; 0x03
    2c88:	8e 01       	movw	r16, r28
    2c8a:	07 5a       	subi	r16, 0xA7	; 167
    2c8c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c8e:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2c90:	e3 5a       	subi	r30, 0xA3	; 163
    2c92:	ff 4f       	sbci	r31, 0xFF	; 255
    2c94:	60 81       	ld	r22, Z
    2c96:	71 81       	ldd	r23, Z+1	; 0x01
    2c98:	82 81       	ldd	r24, Z+2	; 0x02
    2c9a:	93 81       	ldd	r25, Z+3	; 0x03
    2c9c:	2b ea       	ldi	r18, 0xAB	; 171
    2c9e:	3a ea       	ldi	r19, 0xAA	; 170
    2ca0:	4a ea       	ldi	r20, 0xAA	; 170
    2ca2:	5e e3       	ldi	r21, 0x3E	; 62
    2ca4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2ca8:	dc 01       	movw	r26, r24
    2caa:	cb 01       	movw	r24, r22
    2cac:	f8 01       	movw	r30, r16
    2cae:	80 83       	st	Z, r24
    2cb0:	91 83       	std	Z+1, r25	; 0x01
    2cb2:	a2 83       	std	Z+2, r26	; 0x02
    2cb4:	b3 83       	std	Z+3, r27	; 0x03
    2cb6:	fe 01       	movw	r30, r28
    2cb8:	e7 5a       	subi	r30, 0xA7	; 167
    2cba:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbc:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    2cbe:	71 81       	ldd	r23, Z+1	; 0x01
    2cc0:	82 81       	ldd	r24, Z+2	; 0x02
    2cc2:	93 81       	ldd	r25, Z+3	; 0x03
    2cc4:	20 e0       	ldi	r18, 0x00	; 0
    2cc6:	30 e0       	ldi	r19, 0x00	; 0
    2cc8:	40 e8       	ldi	r20, 0x80	; 128
    2cca:	5f e3       	ldi	r21, 0x3F	; 63
    2ccc:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    2cd0:	88 23       	and	r24, r24
    2cd2:	34 f4       	brge	.+12     	; 0x2ce0 <lcd_send_command+0x130>
    2cd4:	fe 01       	movw	r30, r28
    2cd6:	e8 5a       	subi	r30, 0xA8	; 168
    2cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cda:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    2cdc:	80 83       	st	Z, r24
    2cde:	e0 c0       	rjmp	.+448    	; 0x2ea0 <lcd_send_command+0x2f0>
    2ce0:	fe 01       	movw	r30, r28
    2ce2:	e7 5a       	subi	r30, 0xA7	; 167
    2ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce6:	60 81       	ld	r22, Z
	else if (__tmp > 255)
    2ce8:	71 81       	ldd	r23, Z+1	; 0x01
    2cea:	82 81       	ldd	r24, Z+2	; 0x02
    2cec:	93 81       	ldd	r25, Z+3	; 0x03
    2cee:	20 e0       	ldi	r18, 0x00	; 0
    2cf0:	30 e0       	ldi	r19, 0x00	; 0
    2cf2:	4f e7       	ldi	r20, 0x7F	; 127
    2cf4:	53 e4       	ldi	r21, 0x43	; 67
    2cf6:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2cfa:	18 16       	cp	r1, r24
    2cfc:	0c f0       	brlt	.+2      	; 0x2d00 <lcd_send_command+0x150>
    2cfe:	c0 c0       	rjmp	.+384    	; 0x2e80 <lcd_send_command+0x2d0>
    2d00:	fe 01       	movw	r30, r28
    2d02:	e3 5a       	subi	r30, 0xA3	; 163
    2d04:	ff 4f       	sbci	r31, 0xFF	; 255
    2d06:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
    2d08:	71 81       	ldd	r23, Z+1	; 0x01
    2d0a:	82 81       	ldd	r24, Z+2	; 0x02
    2d0c:	93 81       	ldd	r25, Z+3	; 0x03
    2d0e:	20 e0       	ldi	r18, 0x00	; 0
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	4a e7       	ldi	r20, 0x7A	; 122
    2d14:	54 e4       	ldi	r21, 0x44	; 68
    2d16:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    2d1a:	dc 01       	movw	r26, r24
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	fe 01       	movw	r30, r28
    2d20:	ec 5a       	subi	r30, 0xAC	; 172
    2d22:	ff 4f       	sbci	r31, 0xFF	; 255
    2d24:	80 83       	st	Z, r24
    2d26:	91 83       	std	Z+1, r25	; 0x01
    2d28:	a2 83       	std	Z+2, r26	; 0x02
    2d2a:	b3 83       	std	Z+3, r27	; 0x03
    2d2c:	8e 01       	movw	r16, r28
    2d2e:	00 5b       	subi	r16, 0xB0	; 176
    2d30:	1f 4f       	sbci	r17, 0xFF	; 255
    2d32:	fe 01       	movw	r30, r28
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d34:	ec 5a       	subi	r30, 0xAC	; 172
    2d36:	ff 4f       	sbci	r31, 0xFF	; 255
    2d38:	60 81       	ld	r22, Z
    2d3a:	71 81       	ldd	r23, Z+1	; 0x01
    2d3c:	82 81       	ldd	r24, Z+2	; 0x02
    2d3e:	93 81       	ldd	r25, Z+3	; 0x03
    2d40:	20 e0       	ldi	r18, 0x00	; 0
    2d42:	30 e0       	ldi	r19, 0x00	; 0
    2d44:	4a e7       	ldi	r20, 0x7A	; 122
    2d46:	53 e4       	ldi	r21, 0x43	; 67
    2d48:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2d4c:	dc 01       	movw	r26, r24
    2d4e:	cb 01       	movw	r24, r22
    2d50:	f8 01       	movw	r30, r16
    2d52:	80 83       	st	Z, r24
    2d54:	91 83       	std	Z+1, r25	; 0x01
    2d56:	a2 83       	std	Z+2, r26	; 0x02
    2d58:	b3 83       	std	Z+3, r27	; 0x03
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e0 5b       	subi	r30, 0xB0	; 176
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    2d62:	71 81       	ldd	r23, Z+1	; 0x01
    2d64:	82 81       	ldd	r24, Z+2	; 0x02
    2d66:	93 81       	ldd	r25, Z+3	; 0x03
    2d68:	20 e0       	ldi	r18, 0x00	; 0
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	40 e8       	ldi	r20, 0x80	; 128
    2d6e:	5f e3       	ldi	r21, 0x3F	; 63
    2d70:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    2d74:	88 23       	and	r24, r24
    2d76:	44 f4       	brge	.+16     	; 0x2d88 <lcd_send_command+0x1d8>
    2d78:	fe 01       	movw	r30, r28
    2d7a:	e2 5b       	subi	r30, 0xB2	; 178
    2d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	91 83       	std	Z+1, r25	; 0x01
    2d84:	80 83       	st	Z, r24
    2d86:	64 c0       	rjmp	.+200    	; 0x2e50 <lcd_send_command+0x2a0>
    2d88:	fe 01       	movw	r30, r28
    2d8a:	e0 5b       	subi	r30, 0xB0	; 176
    2d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8e:	60 81       	ld	r22, Z
	else if (__tmp > 65535)
    2d90:	71 81       	ldd	r23, Z+1	; 0x01
    2d92:	82 81       	ldd	r24, Z+2	; 0x02
    2d94:	93 81       	ldd	r25, Z+3	; 0x03
    2d96:	20 e0       	ldi	r18, 0x00	; 0
    2d98:	3f ef       	ldi	r19, 0xFF	; 255
    2d9a:	4f e7       	ldi	r20, 0x7F	; 127
    2d9c:	57 e4       	ldi	r21, 0x47	; 71
    2d9e:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2da2:	18 16       	cp	r1, r24
    2da4:	0c f0       	brlt	.+2      	; 0x2da8 <lcd_send_command+0x1f8>
    2da6:	43 c0       	rjmp	.+134    	; 0x2e2e <lcd_send_command+0x27e>
    2da8:	fe 01       	movw	r30, r28
    2daa:	ec 5a       	subi	r30, 0xAC	; 172
    2dac:	ff 4f       	sbci	r31, 0xFF	; 255
    2dae:	60 81       	ld	r22, Z
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2db0:	71 81       	ldd	r23, Z+1	; 0x01
    2db2:	82 81       	ldd	r24, Z+2	; 0x02
    2db4:	93 81       	ldd	r25, Z+3	; 0x03
    2db6:	20 e0       	ldi	r18, 0x00	; 0
    2db8:	30 e0       	ldi	r19, 0x00	; 0
    2dba:	40 e2       	ldi	r20, 0x20	; 32
    2dbc:	51 e4       	ldi	r21, 0x41	; 65
    2dbe:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2dc2:	dc 01       	movw	r26, r24
    2dc4:	cb 01       	movw	r24, r22
    2dc6:	8e 01       	movw	r16, r28
    2dc8:	02 5b       	subi	r16, 0xB2	; 178
    2dca:	1f 4f       	sbci	r17, 0xFF	; 255
    2dcc:	bc 01       	movw	r22, r24
    2dce:	cd 01       	movw	r24, r26
    2dd0:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2dd4:	dc 01       	movw	r26, r24
    2dd6:	cb 01       	movw	r24, r22
    2dd8:	f8 01       	movw	r30, r16
    2dda:	91 83       	std	Z+1, r25	; 0x01
    2ddc:	80 83       	st	Z, r24
    2dde:	1f c0       	rjmp	.+62     	; 0x2e1e <lcd_send_command+0x26e>
    2de0:	fe 01       	movw	r30, r28
    2de2:	e4 5b       	subi	r30, 0xB4	; 180
    2de4:	ff 4f       	sbci	r31, 0xFF	; 255
    2de6:	89 e1       	ldi	r24, 0x19	; 25
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	91 83       	std	Z+1, r25	; 0x01
    2dec:	80 83       	st	Z, r24
    2dee:	fe 01       	movw	r30, r28
    2df0:	e4 5b       	subi	r30, 0xB4	; 180
    2df2:	ff 4f       	sbci	r31, 0xFF	; 255
    2df4:	80 81       	ld	r24, Z
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2df6:	91 81       	ldd	r25, Z+1	; 0x01
    2df8:	01 97       	sbiw	r24, 0x01	; 1
    2dfa:	f1 f7       	brne	.-4      	; 0x2df8 <lcd_send_command+0x248>
    2dfc:	fe 01       	movw	r30, r28
    2dfe:	e4 5b       	subi	r30, 0xB4	; 180
    2e00:	ff 4f       	sbci	r31, 0xFF	; 255
    2e02:	91 83       	std	Z+1, r25	; 0x01
    2e04:	80 83       	st	Z, r24
    2e06:	de 01       	movw	r26, r28
    2e08:	a2 5b       	subi	r26, 0xB2	; 178
    2e0a:	bf 4f       	sbci	r27, 0xFF	; 255
    2e0c:	fe 01       	movw	r30, r28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e0e:	e2 5b       	subi	r30, 0xB2	; 178
    2e10:	ff 4f       	sbci	r31, 0xFF	; 255
    2e12:	80 81       	ld	r24, Z
    2e14:	91 81       	ldd	r25, Z+1	; 0x01
    2e16:	01 97       	sbiw	r24, 0x01	; 1
    2e18:	11 96       	adiw	r26, 0x01	; 1
    2e1a:	9c 93       	st	X, r25
    2e1c:	8e 93       	st	-X, r24
    2e1e:	fe 01       	movw	r30, r28
    2e20:	e2 5b       	subi	r30, 0xB2	; 178
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	80 81       	ld	r24, Z
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e26:	91 81       	ldd	r25, Z+1	; 0x01
    2e28:	00 97       	sbiw	r24, 0x00	; 0
    2e2a:	d1 f6       	brne	.-76     	; 0x2de0 <lcd_send_command+0x230>
    2e2c:	4b c0       	rjmp	.+150    	; 0x2ec4 <lcd_send_command+0x314>
    2e2e:	8e 01       	movw	r16, r28
    2e30:	02 5b       	subi	r16, 0xB2	; 178
    2e32:	1f 4f       	sbci	r17, 0xFF	; 255
    2e34:	fe 01       	movw	r30, r28
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e36:	e0 5b       	subi	r30, 0xB0	; 176
    2e38:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3a:	60 81       	ld	r22, Z
    2e3c:	71 81       	ldd	r23, Z+1	; 0x01
    2e3e:	82 81       	ldd	r24, Z+2	; 0x02
    2e40:	93 81       	ldd	r25, Z+3	; 0x03
    2e42:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2e46:	dc 01       	movw	r26, r24
    2e48:	cb 01       	movw	r24, r22
    2e4a:	f8 01       	movw	r30, r16
    2e4c:	91 83       	std	Z+1, r25	; 0x01
    2e4e:	80 83       	st	Z, r24
    2e50:	de 01       	movw	r26, r28
    2e52:	a6 5b       	subi	r26, 0xB6	; 182
    2e54:	bf 4f       	sbci	r27, 0xFF	; 255
    2e56:	fe 01       	movw	r30, r28
    2e58:	e2 5b       	subi	r30, 0xB2	; 178
    2e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5c:	80 81       	ld	r24, Z
    2e5e:	91 81       	ldd	r25, Z+1	; 0x01
    2e60:	11 96       	adiw	r26, 0x01	; 1
    2e62:	9c 93       	st	X, r25
    2e64:	8e 93       	st	-X, r24
    2e66:	fe 01       	movw	r30, r28
    2e68:	e6 5b       	subi	r30, 0xB6	; 182
    2e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6c:	80 81       	ld	r24, Z
    2e6e:	91 81       	ldd	r25, Z+1	; 0x01
    2e70:	01 97       	sbiw	r24, 0x01	; 1
    2e72:	f1 f7       	brne	.-4      	; 0x2e70 <lcd_send_command+0x2c0>
    2e74:	fe 01       	movw	r30, r28
    2e76:	e6 5b       	subi	r30, 0xB6	; 182
    2e78:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7a:	91 83       	std	Z+1, r25	; 0x01
    2e7c:	80 83       	st	Z, r24
    2e7e:	22 c0       	rjmp	.+68     	; 0x2ec4 <lcd_send_command+0x314>
    2e80:	8e 01       	movw	r16, r28
    2e82:	08 5a       	subi	r16, 0xA8	; 168
    2e84:	1f 4f       	sbci	r17, 0xFF	; 255
    2e86:	fe 01       	movw	r30, r28
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2e88:	e7 5a       	subi	r30, 0xA7	; 167
    2e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8c:	60 81       	ld	r22, Z
    2e8e:	71 81       	ldd	r23, Z+1	; 0x01
    2e90:	82 81       	ldd	r24, Z+2	; 0x02
    2e92:	93 81       	ldd	r25, Z+3	; 0x03
    2e94:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2e98:	dc 01       	movw	r26, r24
    2e9a:	cb 01       	movw	r24, r22
    2e9c:	f8 01       	movw	r30, r16
    2e9e:	80 83       	st	Z, r24
    2ea0:	de 01       	movw	r26, r28
    2ea2:	a7 5b       	subi	r26, 0xB7	; 183
    2ea4:	bf 4f       	sbci	r27, 0xFF	; 255
    2ea6:	fe 01       	movw	r30, r28
    2ea8:	e8 5a       	subi	r30, 0xA8	; 168
    2eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    2eac:	80 81       	ld	r24, Z
    2eae:	8c 93       	st	X, r24
    2eb0:	fe 01       	movw	r30, r28
    2eb2:	e7 5b       	subi	r30, 0xB7	; 183
    2eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb6:	80 81       	ld	r24, Z
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2eb8:	8a 95       	dec	r24
    2eba:	f1 f7       	brne	.-4      	; 0x2eb8 <lcd_send_command+0x308>
    2ebc:	fe 01       	movw	r30, r28
    2ebe:	e7 5b       	subi	r30, 0xB7	; 183
    2ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec2:	80 83       	st	Z, r24
    2ec4:	fe 01       	movw	r30, r28
    2ec6:	ef 59       	subi	r30, 0x9F	; 159
    2ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eca:	01 90       	ld	r0, Z+
		_delay_us(1);
		DIO_clear_pin(lcd->controlPort, (lcd->EN));
    2ecc:	f0 81       	ld	r31, Z
    2ece:	e0 2d       	mov	r30, r0
    2ed0:	82 81       	ldd	r24, Z+2	; 0x02
    2ed2:	fe 01       	movw	r30, r28
    2ed4:	ef 59       	subi	r30, 0x9F	; 159
    2ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed8:	01 90       	ld	r0, Z+
    2eda:	f0 81       	ld	r31, Z
    2edc:	e0 2d       	mov	r30, r0
    2ede:	95 81       	ldd	r25, Z+5	; 0x05
    2ee0:	69 2f       	mov	r22, r25
    2ee2:	1f dc       	rcall	.-1986   	; 0x2722 <DIO_clear_pin>
    2ee4:	fe 01       	movw	r30, r28
    2ee6:	eb 5b       	subi	r30, 0xBB	; 187
    2ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eea:	80 e0       	ldi	r24, 0x00	; 0
    2eec:	90 e0       	ldi	r25, 0x00	; 0
    2eee:	a8 ec       	ldi	r26, 0xC8	; 200
    2ef0:	b2 e4       	ldi	r27, 0x42	; 66
    2ef2:	80 83       	st	Z, r24
    2ef4:	91 83       	std	Z+1, r25	; 0x01
    2ef6:	a2 83       	std	Z+2, r26	; 0x02
    2ef8:	b3 83       	std	Z+3, r27	; 0x03
    2efa:	8e 01       	movw	r16, r28
    2efc:	0f 5b       	subi	r16, 0xBF	; 191
    2efe:	1f 4f       	sbci	r17, 0xFF	; 255
    2f00:	fe 01       	movw	r30, r28
    2f02:	eb 5b       	subi	r30, 0xBB	; 187
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2f04:	ff 4f       	sbci	r31, 0xFF	; 255
    2f06:	60 81       	ld	r22, Z
    2f08:	71 81       	ldd	r23, Z+1	; 0x01
    2f0a:	82 81       	ldd	r24, Z+2	; 0x02
    2f0c:	93 81       	ldd	r25, Z+3	; 0x03
    2f0e:	2b ea       	ldi	r18, 0xAB	; 171
    2f10:	3a ea       	ldi	r19, 0xAA	; 170
    2f12:	4a ea       	ldi	r20, 0xAA	; 170
    2f14:	5e e3       	ldi	r21, 0x3E	; 62
    2f16:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2f1a:	dc 01       	movw	r26, r24
    2f1c:	cb 01       	movw	r24, r22
    2f1e:	f8 01       	movw	r30, r16
    2f20:	80 83       	st	Z, r24
    2f22:	91 83       	std	Z+1, r25	; 0x01
    2f24:	a2 83       	std	Z+2, r26	; 0x02
    2f26:	b3 83       	std	Z+3, r27	; 0x03
    2f28:	fe 01       	movw	r30, r28
    2f2a:	ef 5b       	subi	r30, 0xBF	; 191
    2f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2e:	60 81       	ld	r22, Z
    2f30:	71 81       	ldd	r23, Z+1	; 0x01
	if (__tmp < 1.0)
    2f32:	82 81       	ldd	r24, Z+2	; 0x02
    2f34:	93 81       	ldd	r25, Z+3	; 0x03
    2f36:	20 e0       	ldi	r18, 0x00	; 0
    2f38:	30 e0       	ldi	r19, 0x00	; 0
    2f3a:	40 e8       	ldi	r20, 0x80	; 128
    2f3c:	5f e3       	ldi	r21, 0x3F	; 63
    2f3e:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    2f42:	88 23       	and	r24, r24
    2f44:	34 f4       	brge	.+12     	; 0x2f52 <lcd_send_command+0x3a2>
    2f46:	81 e0       	ldi	r24, 0x01	; 1
    2f48:	fe 01       	movw	r30, r28
    2f4a:	e0 5c       	subi	r30, 0xC0	; 192
    2f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4e:	80 83       	st	Z, r24
		__ticks = 1;
    2f50:	9d c0       	rjmp	.+314    	; 0x308c <lcd_send_command+0x4dc>
    2f52:	fe 01       	movw	r30, r28
    2f54:	ef 5b       	subi	r30, 0xBF	; 191
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	60 81       	ld	r22, Z
    2f5a:	71 81       	ldd	r23, Z+1	; 0x01
	else if (__tmp > 255)
    2f5c:	82 81       	ldd	r24, Z+2	; 0x02
    2f5e:	93 81       	ldd	r25, Z+3	; 0x03
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	4f e7       	ldi	r20, 0x7F	; 127
    2f66:	53 e4       	ldi	r21, 0x43	; 67
    2f68:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2f6c:	18 16       	cp	r1, r24
    2f6e:	0c f0       	brlt	.+2      	; 0x2f72 <lcd_send_command+0x3c2>
    2f70:	7e c0       	rjmp	.+252    	; 0x306e <lcd_send_command+0x4be>
    2f72:	fe 01       	movw	r30, r28
    2f74:	eb 5b       	subi	r30, 0xBB	; 187
    2f76:	ff 4f       	sbci	r31, 0xFF	; 255
    2f78:	60 81       	ld	r22, Z
    2f7a:	71 81       	ldd	r23, Z+1	; 0x01
	{
		_delay_ms(__us / 1000.0);
    2f7c:	82 81       	ldd	r24, Z+2	; 0x02
    2f7e:	93 81       	ldd	r25, Z+3	; 0x03
    2f80:	20 e0       	ldi	r18, 0x00	; 0
    2f82:	30 e0       	ldi	r19, 0x00	; 0
    2f84:	4a e7       	ldi	r20, 0x7A	; 122
    2f86:	54 e4       	ldi	r21, 0x44	; 68
    2f88:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    2f8c:	dc 01       	movw	r26, r24
    2f8e:	cb 01       	movw	r24, r22
    2f90:	8c af       	std	Y+60, r24	; 0x3c
    2f92:	9d af       	std	Y+61, r25	; 0x3d
    2f94:	ae af       	std	Y+62, r26	; 0x3e
    2f96:	bf af       	std	Y+63, r27	; 0x3f
    2f98:	6c ad       	ldd	r22, Y+60	; 0x3c
    2f9a:	7d ad       	ldd	r23, Y+61	; 0x3d
    2f9c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2f9e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2fa0:	20 e0       	ldi	r18, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fa2:	30 e0       	ldi	r19, 0x00	; 0
    2fa4:	4a e7       	ldi	r20, 0x7A	; 122
    2fa6:	53 e4       	ldi	r21, 0x43	; 67
    2fa8:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    2fac:	dc 01       	movw	r26, r24
    2fae:	cb 01       	movw	r24, r22
    2fb0:	88 af       	std	Y+56, r24	; 0x38
    2fb2:	99 af       	std	Y+57, r25	; 0x39
    2fb4:	aa af       	std	Y+58, r26	; 0x3a
    2fb6:	bb af       	std	Y+59, r27	; 0x3b
    2fb8:	68 ad       	ldd	r22, Y+56	; 0x38
    2fba:	79 ad       	ldd	r23, Y+57	; 0x39
    2fbc:	8a ad       	ldd	r24, Y+58	; 0x3a
    2fbe:	9b ad       	ldd	r25, Y+59	; 0x3b
    2fc0:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    2fc2:	30 e0       	ldi	r19, 0x00	; 0
    2fc4:	40 e8       	ldi	r20, 0x80	; 128
    2fc6:	5f e3       	ldi	r21, 0x3F	; 63
    2fc8:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    2fcc:	88 23       	and	r24, r24
    2fce:	2c f4       	brge	.+10     	; 0x2fda <lcd_send_command+0x42a>
    2fd0:	81 e0       	ldi	r24, 0x01	; 1
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	9f ab       	std	Y+55, r25	; 0x37
    2fd6:	8e ab       	std	Y+54, r24	; 0x36
    2fd8:	3f c0       	rjmp	.+126    	; 0x3058 <lcd_send_command+0x4a8>
		__ticks = 1;
    2fda:	68 ad       	ldd	r22, Y+56	; 0x38
    2fdc:	79 ad       	ldd	r23, Y+57	; 0x39
    2fde:	8a ad       	ldd	r24, Y+58	; 0x3a
    2fe0:	9b ad       	ldd	r25, Y+59	; 0x3b
    2fe2:	20 e0       	ldi	r18, 0x00	; 0
	else if (__tmp > 65535)
    2fe4:	3f ef       	ldi	r19, 0xFF	; 255
    2fe6:	4f e7       	ldi	r20, 0x7F	; 127
    2fe8:	57 e4       	ldi	r21, 0x47	; 71
    2fea:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    2fee:	18 16       	cp	r1, r24
    2ff0:	4c f5       	brge	.+82     	; 0x3044 <lcd_send_command+0x494>
    2ff2:	6c ad       	ldd	r22, Y+60	; 0x3c
    2ff4:	7d ad       	ldd	r23, Y+61	; 0x3d
    2ff6:	8e ad       	ldd	r24, Y+62	; 0x3e
    2ff8:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ffa:	20 e0       	ldi	r18, 0x00	; 0
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ffc:	30 e0       	ldi	r19, 0x00	; 0
    2ffe:	40 e2       	ldi	r20, 0x20	; 32
    3000:	51 e4       	ldi	r21, 0x41	; 65
    3002:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3006:	dc 01       	movw	r26, r24
    3008:	cb 01       	movw	r24, r22
    300a:	bc 01       	movw	r22, r24
    300c:	cd 01       	movw	r24, r26
    300e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3012:	dc 01       	movw	r26, r24
    3014:	cb 01       	movw	r24, r22
    3016:	9f ab       	std	Y+55, r25	; 0x37
    3018:	8e ab       	std	Y+54, r24	; 0x36
    301a:	0f c0       	rjmp	.+30     	; 0x303a <lcd_send_command+0x48a>
    301c:	89 e1       	ldi	r24, 0x19	; 25
    301e:	90 e0       	ldi	r25, 0x00	; 0
    3020:	9d ab       	std	Y+53, r25	; 0x35
    3022:	8c ab       	std	Y+52, r24	; 0x34
    3024:	8c a9       	ldd	r24, Y+52	; 0x34
    3026:	9d a9       	ldd	r25, Y+53	; 0x35
    3028:	01 97       	sbiw	r24, 0x01	; 1
    302a:	f1 f7       	brne	.-4      	; 0x3028 <lcd_send_command+0x478>
    302c:	9d ab       	std	Y+53, r25	; 0x35
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    302e:	8c ab       	std	Y+52, r24	; 0x34
    3030:	8e a9       	ldd	r24, Y+54	; 0x36
    3032:	9f a9       	ldd	r25, Y+55	; 0x37
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	9f ab       	std	Y+55, r25	; 0x37
    3038:	8e ab       	std	Y+54, r24	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    303a:	8e a9       	ldd	r24, Y+54	; 0x36
    303c:	9f a9       	ldd	r25, Y+55	; 0x37
    303e:	00 97       	sbiw	r24, 0x00	; 0
    3040:	69 f7       	brne	.-38     	; 0x301c <lcd_send_command+0x46c>
    3042:	2d c0       	rjmp	.+90     	; 0x309e <lcd_send_command+0x4ee>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3044:	68 ad       	ldd	r22, Y+56	; 0x38
    3046:	79 ad       	ldd	r23, Y+57	; 0x39
    3048:	8a ad       	ldd	r24, Y+58	; 0x3a
    304a:	9b ad       	ldd	r25, Y+59	; 0x3b
    304c:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3050:	dc 01       	movw	r26, r24
    3052:	cb 01       	movw	r24, r22
    3054:	9f ab       	std	Y+55, r25	; 0x37
    3056:	8e ab       	std	Y+54, r24	; 0x36
    3058:	8e a9       	ldd	r24, Y+54	; 0x36
    305a:	9f a9       	ldd	r25, Y+55	; 0x37
    305c:	9b ab       	std	Y+51, r25	; 0x33
    305e:	8a ab       	std	Y+50, r24	; 0x32
    3060:	8a a9       	ldd	r24, Y+50	; 0x32
    3062:	9b a9       	ldd	r25, Y+51	; 0x33
    3064:	01 97       	sbiw	r24, 0x01	; 1
    3066:	f1 f7       	brne	.-4      	; 0x3064 <lcd_send_command+0x4b4>
    3068:	9b ab       	std	Y+51, r25	; 0x33
    306a:	8a ab       	std	Y+50, r24	; 0x32
    306c:	18 c0       	rjmp	.+48     	; 0x309e <lcd_send_command+0x4ee>
    306e:	fe 01       	movw	r30, r28
    3070:	ef 5b       	subi	r30, 0xBF	; 191
    3072:	ff 4f       	sbci	r31, 0xFF	; 255
    3074:	60 81       	ld	r22, Z
    3076:	71 81       	ldd	r23, Z+1	; 0x01
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3078:	82 81       	ldd	r24, Z+2	; 0x02
    307a:	93 81       	ldd	r25, Z+3	; 0x03
    307c:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3080:	dc 01       	movw	r26, r24
    3082:	cb 01       	movw	r24, r22
    3084:	fe 01       	movw	r30, r28
    3086:	e0 5c       	subi	r30, 0xC0	; 192
    3088:	ff 4f       	sbci	r31, 0xFF	; 255
    308a:	80 83       	st	Z, r24
    308c:	fe 01       	movw	r30, r28
    308e:	e0 5c       	subi	r30, 0xC0	; 192
    3090:	ff 4f       	sbci	r31, 0xFF	; 255
    3092:	80 81       	ld	r24, Z
    3094:	89 ab       	std	Y+49, r24	; 0x31
    3096:	89 a9       	ldd	r24, Y+49	; 0x31
    3098:	8a 95       	dec	r24
    309a:	f1 f7       	brne	.-4      	; 0x3098 <lcd_send_command+0x4e8>
    309c:	89 ab       	std	Y+49, r24	; 0x31
    309e:	fe 01       	movw	r30, r28
    30a0:	ef 59       	subi	r30, 0x9F	; 159
    30a2:	ff 4f       	sbci	r31, 0xFF	; 255
    30a4:	01 90       	ld	r0, Z+
    30a6:	f0 81       	ld	r31, Z
		_delay_us(100);
		DIO_write_port(lcd->dataPort, 0xF0, (cmd & 0xF) << 4);
    30a8:	e0 2d       	mov	r30, r0
    30aa:	21 81       	ldd	r18, Z+1	; 0x01
    30ac:	fe 01       	movw	r30, r28
    30ae:	ed 59       	subi	r30, 0x9D	; 157
    30b0:	ff 4f       	sbci	r31, 0xFF	; 255
    30b2:	80 81       	ld	r24, Z
    30b4:	88 2f       	mov	r24, r24
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	82 95       	swap	r24
    30ba:	92 95       	swap	r25
    30bc:	90 7f       	andi	r25, 0xF0	; 240
    30be:	98 27       	eor	r25, r24
    30c0:	80 7f       	andi	r24, 0xF0	; 240
    30c2:	98 27       	eor	r25, r24
    30c4:	98 2f       	mov	r25, r24
    30c6:	82 2f       	mov	r24, r18
    30c8:	60 ef       	ldi	r22, 0xF0	; 240
    30ca:	49 2f       	mov	r20, r25
    30cc:	93 da       	rcall	.-2778   	; 0x25f4 <DIO_write_port>
    30ce:	16 c0       	rjmp	.+44     	; 0x30fc <lcd_send_command+0x54c>
    30d0:	fe 01       	movw	r30, r28
    30d2:	ef 59       	subi	r30, 0x9F	; 159
    30d4:	ff 4f       	sbci	r31, 0xFF	; 255
    30d6:	01 90       	ld	r0, Z+
    30d8:	f0 81       	ld	r31, Z
    30da:	e0 2d       	mov	r30, r0
	} else if (lcd->nbit == n8BIT_MODE) {
    30dc:	80 81       	ld	r24, Z
    30de:	82 30       	cpi	r24, 0x02	; 2
    30e0:	69 f4       	brne	.+26     	; 0x30fc <lcd_send_command+0x54c>
    30e2:	fe 01       	movw	r30, r28
    30e4:	ef 59       	subi	r30, 0x9F	; 159
    30e6:	ff 4f       	sbci	r31, 0xFF	; 255
    30e8:	01 90       	ld	r0, Z+
    30ea:	f0 81       	ld	r31, Z
    30ec:	e0 2d       	mov	r30, r0
		DIO_write_port(lcd->dataPort, 0xFF, cmd);
    30ee:	81 81       	ldd	r24, Z+1	; 0x01
    30f0:	fe 01       	movw	r30, r28
    30f2:	ed 59       	subi	r30, 0x9D	; 157
    30f4:	ff 4f       	sbci	r31, 0xFF	; 255
    30f6:	6f ef       	ldi	r22, 0xFF	; 255
    30f8:	40 81       	ld	r20, Z
    30fa:	7c da       	rcall	.-2824   	; 0x25f4 <DIO_write_port>
    30fc:	fe 01       	movw	r30, r28
    30fe:	ef 59       	subi	r30, 0x9F	; 159
    3100:	ff 4f       	sbci	r31, 0xFF	; 255
    3102:	01 90       	ld	r0, Z+
    3104:	f0 81       	ld	r31, Z
    3106:	e0 2d       	mov	r30, r0
    3108:	82 81       	ldd	r24, Z+2	; 0x02
	} else {
		// todo error
	}
	DIO_set_pin(lcd->controlPort, (lcd->EN));
    310a:	fe 01       	movw	r30, r28
    310c:	ef 59       	subi	r30, 0x9F	; 159
    310e:	ff 4f       	sbci	r31, 0xFF	; 255
    3110:	01 90       	ld	r0, Z+
    3112:	f0 81       	ld	r31, Z
    3114:	e0 2d       	mov	r30, r0
    3116:	95 81       	ldd	r25, Z+5	; 0x05
    3118:	69 2f       	mov	r22, r25
    311a:	de da       	rcall	.-2628   	; 0x26d8 <DIO_set_pin>
    311c:	80 e0       	ldi	r24, 0x00	; 0
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	a0 e8       	ldi	r26, 0x80	; 128
    3122:	bf e3       	ldi	r27, 0x3F	; 63
    3124:	8d a7       	std	Y+45, r24	; 0x2d
    3126:	9e a7       	std	Y+46, r25	; 0x2e
    3128:	af a7       	std	Y+47, r26	; 0x2f
    312a:	b8 ab       	std	Y+48, r27	; 0x30
    312c:	6d a5       	ldd	r22, Y+45	; 0x2d
    312e:	7e a5       	ldd	r23, Y+46	; 0x2e
    3130:	8f a5       	ldd	r24, Y+47	; 0x2f
    3132:	98 a9       	ldd	r25, Y+48	; 0x30
    3134:	2b ea       	ldi	r18, 0xAB	; 171
    3136:	3a ea       	ldi	r19, 0xAA	; 170
    3138:	4a ea       	ldi	r20, 0xAA	; 170
    313a:	5e e3       	ldi	r21, 0x3E	; 62
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    313c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3140:	dc 01       	movw	r26, r24
    3142:	cb 01       	movw	r24, r22
    3144:	89 a7       	std	Y+41, r24	; 0x29
    3146:	9a a7       	std	Y+42, r25	; 0x2a
    3148:	ab a7       	std	Y+43, r26	; 0x2b
    314a:	bc a7       	std	Y+44, r27	; 0x2c
    314c:	69 a5       	ldd	r22, Y+41	; 0x29
    314e:	7a a5       	ldd	r23, Y+42	; 0x2a
    3150:	8b a5       	ldd	r24, Y+43	; 0x2b
    3152:	9c a5       	ldd	r25, Y+44	; 0x2c
    3154:	20 e0       	ldi	r18, 0x00	; 0
    3156:	30 e0       	ldi	r19, 0x00	; 0
    3158:	40 e8       	ldi	r20, 0x80	; 128
    315a:	5f e3       	ldi	r21, 0x3F	; 63
	if (__tmp < 1.0)
    315c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3160:	88 23       	and	r24, r24
    3162:	1c f4       	brge	.+6      	; 0x316a <lcd_send_command+0x5ba>
    3164:	81 e0       	ldi	r24, 0x01	; 1
    3166:	88 a7       	std	Y+40, r24	; 0x28
    3168:	91 c0       	rjmp	.+290    	; 0x328c <lcd_send_command+0x6dc>
    316a:	69 a5       	ldd	r22, Y+41	; 0x29
    316c:	7a a5       	ldd	r23, Y+42	; 0x2a
    316e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3170:	9c a5       	ldd	r25, Y+44	; 0x2c
    3172:	20 e0       	ldi	r18, 0x00	; 0
		__ticks = 1;
    3174:	30 e0       	ldi	r19, 0x00	; 0
    3176:	4f e7       	ldi	r20, 0x7F	; 127
    3178:	53 e4       	ldi	r21, 0x43	; 67
	else if (__tmp > 255)
    317a:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    317e:	18 16       	cp	r1, r24
    3180:	0c f0       	brlt	.+2      	; 0x3184 <lcd_send_command+0x5d4>
    3182:	7b c0       	rjmp	.+246    	; 0x327a <lcd_send_command+0x6ca>
    3184:	6d a5       	ldd	r22, Y+45	; 0x2d
    3186:	7e a5       	ldd	r23, Y+46	; 0x2e
    3188:	8f a5       	ldd	r24, Y+47	; 0x2f
    318a:	98 a9       	ldd	r25, Y+48	; 0x30
    318c:	20 e0       	ldi	r18, 0x00	; 0
    318e:	30 e0       	ldi	r19, 0x00	; 0
    3190:	4a e7       	ldi	r20, 0x7A	; 122
    3192:	54 e4       	ldi	r21, 0x44	; 68
	{
		_delay_ms(__us / 1000.0);
    3194:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    3198:	dc 01       	movw	r26, r24
    319a:	cb 01       	movw	r24, r22
    319c:	8c a3       	std	Y+36, r24	; 0x24
    319e:	9d a3       	std	Y+37, r25	; 0x25
    31a0:	ae a3       	std	Y+38, r26	; 0x26
    31a2:	bf a3       	std	Y+39, r27	; 0x27
    31a4:	6c a1       	ldd	r22, Y+36	; 0x24
    31a6:	7d a1       	ldd	r23, Y+37	; 0x25
    31a8:	8e a1       	ldd	r24, Y+38	; 0x26
    31aa:	9f a1       	ldd	r25, Y+39	; 0x27
    31ac:	20 e0       	ldi	r18, 0x00	; 0
    31ae:	30 e0       	ldi	r19, 0x00	; 0
    31b0:	4a e7       	ldi	r20, 0x7A	; 122
    31b2:	53 e4       	ldi	r21, 0x43	; 67
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31b4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    31b8:	dc 01       	movw	r26, r24
    31ba:	cb 01       	movw	r24, r22
    31bc:	88 a3       	std	Y+32, r24	; 0x20
    31be:	99 a3       	std	Y+33, r25	; 0x21
    31c0:	aa a3       	std	Y+34, r26	; 0x22
    31c2:	bb a3       	std	Y+35, r27	; 0x23
    31c4:	68 a1       	ldd	r22, Y+32	; 0x20
    31c6:	79 a1       	ldd	r23, Y+33	; 0x21
    31c8:	8a a1       	ldd	r24, Y+34	; 0x22
    31ca:	9b a1       	ldd	r25, Y+35	; 0x23
    31cc:	20 e0       	ldi	r18, 0x00	; 0
    31ce:	30 e0       	ldi	r19, 0x00	; 0
    31d0:	40 e8       	ldi	r20, 0x80	; 128
    31d2:	5f e3       	ldi	r21, 0x3F	; 63
	if (__tmp < 1.0)
    31d4:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    31d8:	88 23       	and	r24, r24
    31da:	2c f4       	brge	.+10     	; 0x31e6 <lcd_send_command+0x636>
    31dc:	81 e0       	ldi	r24, 0x01	; 1
    31de:	90 e0       	ldi	r25, 0x00	; 0
    31e0:	9f 8f       	std	Y+31, r25	; 0x1f
    31e2:	8e 8f       	std	Y+30, r24	; 0x1e
    31e4:	3f c0       	rjmp	.+126    	; 0x3264 <lcd_send_command+0x6b4>
    31e6:	68 a1       	ldd	r22, Y+32	; 0x20
    31e8:	79 a1       	ldd	r23, Y+33	; 0x21
    31ea:	8a a1       	ldd	r24, Y+34	; 0x22
		__ticks = 1;
    31ec:	9b a1       	ldd	r25, Y+35	; 0x23
    31ee:	20 e0       	ldi	r18, 0x00	; 0
    31f0:	3f ef       	ldi	r19, 0xFF	; 255
    31f2:	4f e7       	ldi	r20, 0x7F	; 127
    31f4:	57 e4       	ldi	r21, 0x47	; 71
	else if (__tmp > 65535)
    31f6:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    31fa:	18 16       	cp	r1, r24
    31fc:	4c f5       	brge	.+82     	; 0x3250 <lcd_send_command+0x6a0>
    31fe:	6c a1       	ldd	r22, Y+36	; 0x24
    3200:	7d a1       	ldd	r23, Y+37	; 0x25
    3202:	8e a1       	ldd	r24, Y+38	; 0x26
    3204:	9f a1       	ldd	r25, Y+39	; 0x27
    3206:	20 e0       	ldi	r18, 0x00	; 0
    3208:	30 e0       	ldi	r19, 0x00	; 0
    320a:	40 e2       	ldi	r20, 0x20	; 32
    320c:	51 e4       	ldi	r21, 0x41	; 65
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    320e:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3212:	dc 01       	movw	r26, r24
    3214:	cb 01       	movw	r24, r22
    3216:	bc 01       	movw	r22, r24
    3218:	cd 01       	movw	r24, r26
    321a:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    321e:	dc 01       	movw	r26, r24
    3220:	cb 01       	movw	r24, r22
    3222:	9f 8f       	std	Y+31, r25	; 0x1f
    3224:	8e 8f       	std	Y+30, r24	; 0x1e
    3226:	0f c0       	rjmp	.+30     	; 0x3246 <lcd_send_command+0x696>
    3228:	89 e1       	ldi	r24, 0x19	; 25
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	9d 8f       	std	Y+29, r25	; 0x1d
    322e:	8c 8f       	std	Y+28, r24	; 0x1c
    3230:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3232:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3234:	01 97       	sbiw	r24, 0x01	; 1
    3236:	f1 f7       	brne	.-4      	; 0x3234 <lcd_send_command+0x684>
    3238:	9d 8f       	std	Y+29, r25	; 0x1d
    323a:	8c 8f       	std	Y+28, r24	; 0x1c
    323c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    323e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3240:	01 97       	sbiw	r24, 0x01	; 1
    3242:	9f 8f       	std	Y+31, r25	; 0x1f
    3244:	8e 8f       	std	Y+30, r24	; 0x1e
    3246:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3248:	9f 8d       	ldd	r25, Y+31	; 0x1f
    324a:	00 97       	sbiw	r24, 0x00	; 0
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    324c:	69 f7       	brne	.-38     	; 0x3228 <lcd_send_command+0x678>
    324e:	24 c0       	rjmp	.+72     	; 0x3298 <lcd_send_command+0x6e8>
    3250:	68 a1       	ldd	r22, Y+32	; 0x20
    3252:	79 a1       	ldd	r23, Y+33	; 0x21
    3254:	8a a1       	ldd	r24, Y+34	; 0x22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3256:	9b a1       	ldd	r25, Y+35	; 0x23
    3258:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    325c:	dc 01       	movw	r26, r24
    325e:	cb 01       	movw	r24, r22
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3260:	9f 8f       	std	Y+31, r25	; 0x1f
    3262:	8e 8f       	std	Y+30, r24	; 0x1e
    3264:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3266:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3268:	9b 8f       	std	Y+27, r25	; 0x1b
    326a:	8a 8f       	std	Y+26, r24	; 0x1a
    326c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    326e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3270:	01 97       	sbiw	r24, 0x01	; 1
    3272:	f1 f7       	brne	.-4      	; 0x3270 <lcd_send_command+0x6c0>
    3274:	9b 8f       	std	Y+27, r25	; 0x1b
    3276:	8a 8f       	std	Y+26, r24	; 0x1a
    3278:	0f c0       	rjmp	.+30     	; 0x3298 <lcd_send_command+0x6e8>
    327a:	69 a5       	ldd	r22, Y+41	; 0x29
    327c:	7a a5       	ldd	r23, Y+42	; 0x2a
    327e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3280:	9c a5       	ldd	r25, Y+44	; 0x2c
    3282:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3286:	dc 01       	movw	r26, r24
    3288:	cb 01       	movw	r24, r22
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    328a:	88 a7       	std	Y+40, r24	; 0x28
    328c:	88 a5       	ldd	r24, Y+40	; 0x28
    328e:	89 8f       	std	Y+25, r24	; 0x19
    3290:	89 8d       	ldd	r24, Y+25	; 0x19
    3292:	8a 95       	dec	r24
    3294:	f1 f7       	brne	.-4      	; 0x3292 <lcd_send_command+0x6e2>
    3296:	89 8f       	std	Y+25, r24	; 0x19
    3298:	fe 01       	movw	r30, r28
    329a:	ef 59       	subi	r30, 0x9F	; 159
    329c:	ff 4f       	sbci	r31, 0xFF	; 255
    329e:	01 90       	ld	r0, Z+
    32a0:	f0 81       	ld	r31, Z
    32a2:	e0 2d       	mov	r30, r0
    32a4:	82 81       	ldd	r24, Z+2	; 0x02
    32a6:	fe 01       	movw	r30, r28
	_delay_us(1);
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    32a8:	ef 59       	subi	r30, 0x9F	; 159
    32aa:	ff 4f       	sbci	r31, 0xFF	; 255
    32ac:	01 90       	ld	r0, Z+
    32ae:	f0 81       	ld	r31, Z
    32b0:	e0 2d       	mov	r30, r0
    32b2:	95 81       	ldd	r25, Z+5	; 0x05
    32b4:	69 2f       	mov	r22, r25
    32b6:	35 da       	rcall	.-2966   	; 0x2722 <DIO_clear_pin>
    32b8:	80 e0       	ldi	r24, 0x00	; 0
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	a8 ec       	ldi	r26, 0xC8	; 200
    32be:	b2 e4       	ldi	r27, 0x42	; 66
    32c0:	8d 8b       	std	Y+21, r24	; 0x15
    32c2:	9e 8b       	std	Y+22, r25	; 0x16
    32c4:	af 8b       	std	Y+23, r26	; 0x17
    32c6:	b8 8f       	std	Y+24, r27	; 0x18
    32c8:	6d 89       	ldd	r22, Y+21	; 0x15
    32ca:	7e 89       	ldd	r23, Y+22	; 0x16
    32cc:	8f 89       	ldd	r24, Y+23	; 0x17
    32ce:	98 8d       	ldd	r25, Y+24	; 0x18
    32d0:	2b ea       	ldi	r18, 0xAB	; 171
    32d2:	3a ea       	ldi	r19, 0xAA	; 170
    32d4:	4a ea       	ldi	r20, 0xAA	; 170
    32d6:	5e e3       	ldi	r21, 0x3E	; 62
    32d8:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    32dc:	dc 01       	movw	r26, r24
    32de:	cb 01       	movw	r24, r22
    32e0:	89 8b       	std	Y+17, r24	; 0x11
    32e2:	9a 8b       	std	Y+18, r25	; 0x12
    32e4:	ab 8b       	std	Y+19, r26	; 0x13
    32e6:	bc 8b       	std	Y+20, r27	; 0x14
    32e8:	69 89       	ldd	r22, Y+17	; 0x11
    32ea:	7a 89       	ldd	r23, Y+18	; 0x12
    32ec:	8b 89       	ldd	r24, Y+19	; 0x13
    32ee:	9c 89       	ldd	r25, Y+20	; 0x14
    32f0:	20 e0       	ldi	r18, 0x00	; 0
    32f2:	30 e0       	ldi	r19, 0x00	; 0
    32f4:	40 e8       	ldi	r20, 0x80	; 128
    32f6:	5f e3       	ldi	r21, 0x3F	; 63
    32f8:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
	if (__tmp < 1.0)
    32fc:	88 23       	and	r24, r24
    32fe:	1c f4       	brge	.+6      	; 0x3306 <lcd_send_command+0x756>
    3300:	81 e0       	ldi	r24, 0x01	; 1
    3302:	88 8b       	std	Y+16, r24	; 0x10
    3304:	91 c0       	rjmp	.+290    	; 0x3428 <lcd_send_command+0x878>
    3306:	69 89       	ldd	r22, Y+17	; 0x11
    3308:	7a 89       	ldd	r23, Y+18	; 0x12
    330a:	8b 89       	ldd	r24, Y+19	; 0x13
    330c:	9c 89       	ldd	r25, Y+20	; 0x14
    330e:	20 e0       	ldi	r18, 0x00	; 0
    3310:	30 e0       	ldi	r19, 0x00	; 0
		__ticks = 1;
    3312:	4f e7       	ldi	r20, 0x7F	; 127
    3314:	53 e4       	ldi	r21, 0x43	; 67
    3316:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
	else if (__tmp > 255)
    331a:	18 16       	cp	r1, r24
    331c:	0c f0       	brlt	.+2      	; 0x3320 <lcd_send_command+0x770>
    331e:	7b c0       	rjmp	.+246    	; 0x3416 <lcd_send_command+0x866>
    3320:	6d 89       	ldd	r22, Y+21	; 0x15
    3322:	7e 89       	ldd	r23, Y+22	; 0x16
    3324:	8f 89       	ldd	r24, Y+23	; 0x17
    3326:	98 8d       	ldd	r25, Y+24	; 0x18
    3328:	20 e0       	ldi	r18, 0x00	; 0
    332a:	30 e0       	ldi	r19, 0x00	; 0
    332c:	4a e7       	ldi	r20, 0x7A	; 122
    332e:	54 e4       	ldi	r21, 0x44	; 68
    3330:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
	{
		_delay_ms(__us / 1000.0);
    3334:	dc 01       	movw	r26, r24
    3336:	cb 01       	movw	r24, r22
    3338:	8c 87       	std	Y+12, r24	; 0x0c
    333a:	9d 87       	std	Y+13, r25	; 0x0d
    333c:	ae 87       	std	Y+14, r26	; 0x0e
    333e:	bf 87       	std	Y+15, r27	; 0x0f
    3340:	6c 85       	ldd	r22, Y+12	; 0x0c
    3342:	7d 85       	ldd	r23, Y+13	; 0x0d
    3344:	8e 85       	ldd	r24, Y+14	; 0x0e
    3346:	9f 85       	ldd	r25, Y+15	; 0x0f
    3348:	20 e0       	ldi	r18, 0x00	; 0
    334a:	30 e0       	ldi	r19, 0x00	; 0
    334c:	4a e7       	ldi	r20, 0x7A	; 122
    334e:	53 e4       	ldi	r21, 0x43	; 67
    3350:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3354:	dc 01       	movw	r26, r24
    3356:	cb 01       	movw	r24, r22
    3358:	88 87       	std	Y+8, r24	; 0x08
    335a:	99 87       	std	Y+9, r25	; 0x09
    335c:	aa 87       	std	Y+10, r26	; 0x0a
    335e:	bb 87       	std	Y+11, r27	; 0x0b
    3360:	68 85       	ldd	r22, Y+8	; 0x08
    3362:	79 85       	ldd	r23, Y+9	; 0x09
    3364:	8a 85       	ldd	r24, Y+10	; 0x0a
    3366:	9b 85       	ldd	r25, Y+11	; 0x0b
    3368:	20 e0       	ldi	r18, 0x00	; 0
    336a:	30 e0       	ldi	r19, 0x00	; 0
    336c:	40 e8       	ldi	r20, 0x80	; 128
    336e:	5f e3       	ldi	r21, 0x3F	; 63
    3370:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
	if (__tmp < 1.0)
    3374:	88 23       	and	r24, r24
    3376:	2c f4       	brge	.+10     	; 0x3382 <lcd_send_command+0x7d2>
    3378:	81 e0       	ldi	r24, 0x01	; 1
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	9f 83       	std	Y+7, r25	; 0x07
    337e:	8e 83       	std	Y+6, r24	; 0x06
    3380:	3f c0       	rjmp	.+126    	; 0x3400 <lcd_send_command+0x850>
    3382:	68 85       	ldd	r22, Y+8	; 0x08
    3384:	79 85       	ldd	r23, Y+9	; 0x09
    3386:	8a 85       	ldd	r24, Y+10	; 0x0a
    3388:	9b 85       	ldd	r25, Y+11	; 0x0b
		__ticks = 1;
    338a:	20 e0       	ldi	r18, 0x00	; 0
    338c:	3f ef       	ldi	r19, 0xFF	; 255
    338e:	4f e7       	ldi	r20, 0x7F	; 127
    3390:	57 e4       	ldi	r21, 0x47	; 71
    3392:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
	else if (__tmp > 65535)
    3396:	18 16       	cp	r1, r24
    3398:	4c f5       	brge	.+82     	; 0x33ec <lcd_send_command+0x83c>
    339a:	6c 85       	ldd	r22, Y+12	; 0x0c
    339c:	7d 85       	ldd	r23, Y+13	; 0x0d
    339e:	8e 85       	ldd	r24, Y+14	; 0x0e
    33a0:	9f 85       	ldd	r25, Y+15	; 0x0f
    33a2:	20 e0       	ldi	r18, 0x00	; 0
    33a4:	30 e0       	ldi	r19, 0x00	; 0
    33a6:	40 e2       	ldi	r20, 0x20	; 32
    33a8:	51 e4       	ldi	r21, 0x41	; 65
    33aa:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33ae:	dc 01       	movw	r26, r24
    33b0:	cb 01       	movw	r24, r22
    33b2:	bc 01       	movw	r22, r24
    33b4:	cd 01       	movw	r24, r26
    33b6:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    33ba:	dc 01       	movw	r26, r24
    33bc:	cb 01       	movw	r24, r22
    33be:	9f 83       	std	Y+7, r25	; 0x07
    33c0:	8e 83       	std	Y+6, r24	; 0x06
    33c2:	0f c0       	rjmp	.+30     	; 0x33e2 <lcd_send_command+0x832>
    33c4:	89 e1       	ldi	r24, 0x19	; 25
    33c6:	90 e0       	ldi	r25, 0x00	; 0
    33c8:	9d 83       	std	Y+5, r25	; 0x05
    33ca:	8c 83       	std	Y+4, r24	; 0x04
    33cc:	8c 81       	ldd	r24, Y+4	; 0x04
    33ce:	9d 81       	ldd	r25, Y+5	; 0x05
    33d0:	01 97       	sbiw	r24, 0x01	; 1
    33d2:	f1 f7       	brne	.-4      	; 0x33d0 <lcd_send_command+0x820>
    33d4:	9d 83       	std	Y+5, r25	; 0x05
    33d6:	8c 83       	std	Y+4, r24	; 0x04
    33d8:	8e 81       	ldd	r24, Y+6	; 0x06
    33da:	9f 81       	ldd	r25, Y+7	; 0x07
    33dc:	01 97       	sbiw	r24, 0x01	; 1
    33de:	9f 83       	std	Y+7, r25	; 0x07
    33e0:	8e 83       	std	Y+6, r24	; 0x06
    33e2:	8e 81       	ldd	r24, Y+6	; 0x06
    33e4:	9f 81       	ldd	r25, Y+7	; 0x07
    33e6:	00 97       	sbiw	r24, 0x00	; 0
    33e8:	69 f7       	brne	.-38     	; 0x33c4 <lcd_send_command+0x814>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33ea:	24 c0       	rjmp	.+72     	; 0x3434 <lcd_send_command+0x884>
    33ec:	68 85       	ldd	r22, Y+8	; 0x08
    33ee:	79 85       	ldd	r23, Y+9	; 0x09
    33f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    33f2:	9b 85       	ldd	r25, Y+11	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33f4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	9f 83       	std	Y+7, r25	; 0x07
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33fe:	8e 83       	std	Y+6, r24	; 0x06
    3400:	8e 81       	ldd	r24, Y+6	; 0x06
    3402:	9f 81       	ldd	r25, Y+7	; 0x07
    3404:	9b 83       	std	Y+3, r25	; 0x03
    3406:	8a 83       	std	Y+2, r24	; 0x02
    3408:	8a 81       	ldd	r24, Y+2	; 0x02
    340a:	9b 81       	ldd	r25, Y+3	; 0x03
    340c:	01 97       	sbiw	r24, 0x01	; 1
    340e:	f1 f7       	brne	.-4      	; 0x340c <lcd_send_command+0x85c>
    3410:	9b 83       	std	Y+3, r25	; 0x03
    3412:	8a 83       	std	Y+2, r24	; 0x02
    3414:	0f c0       	rjmp	.+30     	; 0x3434 <lcd_send_command+0x884>
    3416:	69 89       	ldd	r22, Y+17	; 0x11
    3418:	7a 89       	ldd	r23, Y+18	; 0x12
    341a:	8b 89       	ldd	r24, Y+19	; 0x13
    341c:	9c 89       	ldd	r25, Y+20	; 0x14
    341e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3422:	dc 01       	movw	r26, r24
    3424:	cb 01       	movw	r24, r22
    3426:	88 8b       	std	Y+16, r24	; 0x10
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3428:	88 89       	ldd	r24, Y+16	; 0x10
    342a:	89 83       	std	Y+1, r24	; 0x01
    342c:	89 81       	ldd	r24, Y+1	; 0x01
    342e:	8a 95       	dec	r24
    3430:	f1 f7       	brne	.-4      	; 0x342e <lcd_send_command+0x87e>
    3432:	89 83       	std	Y+1, r24	; 0x01
    3434:	cd 59       	subi	r28, 0x9D	; 157
    3436:	df 4f       	sbci	r29, 0xFF	; 255
    3438:	0f b6       	in	r0, 0x3f	; 63
    343a:	f8 94       	cli
    343c:	de bf       	out	0x3e, r29	; 62
    343e:	0f be       	out	0x3f, r0	; 63
    3440:	cd bf       	out	0x3d, r28	; 61
    3442:	cf 91       	pop	r28
    3444:	df 91       	pop	r29
	_delay_us(100);
}
    3446:	1f 91       	pop	r17
    3448:	0f 91       	pop	r16
    344a:	08 95       	ret

0000344c <lcd_send_data>:
void lcd_send_data(gcfg_lcd_t * lcd, u8 data) {
    344c:	0f 93       	push	r16
    344e:	1f 93       	push	r17
    3450:	df 93       	push	r29
    3452:	cf 93       	push	r28
    3454:	cd b7       	in	r28, 0x3d	; 61
    3456:	de b7       	in	r29, 0x3e	; 62
    3458:	c3 56       	subi	r28, 0x63	; 99
    345a:	d0 40       	sbci	r29, 0x00	; 0
    345c:	0f b6       	in	r0, 0x3f	; 63
    345e:	f8 94       	cli
    3460:	de bf       	out	0x3e, r29	; 62
    3462:	0f be       	out	0x3f, r0	; 63
    3464:	cd bf       	out	0x3d, r28	; 61
    3466:	fe 01       	movw	r30, r28
    3468:	ef 59       	subi	r30, 0x9F	; 159
    346a:	ff 4f       	sbci	r31, 0xFF	; 255
    346c:	91 83       	std	Z+1, r25	; 0x01
    346e:	80 83       	st	Z, r24
    3470:	fe 01       	movw	r30, r28
    3472:	ed 59       	subi	r30, 0x9D	; 157
    3474:	ff 4f       	sbci	r31, 0xFF	; 255
    3476:	60 83       	st	Z, r22
	DIO_set_pin(lcd->controlPort, (lcd->RS));
    3478:	fe 01       	movw	r30, r28
    347a:	ef 59       	subi	r30, 0x9F	; 159
    347c:	ff 4f       	sbci	r31, 0xFF	; 255
    347e:	01 90       	ld	r0, Z+
    3480:	f0 81       	ld	r31, Z
    3482:	e0 2d       	mov	r30, r0
    3484:	82 81       	ldd	r24, Z+2	; 0x02
    3486:	fe 01       	movw	r30, r28
    3488:	ef 59       	subi	r30, 0x9F	; 159
    348a:	ff 4f       	sbci	r31, 0xFF	; 255
    348c:	01 90       	ld	r0, Z+
    348e:	f0 81       	ld	r31, Z
    3490:	e0 2d       	mov	r30, r0
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	69 2f       	mov	r22, r25
    3496:	20 d9       	rcall	.-3520   	; 0x26d8 <DIO_set_pin>
    3498:	fe 01       	movw	r30, r28
	DIO_clear_pin(lcd->controlPort, (lcd->RW));
    349a:	ef 59       	subi	r30, 0x9F	; 159
    349c:	ff 4f       	sbci	r31, 0xFF	; 255
    349e:	01 90       	ld	r0, Z+
    34a0:	f0 81       	ld	r31, Z
    34a2:	e0 2d       	mov	r30, r0
    34a4:	82 81       	ldd	r24, Z+2	; 0x02
    34a6:	fe 01       	movw	r30, r28
    34a8:	ef 59       	subi	r30, 0x9F	; 159
    34aa:	ff 4f       	sbci	r31, 0xFF	; 255
    34ac:	01 90       	ld	r0, Z+
    34ae:	f0 81       	ld	r31, Z
    34b0:	e0 2d       	mov	r30, r0
    34b2:	94 81       	ldd	r25, Z+4	; 0x04
    34b4:	69 2f       	mov	r22, r25
    34b6:	35 d9       	rcall	.-3478   	; 0x2722 <DIO_clear_pin>
    34b8:	fe 01       	movw	r30, r28
    34ba:	ef 59       	subi	r30, 0x9F	; 159

	if (lcd->nbit == n4BIT_MODE) {
    34bc:	ff 4f       	sbci	r31, 0xFF	; 255
    34be:	01 90       	ld	r0, Z+
    34c0:	f0 81       	ld	r31, Z
    34c2:	e0 2d       	mov	r30, r0
    34c4:	80 81       	ld	r24, Z
    34c6:	81 30       	cpi	r24, 0x01	; 1
    34c8:	09 f0       	breq	.+2      	; 0x34cc <lcd_send_data+0x80>
    34ca:	52 c2       	rjmp	.+1188   	; 0x3970 <lcd_send_data+0x524>
    34cc:	fe 01       	movw	r30, r28
    34ce:	ef 59       	subi	r30, 0x9F	; 159
		DIO_write_port(lcd->dataPort, 0xF0, (data & 0xF0));
    34d0:	ff 4f       	sbci	r31, 0xFF	; 255
    34d2:	01 90       	ld	r0, Z+
    34d4:	f0 81       	ld	r31, Z
    34d6:	e0 2d       	mov	r30, r0
    34d8:	21 81       	ldd	r18, Z+1	; 0x01
    34da:	fe 01       	movw	r30, r28
    34dc:	ed 59       	subi	r30, 0x9D	; 157
    34de:	ff 4f       	sbci	r31, 0xFF	; 255
    34e0:	80 81       	ld	r24, Z
    34e2:	98 2f       	mov	r25, r24
    34e4:	90 7f       	andi	r25, 0xF0	; 240
    34e6:	82 2f       	mov	r24, r18
    34e8:	60 ef       	ldi	r22, 0xF0	; 240
    34ea:	49 2f       	mov	r20, r25
    34ec:	83 d8       	rcall	.-3834   	; 0x25f4 <DIO_write_port>
    34ee:	fe 01       	movw	r30, r28
    34f0:	ef 59       	subi	r30, 0x9F	; 159
    34f2:	ff 4f       	sbci	r31, 0xFF	; 255
		DIO_set_pin(lcd->controlPort, (lcd->EN));
    34f4:	01 90       	ld	r0, Z+
    34f6:	f0 81       	ld	r31, Z
    34f8:	e0 2d       	mov	r30, r0
    34fa:	82 81       	ldd	r24, Z+2	; 0x02
    34fc:	fe 01       	movw	r30, r28
    34fe:	ef 59       	subi	r30, 0x9F	; 159
    3500:	ff 4f       	sbci	r31, 0xFF	; 255
    3502:	01 90       	ld	r0, Z+
    3504:	f0 81       	ld	r31, Z
    3506:	e0 2d       	mov	r30, r0
    3508:	95 81       	ldd	r25, Z+5	; 0x05
    350a:	69 2f       	mov	r22, r25
    350c:	e5 d8       	rcall	.-3638   	; 0x26d8 <DIO_set_pin>
    350e:	fe 01       	movw	r30, r28
    3510:	e3 5a       	subi	r30, 0xA3	; 163
    3512:	ff 4f       	sbci	r31, 0xFF	; 255
    3514:	80 e0       	ldi	r24, 0x00	; 0
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	a0 e8       	ldi	r26, 0x80	; 128
    351a:	bf e3       	ldi	r27, 0x3F	; 63
    351c:	80 83       	st	Z, r24
    351e:	91 83       	std	Z+1, r25	; 0x01
    3520:	a2 83       	std	Z+2, r26	; 0x02
    3522:	b3 83       	std	Z+3, r27	; 0x03
    3524:	8e 01       	movw	r16, r28
    3526:	07 5a       	subi	r16, 0xA7	; 167
    3528:	1f 4f       	sbci	r17, 0xFF	; 255
    352a:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    352c:	e3 5a       	subi	r30, 0xA3	; 163
    352e:	ff 4f       	sbci	r31, 0xFF	; 255
    3530:	60 81       	ld	r22, Z
    3532:	71 81       	ldd	r23, Z+1	; 0x01
    3534:	82 81       	ldd	r24, Z+2	; 0x02
    3536:	93 81       	ldd	r25, Z+3	; 0x03
    3538:	2b ea       	ldi	r18, 0xAB	; 171
    353a:	3a ea       	ldi	r19, 0xAA	; 170
    353c:	4a ea       	ldi	r20, 0xAA	; 170
    353e:	5e e3       	ldi	r21, 0x3E	; 62
    3540:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3544:	dc 01       	movw	r26, r24
    3546:	cb 01       	movw	r24, r22
    3548:	f8 01       	movw	r30, r16
    354a:	80 83       	st	Z, r24
    354c:	91 83       	std	Z+1, r25	; 0x01
    354e:	a2 83       	std	Z+2, r26	; 0x02
    3550:	b3 83       	std	Z+3, r27	; 0x03
    3552:	fe 01       	movw	r30, r28
    3554:	e7 5a       	subi	r30, 0xA7	; 167
    3556:	ff 4f       	sbci	r31, 0xFF	; 255
    3558:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    355a:	71 81       	ldd	r23, Z+1	; 0x01
    355c:	82 81       	ldd	r24, Z+2	; 0x02
    355e:	93 81       	ldd	r25, Z+3	; 0x03
    3560:	20 e0       	ldi	r18, 0x00	; 0
    3562:	30 e0       	ldi	r19, 0x00	; 0
    3564:	40 e8       	ldi	r20, 0x80	; 128
    3566:	5f e3       	ldi	r21, 0x3F	; 63
    3568:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    356c:	88 23       	and	r24, r24
    356e:	34 f4       	brge	.+12     	; 0x357c <lcd_send_data+0x130>
    3570:	fe 01       	movw	r30, r28
    3572:	e8 5a       	subi	r30, 0xA8	; 168
    3574:	ff 4f       	sbci	r31, 0xFF	; 255
    3576:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    3578:	80 83       	st	Z, r24
    357a:	e0 c0       	rjmp	.+448    	; 0x373c <lcd_send_data+0x2f0>
    357c:	fe 01       	movw	r30, r28
    357e:	e7 5a       	subi	r30, 0xA7	; 167
    3580:	ff 4f       	sbci	r31, 0xFF	; 255
    3582:	60 81       	ld	r22, Z
	else if (__tmp > 255)
    3584:	71 81       	ldd	r23, Z+1	; 0x01
    3586:	82 81       	ldd	r24, Z+2	; 0x02
    3588:	93 81       	ldd	r25, Z+3	; 0x03
    358a:	20 e0       	ldi	r18, 0x00	; 0
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	4f e7       	ldi	r20, 0x7F	; 127
    3590:	53 e4       	ldi	r21, 0x43	; 67
    3592:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    3596:	18 16       	cp	r1, r24
    3598:	0c f0       	brlt	.+2      	; 0x359c <lcd_send_data+0x150>
    359a:	c0 c0       	rjmp	.+384    	; 0x371c <lcd_send_data+0x2d0>
    359c:	fe 01       	movw	r30, r28
    359e:	e3 5a       	subi	r30, 0xA3	; 163
    35a0:	ff 4f       	sbci	r31, 0xFF	; 255
    35a2:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
    35a4:	71 81       	ldd	r23, Z+1	; 0x01
    35a6:	82 81       	ldd	r24, Z+2	; 0x02
    35a8:	93 81       	ldd	r25, Z+3	; 0x03
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	4a e7       	ldi	r20, 0x7A	; 122
    35b0:	54 e4       	ldi	r21, 0x44	; 68
    35b2:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    35b6:	dc 01       	movw	r26, r24
    35b8:	cb 01       	movw	r24, r22
    35ba:	fe 01       	movw	r30, r28
    35bc:	ec 5a       	subi	r30, 0xAC	; 172
    35be:	ff 4f       	sbci	r31, 0xFF	; 255
    35c0:	80 83       	st	Z, r24
    35c2:	91 83       	std	Z+1, r25	; 0x01
    35c4:	a2 83       	std	Z+2, r26	; 0x02
    35c6:	b3 83       	std	Z+3, r27	; 0x03
    35c8:	8e 01       	movw	r16, r28
    35ca:	00 5b       	subi	r16, 0xB0	; 176
    35cc:	1f 4f       	sbci	r17, 0xFF	; 255
    35ce:	fe 01       	movw	r30, r28
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35d0:	ec 5a       	subi	r30, 0xAC	; 172
    35d2:	ff 4f       	sbci	r31, 0xFF	; 255
    35d4:	60 81       	ld	r22, Z
    35d6:	71 81       	ldd	r23, Z+1	; 0x01
    35d8:	82 81       	ldd	r24, Z+2	; 0x02
    35da:	93 81       	ldd	r25, Z+3	; 0x03
    35dc:	20 e0       	ldi	r18, 0x00	; 0
    35de:	30 e0       	ldi	r19, 0x00	; 0
    35e0:	4a e7       	ldi	r20, 0x7A	; 122
    35e2:	53 e4       	ldi	r21, 0x43	; 67
    35e4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    35e8:	dc 01       	movw	r26, r24
    35ea:	cb 01       	movw	r24, r22
    35ec:	f8 01       	movw	r30, r16
    35ee:	80 83       	st	Z, r24
    35f0:	91 83       	std	Z+1, r25	; 0x01
    35f2:	a2 83       	std	Z+2, r26	; 0x02
    35f4:	b3 83       	std	Z+3, r27	; 0x03
    35f6:	fe 01       	movw	r30, r28
    35f8:	e0 5b       	subi	r30, 0xB0	; 176
    35fa:	ff 4f       	sbci	r31, 0xFF	; 255
    35fc:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    35fe:	71 81       	ldd	r23, Z+1	; 0x01
    3600:	82 81       	ldd	r24, Z+2	; 0x02
    3602:	93 81       	ldd	r25, Z+3	; 0x03
    3604:	20 e0       	ldi	r18, 0x00	; 0
    3606:	30 e0       	ldi	r19, 0x00	; 0
    3608:	40 e8       	ldi	r20, 0x80	; 128
    360a:	5f e3       	ldi	r21, 0x3F	; 63
    360c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3610:	88 23       	and	r24, r24
    3612:	44 f4       	brge	.+16     	; 0x3624 <lcd_send_data+0x1d8>
    3614:	fe 01       	movw	r30, r28
    3616:	e2 5b       	subi	r30, 0xB2	; 178
    3618:	ff 4f       	sbci	r31, 0xFF	; 255
    361a:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    361c:	90 e0       	ldi	r25, 0x00	; 0
    361e:	91 83       	std	Z+1, r25	; 0x01
    3620:	80 83       	st	Z, r24
    3622:	64 c0       	rjmp	.+200    	; 0x36ec <lcd_send_data+0x2a0>
    3624:	fe 01       	movw	r30, r28
    3626:	e0 5b       	subi	r30, 0xB0	; 176
    3628:	ff 4f       	sbci	r31, 0xFF	; 255
    362a:	60 81       	ld	r22, Z
	else if (__tmp > 65535)
    362c:	71 81       	ldd	r23, Z+1	; 0x01
    362e:	82 81       	ldd	r24, Z+2	; 0x02
    3630:	93 81       	ldd	r25, Z+3	; 0x03
    3632:	20 e0       	ldi	r18, 0x00	; 0
    3634:	3f ef       	ldi	r19, 0xFF	; 255
    3636:	4f e7       	ldi	r20, 0x7F	; 127
    3638:	57 e4       	ldi	r21, 0x47	; 71
    363a:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    363e:	18 16       	cp	r1, r24
    3640:	0c f0       	brlt	.+2      	; 0x3644 <lcd_send_data+0x1f8>
    3642:	43 c0       	rjmp	.+134    	; 0x36ca <lcd_send_data+0x27e>
    3644:	fe 01       	movw	r30, r28
    3646:	ec 5a       	subi	r30, 0xAC	; 172
    3648:	ff 4f       	sbci	r31, 0xFF	; 255
    364a:	60 81       	ld	r22, Z
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    364c:	71 81       	ldd	r23, Z+1	; 0x01
    364e:	82 81       	ldd	r24, Z+2	; 0x02
    3650:	93 81       	ldd	r25, Z+3	; 0x03
    3652:	20 e0       	ldi	r18, 0x00	; 0
    3654:	30 e0       	ldi	r19, 0x00	; 0
    3656:	40 e2       	ldi	r20, 0x20	; 32
    3658:	51 e4       	ldi	r21, 0x41	; 65
    365a:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    365e:	dc 01       	movw	r26, r24
    3660:	cb 01       	movw	r24, r22
    3662:	8e 01       	movw	r16, r28
    3664:	02 5b       	subi	r16, 0xB2	; 178
    3666:	1f 4f       	sbci	r17, 0xFF	; 255
    3668:	bc 01       	movw	r22, r24
    366a:	cd 01       	movw	r24, r26
    366c:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3670:	dc 01       	movw	r26, r24
    3672:	cb 01       	movw	r24, r22
    3674:	f8 01       	movw	r30, r16
    3676:	91 83       	std	Z+1, r25	; 0x01
    3678:	80 83       	st	Z, r24
    367a:	1f c0       	rjmp	.+62     	; 0x36ba <lcd_send_data+0x26e>
    367c:	fe 01       	movw	r30, r28
    367e:	e4 5b       	subi	r30, 0xB4	; 180
    3680:	ff 4f       	sbci	r31, 0xFF	; 255
    3682:	89 e1       	ldi	r24, 0x19	; 25
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	91 83       	std	Z+1, r25	; 0x01
    3688:	80 83       	st	Z, r24
    368a:	fe 01       	movw	r30, r28
    368c:	e4 5b       	subi	r30, 0xB4	; 180
    368e:	ff 4f       	sbci	r31, 0xFF	; 255
    3690:	80 81       	ld	r24, Z
    3692:	91 81       	ldd	r25, Z+1	; 0x01
    3694:	01 97       	sbiw	r24, 0x01	; 1
    3696:	f1 f7       	brne	.-4      	; 0x3694 <lcd_send_data+0x248>
    3698:	fe 01       	movw	r30, r28
    369a:	e4 5b       	subi	r30, 0xB4	; 180
    369c:	ff 4f       	sbci	r31, 0xFF	; 255
    369e:	91 83       	std	Z+1, r25	; 0x01
    36a0:	80 83       	st	Z, r24
    36a2:	de 01       	movw	r26, r28
    36a4:	a2 5b       	subi	r26, 0xB2	; 178
    36a6:	bf 4f       	sbci	r27, 0xFF	; 255
    36a8:	fe 01       	movw	r30, r28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36aa:	e2 5b       	subi	r30, 0xB2	; 178
    36ac:	ff 4f       	sbci	r31, 0xFF	; 255
    36ae:	80 81       	ld	r24, Z
    36b0:	91 81       	ldd	r25, Z+1	; 0x01
    36b2:	01 97       	sbiw	r24, 0x01	; 1
    36b4:	11 96       	adiw	r26, 0x01	; 1
    36b6:	9c 93       	st	X, r25
    36b8:	8e 93       	st	-X, r24
    36ba:	fe 01       	movw	r30, r28
    36bc:	e2 5b       	subi	r30, 0xB2	; 178
    36be:	ff 4f       	sbci	r31, 0xFF	; 255
    36c0:	80 81       	ld	r24, Z
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36c2:	91 81       	ldd	r25, Z+1	; 0x01
    36c4:	00 97       	sbiw	r24, 0x00	; 0
    36c6:	d1 f6       	brne	.-76     	; 0x367c <lcd_send_data+0x230>
    36c8:	4b c0       	rjmp	.+150    	; 0x3760 <lcd_send_data+0x314>
    36ca:	8e 01       	movw	r16, r28
    36cc:	02 5b       	subi	r16, 0xB2	; 178
    36ce:	1f 4f       	sbci	r17, 0xFF	; 255
    36d0:	fe 01       	movw	r30, r28
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36d2:	e0 5b       	subi	r30, 0xB0	; 176
    36d4:	ff 4f       	sbci	r31, 0xFF	; 255
    36d6:	60 81       	ld	r22, Z
    36d8:	71 81       	ldd	r23, Z+1	; 0x01
    36da:	82 81       	ldd	r24, Z+2	; 0x02
    36dc:	93 81       	ldd	r25, Z+3	; 0x03
    36de:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    36e2:	dc 01       	movw	r26, r24
    36e4:	cb 01       	movw	r24, r22
    36e6:	f8 01       	movw	r30, r16
    36e8:	91 83       	std	Z+1, r25	; 0x01
    36ea:	80 83       	st	Z, r24
    36ec:	de 01       	movw	r26, r28
    36ee:	a6 5b       	subi	r26, 0xB6	; 182
    36f0:	bf 4f       	sbci	r27, 0xFF	; 255
    36f2:	fe 01       	movw	r30, r28
    36f4:	e2 5b       	subi	r30, 0xB2	; 178
    36f6:	ff 4f       	sbci	r31, 0xFF	; 255
    36f8:	80 81       	ld	r24, Z
    36fa:	91 81       	ldd	r25, Z+1	; 0x01
    36fc:	11 96       	adiw	r26, 0x01	; 1
    36fe:	9c 93       	st	X, r25
    3700:	8e 93       	st	-X, r24
    3702:	fe 01       	movw	r30, r28
    3704:	e6 5b       	subi	r30, 0xB6	; 182
    3706:	ff 4f       	sbci	r31, 0xFF	; 255
    3708:	80 81       	ld	r24, Z
    370a:	91 81       	ldd	r25, Z+1	; 0x01
    370c:	01 97       	sbiw	r24, 0x01	; 1
    370e:	f1 f7       	brne	.-4      	; 0x370c <lcd_send_data+0x2c0>
    3710:	fe 01       	movw	r30, r28
    3712:	e6 5b       	subi	r30, 0xB6	; 182
    3714:	ff 4f       	sbci	r31, 0xFF	; 255
    3716:	91 83       	std	Z+1, r25	; 0x01
    3718:	80 83       	st	Z, r24
    371a:	22 c0       	rjmp	.+68     	; 0x3760 <lcd_send_data+0x314>
    371c:	8e 01       	movw	r16, r28
    371e:	08 5a       	subi	r16, 0xA8	; 168
    3720:	1f 4f       	sbci	r17, 0xFF	; 255
    3722:	fe 01       	movw	r30, r28
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3724:	e7 5a       	subi	r30, 0xA7	; 167
    3726:	ff 4f       	sbci	r31, 0xFF	; 255
    3728:	60 81       	ld	r22, Z
    372a:	71 81       	ldd	r23, Z+1	; 0x01
    372c:	82 81       	ldd	r24, Z+2	; 0x02
    372e:	93 81       	ldd	r25, Z+3	; 0x03
    3730:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3734:	dc 01       	movw	r26, r24
    3736:	cb 01       	movw	r24, r22
    3738:	f8 01       	movw	r30, r16
    373a:	80 83       	st	Z, r24
    373c:	de 01       	movw	r26, r28
    373e:	a7 5b       	subi	r26, 0xB7	; 183
    3740:	bf 4f       	sbci	r27, 0xFF	; 255
    3742:	fe 01       	movw	r30, r28
    3744:	e8 5a       	subi	r30, 0xA8	; 168
    3746:	ff 4f       	sbci	r31, 0xFF	; 255
    3748:	80 81       	ld	r24, Z
    374a:	8c 93       	st	X, r24
    374c:	fe 01       	movw	r30, r28
    374e:	e7 5b       	subi	r30, 0xB7	; 183
    3750:	ff 4f       	sbci	r31, 0xFF	; 255
    3752:	80 81       	ld	r24, Z
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3754:	8a 95       	dec	r24
    3756:	f1 f7       	brne	.-4      	; 0x3754 <lcd_send_data+0x308>
    3758:	fe 01       	movw	r30, r28
    375a:	e7 5b       	subi	r30, 0xB7	; 183
    375c:	ff 4f       	sbci	r31, 0xFF	; 255
    375e:	80 83       	st	Z, r24
    3760:	fe 01       	movw	r30, r28
    3762:	ef 59       	subi	r30, 0x9F	; 159
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	01 90       	ld	r0, Z+
		_delay_us(1);
		DIO_clear_pin(lcd->controlPort, (lcd->EN));
    3768:	f0 81       	ld	r31, Z
    376a:	e0 2d       	mov	r30, r0
    376c:	82 81       	ldd	r24, Z+2	; 0x02
    376e:	fe 01       	movw	r30, r28
    3770:	ef 59       	subi	r30, 0x9F	; 159
    3772:	ff 4f       	sbci	r31, 0xFF	; 255
    3774:	01 90       	ld	r0, Z+
    3776:	f0 81       	ld	r31, Z
    3778:	e0 2d       	mov	r30, r0
    377a:	95 81       	ldd	r25, Z+5	; 0x05
    377c:	69 2f       	mov	r22, r25
    377e:	0e 94 91 13 	call	0x2722	; 0x2722 <DIO_clear_pin>
    3782:	fe 01       	movw	r30, r28
    3784:	eb 5b       	subi	r30, 0xBB	; 187
    3786:	ff 4f       	sbci	r31, 0xFF	; 255
    3788:	80 e0       	ldi	r24, 0x00	; 0
    378a:	90 e0       	ldi	r25, 0x00	; 0
    378c:	a8 ec       	ldi	r26, 0xC8	; 200
    378e:	b2 e4       	ldi	r27, 0x42	; 66
    3790:	80 83       	st	Z, r24
    3792:	91 83       	std	Z+1, r25	; 0x01
    3794:	a2 83       	std	Z+2, r26	; 0x02
    3796:	b3 83       	std	Z+3, r27	; 0x03
    3798:	8e 01       	movw	r16, r28
    379a:	0f 5b       	subi	r16, 0xBF	; 191
    379c:	1f 4f       	sbci	r17, 0xFF	; 255
    379e:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    37a0:	eb 5b       	subi	r30, 0xBB	; 187
    37a2:	ff 4f       	sbci	r31, 0xFF	; 255
    37a4:	60 81       	ld	r22, Z
    37a6:	71 81       	ldd	r23, Z+1	; 0x01
    37a8:	82 81       	ldd	r24, Z+2	; 0x02
    37aa:	93 81       	ldd	r25, Z+3	; 0x03
    37ac:	2b ea       	ldi	r18, 0xAB	; 171
    37ae:	3a ea       	ldi	r19, 0xAA	; 170
    37b0:	4a ea       	ldi	r20, 0xAA	; 170
    37b2:	5e e3       	ldi	r21, 0x3E	; 62
    37b4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	f8 01       	movw	r30, r16
    37be:	80 83       	st	Z, r24
    37c0:	91 83       	std	Z+1, r25	; 0x01
    37c2:	a2 83       	std	Z+2, r26	; 0x02
    37c4:	b3 83       	std	Z+3, r27	; 0x03
    37c6:	fe 01       	movw	r30, r28
    37c8:	ef 5b       	subi	r30, 0xBF	; 191
    37ca:	ff 4f       	sbci	r31, 0xFF	; 255
    37cc:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    37ce:	71 81       	ldd	r23, Z+1	; 0x01
    37d0:	82 81       	ldd	r24, Z+2	; 0x02
    37d2:	93 81       	ldd	r25, Z+3	; 0x03
    37d4:	20 e0       	ldi	r18, 0x00	; 0
    37d6:	30 e0       	ldi	r19, 0x00	; 0
    37d8:	40 e8       	ldi	r20, 0x80	; 128
    37da:	5f e3       	ldi	r21, 0x3F	; 63
    37dc:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    37e0:	88 23       	and	r24, r24
    37e2:	34 f4       	brge	.+12     	; 0x37f0 <lcd_send_data+0x3a4>
    37e4:	81 e0       	ldi	r24, 0x01	; 1
    37e6:	fe 01       	movw	r30, r28
    37e8:	e0 5c       	subi	r30, 0xC0	; 192
    37ea:	ff 4f       	sbci	r31, 0xFF	; 255
		__ticks = 1;
    37ec:	80 83       	st	Z, r24
    37ee:	9d c0       	rjmp	.+314    	; 0x392a <lcd_send_data+0x4de>
    37f0:	fe 01       	movw	r30, r28
    37f2:	ef 5b       	subi	r30, 0xBF	; 191
    37f4:	ff 4f       	sbci	r31, 0xFF	; 255
    37f6:	60 81       	ld	r22, Z
	else if (__tmp > 255)
    37f8:	71 81       	ldd	r23, Z+1	; 0x01
    37fa:	82 81       	ldd	r24, Z+2	; 0x02
    37fc:	93 81       	ldd	r25, Z+3	; 0x03
    37fe:	20 e0       	ldi	r18, 0x00	; 0
    3800:	30 e0       	ldi	r19, 0x00	; 0
    3802:	4f e7       	ldi	r20, 0x7F	; 127
    3804:	53 e4       	ldi	r21, 0x43	; 67
    3806:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    380a:	18 16       	cp	r1, r24
    380c:	0c f0       	brlt	.+2      	; 0x3810 <lcd_send_data+0x3c4>
    380e:	7e c0       	rjmp	.+252    	; 0x390c <lcd_send_data+0x4c0>
    3810:	fe 01       	movw	r30, r28
    3812:	eb 5b       	subi	r30, 0xBB	; 187
    3814:	ff 4f       	sbci	r31, 0xFF	; 255
    3816:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
    3818:	71 81       	ldd	r23, Z+1	; 0x01
    381a:	82 81       	ldd	r24, Z+2	; 0x02
    381c:	93 81       	ldd	r25, Z+3	; 0x03
    381e:	20 e0       	ldi	r18, 0x00	; 0
    3820:	30 e0       	ldi	r19, 0x00	; 0
    3822:	4a e7       	ldi	r20, 0x7A	; 122
    3824:	54 e4       	ldi	r21, 0x44	; 68
    3826:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    382a:	dc 01       	movw	r26, r24
    382c:	cb 01       	movw	r24, r22
    382e:	8c af       	std	Y+60, r24	; 0x3c
    3830:	9d af       	std	Y+61, r25	; 0x3d
    3832:	ae af       	std	Y+62, r26	; 0x3e
    3834:	bf af       	std	Y+63, r27	; 0x3f
    3836:	6c ad       	ldd	r22, Y+60	; 0x3c
    3838:	7d ad       	ldd	r23, Y+61	; 0x3d
    383a:	8e ad       	ldd	r24, Y+62	; 0x3e
    383c:	9f ad       	ldd	r25, Y+63	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    383e:	20 e0       	ldi	r18, 0x00	; 0
    3840:	30 e0       	ldi	r19, 0x00	; 0
    3842:	4a e7       	ldi	r20, 0x7A	; 122
    3844:	53 e4       	ldi	r21, 0x43	; 67
    3846:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    384a:	dc 01       	movw	r26, r24
    384c:	cb 01       	movw	r24, r22
    384e:	88 af       	std	Y+56, r24	; 0x38
    3850:	99 af       	std	Y+57, r25	; 0x39
    3852:	aa af       	std	Y+58, r26	; 0x3a
    3854:	bb af       	std	Y+59, r27	; 0x3b
    3856:	68 ad       	ldd	r22, Y+56	; 0x38
    3858:	79 ad       	ldd	r23, Y+57	; 0x39
    385a:	8a ad       	ldd	r24, Y+58	; 0x3a
    385c:	9b ad       	ldd	r25, Y+59	; 0x3b
	if (__tmp < 1.0)
    385e:	20 e0       	ldi	r18, 0x00	; 0
    3860:	30 e0       	ldi	r19, 0x00	; 0
    3862:	40 e8       	ldi	r20, 0x80	; 128
    3864:	5f e3       	ldi	r21, 0x3F	; 63
    3866:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    386a:	88 23       	and	r24, r24
    386c:	2c f4       	brge	.+10     	; 0x3878 <lcd_send_data+0x42c>
    386e:	81 e0       	ldi	r24, 0x01	; 1
    3870:	90 e0       	ldi	r25, 0x00	; 0
    3872:	9f ab       	std	Y+55, r25	; 0x37
    3874:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
    3876:	3f c0       	rjmp	.+126    	; 0x38f6 <lcd_send_data+0x4aa>
    3878:	68 ad       	ldd	r22, Y+56	; 0x38
    387a:	79 ad       	ldd	r23, Y+57	; 0x39
    387c:	8a ad       	ldd	r24, Y+58	; 0x3a
    387e:	9b ad       	ldd	r25, Y+59	; 0x3b
	else if (__tmp > 65535)
    3880:	20 e0       	ldi	r18, 0x00	; 0
    3882:	3f ef       	ldi	r19, 0xFF	; 255
    3884:	4f e7       	ldi	r20, 0x7F	; 127
    3886:	57 e4       	ldi	r21, 0x47	; 71
    3888:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    388c:	18 16       	cp	r1, r24
    388e:	4c f5       	brge	.+82     	; 0x38e2 <lcd_send_data+0x496>
    3890:	6c ad       	ldd	r22, Y+60	; 0x3c
    3892:	7d ad       	ldd	r23, Y+61	; 0x3d
    3894:	8e ad       	ldd	r24, Y+62	; 0x3e
    3896:	9f ad       	ldd	r25, Y+63	; 0x3f
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3898:	20 e0       	ldi	r18, 0x00	; 0
    389a:	30 e0       	ldi	r19, 0x00	; 0
    389c:	40 e2       	ldi	r20, 0x20	; 32
    389e:	51 e4       	ldi	r21, 0x41	; 65
    38a0:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    38a4:	dc 01       	movw	r26, r24
    38a6:	cb 01       	movw	r24, r22
    38a8:	bc 01       	movw	r22, r24
    38aa:	cd 01       	movw	r24, r26
    38ac:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    38b0:	dc 01       	movw	r26, r24
    38b2:	cb 01       	movw	r24, r22
    38b4:	9f ab       	std	Y+55, r25	; 0x37
    38b6:	8e ab       	std	Y+54, r24	; 0x36
    38b8:	0f c0       	rjmp	.+30     	; 0x38d8 <lcd_send_data+0x48c>
    38ba:	89 e1       	ldi	r24, 0x19	; 25
    38bc:	90 e0       	ldi	r25, 0x00	; 0
    38be:	9d ab       	std	Y+53, r25	; 0x35
    38c0:	8c ab       	std	Y+52, r24	; 0x34
    38c2:	8c a9       	ldd	r24, Y+52	; 0x34
    38c4:	9d a9       	ldd	r25, Y+53	; 0x35
    38c6:	01 97       	sbiw	r24, 0x01	; 1
    38c8:	f1 f7       	brne	.-4      	; 0x38c6 <lcd_send_data+0x47a>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    38ca:	9d ab       	std	Y+53, r25	; 0x35
    38cc:	8c ab       	std	Y+52, r24	; 0x34
    38ce:	8e a9       	ldd	r24, Y+54	; 0x36
    38d0:	9f a9       	ldd	r25, Y+55	; 0x37
    38d2:	01 97       	sbiw	r24, 0x01	; 1
    38d4:	9f ab       	std	Y+55, r25	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38d6:	8e ab       	std	Y+54, r24	; 0x36
    38d8:	8e a9       	ldd	r24, Y+54	; 0x36
    38da:	9f a9       	ldd	r25, Y+55	; 0x37
    38dc:	00 97       	sbiw	r24, 0x00	; 0
    38de:	69 f7       	brne	.-38     	; 0x38ba <lcd_send_data+0x46e>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38e0:	2d c0       	rjmp	.+90     	; 0x393c <lcd_send_data+0x4f0>
    38e2:	68 ad       	ldd	r22, Y+56	; 0x38
    38e4:	79 ad       	ldd	r23, Y+57	; 0x39
    38e6:	8a ad       	ldd	r24, Y+58	; 0x3a
    38e8:	9b ad       	ldd	r25, Y+59	; 0x3b
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38ea:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    38ee:	dc 01       	movw	r26, r24
    38f0:	cb 01       	movw	r24, r22
    38f2:	9f ab       	std	Y+55, r25	; 0x37
    38f4:	8e ab       	std	Y+54, r24	; 0x36
    38f6:	8e a9       	ldd	r24, Y+54	; 0x36
    38f8:	9f a9       	ldd	r25, Y+55	; 0x37
    38fa:	9b ab       	std	Y+51, r25	; 0x33
    38fc:	8a ab       	std	Y+50, r24	; 0x32
    38fe:	8a a9       	ldd	r24, Y+50	; 0x32
    3900:	9b a9       	ldd	r25, Y+51	; 0x33
    3902:	01 97       	sbiw	r24, 0x01	; 1
    3904:	f1 f7       	brne	.-4      	; 0x3902 <lcd_send_data+0x4b6>
    3906:	9b ab       	std	Y+51, r25	; 0x33
    3908:	8a ab       	std	Y+50, r24	; 0x32
    390a:	18 c0       	rjmp	.+48     	; 0x393c <lcd_send_data+0x4f0>
    390c:	fe 01       	movw	r30, r28
    390e:	ef 5b       	subi	r30, 0xBF	; 191
    3910:	ff 4f       	sbci	r31, 0xFF	; 255
    3912:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3914:	71 81       	ldd	r23, Z+1	; 0x01
    3916:	82 81       	ldd	r24, Z+2	; 0x02
    3918:	93 81       	ldd	r25, Z+3	; 0x03
    391a:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    391e:	dc 01       	movw	r26, r24
    3920:	cb 01       	movw	r24, r22
    3922:	fe 01       	movw	r30, r28
    3924:	e0 5c       	subi	r30, 0xC0	; 192
    3926:	ff 4f       	sbci	r31, 0xFF	; 255
    3928:	80 83       	st	Z, r24
    392a:	fe 01       	movw	r30, r28
    392c:	e0 5c       	subi	r30, 0xC0	; 192
    392e:	ff 4f       	sbci	r31, 0xFF	; 255
    3930:	80 81       	ld	r24, Z
    3932:	89 ab       	std	Y+49, r24	; 0x31
    3934:	89 a9       	ldd	r24, Y+49	; 0x31
    3936:	8a 95       	dec	r24
    3938:	f1 f7       	brne	.-4      	; 0x3936 <lcd_send_data+0x4ea>
    393a:	89 ab       	std	Y+49, r24	; 0x31
    393c:	fe 01       	movw	r30, r28
    393e:	ef 59       	subi	r30, 0x9F	; 159
    3940:	ff 4f       	sbci	r31, 0xFF	; 255
    3942:	01 90       	ld	r0, Z+
		_delay_us(100);
		DIO_write_port(lcd->dataPort, 0xF0, (data & 0xF) << 4);
    3944:	f0 81       	ld	r31, Z
    3946:	e0 2d       	mov	r30, r0
    3948:	21 81       	ldd	r18, Z+1	; 0x01
    394a:	fe 01       	movw	r30, r28
    394c:	ed 59       	subi	r30, 0x9D	; 157
    394e:	ff 4f       	sbci	r31, 0xFF	; 255
    3950:	80 81       	ld	r24, Z
    3952:	88 2f       	mov	r24, r24
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	82 95       	swap	r24
    3958:	92 95       	swap	r25
    395a:	90 7f       	andi	r25, 0xF0	; 240
    395c:	98 27       	eor	r25, r24
    395e:	80 7f       	andi	r24, 0xF0	; 240
    3960:	98 27       	eor	r25, r24
    3962:	98 2f       	mov	r25, r24
    3964:	82 2f       	mov	r24, r18
    3966:	60 ef       	ldi	r22, 0xF0	; 240
    3968:	49 2f       	mov	r20, r25
    396a:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <DIO_write_port>
    396e:	17 c0       	rjmp	.+46     	; 0x399e <lcd_send_data+0x552>
    3970:	fe 01       	movw	r30, r28
    3972:	ef 59       	subi	r30, 0x9F	; 159
    3974:	ff 4f       	sbci	r31, 0xFF	; 255
    3976:	01 90       	ld	r0, Z+
	} else if (lcd->nbit == n8BIT_MODE) {
    3978:	f0 81       	ld	r31, Z
    397a:	e0 2d       	mov	r30, r0
    397c:	80 81       	ld	r24, Z
    397e:	82 30       	cpi	r24, 0x02	; 2
    3980:	71 f4       	brne	.+28     	; 0x399e <lcd_send_data+0x552>
    3982:	fe 01       	movw	r30, r28
    3984:	ef 59       	subi	r30, 0x9F	; 159
    3986:	ff 4f       	sbci	r31, 0xFF	; 255
    3988:	01 90       	ld	r0, Z+
		DIO_write_port(lcd->dataPort, 0xFF, data);
    398a:	f0 81       	ld	r31, Z
    398c:	e0 2d       	mov	r30, r0
    398e:	81 81       	ldd	r24, Z+1	; 0x01
    3990:	fe 01       	movw	r30, r28
    3992:	ed 59       	subi	r30, 0x9D	; 157
    3994:	ff 4f       	sbci	r31, 0xFF	; 255
    3996:	6f ef       	ldi	r22, 0xFF	; 255
    3998:	40 81       	ld	r20, Z
    399a:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <DIO_write_port>
    399e:	fe 01       	movw	r30, r28
    39a0:	ef 59       	subi	r30, 0x9F	; 159
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	01 90       	ld	r0, Z+
	} else {
		// todo error
	}
	DIO_set_pin(lcd->controlPort, (lcd->EN));
    39a6:	f0 81       	ld	r31, Z
    39a8:	e0 2d       	mov	r30, r0
    39aa:	82 81       	ldd	r24, Z+2	; 0x02
    39ac:	fe 01       	movw	r30, r28
    39ae:	ef 59       	subi	r30, 0x9F	; 159
    39b0:	ff 4f       	sbci	r31, 0xFF	; 255
    39b2:	01 90       	ld	r0, Z+
    39b4:	f0 81       	ld	r31, Z
    39b6:	e0 2d       	mov	r30, r0
    39b8:	95 81       	ldd	r25, Z+5	; 0x05
    39ba:	69 2f       	mov	r22, r25
    39bc:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <DIO_set_pin>
    39c0:	80 e0       	ldi	r24, 0x00	; 0
    39c2:	90 e0       	ldi	r25, 0x00	; 0
    39c4:	a0 e8       	ldi	r26, 0x80	; 128
    39c6:	bf e3       	ldi	r27, 0x3F	; 63
    39c8:	8d a7       	std	Y+45, r24	; 0x2d
    39ca:	9e a7       	std	Y+46, r25	; 0x2e
    39cc:	af a7       	std	Y+47, r26	; 0x2f
    39ce:	b8 ab       	std	Y+48, r27	; 0x30
    39d0:	6d a5       	ldd	r22, Y+45	; 0x2d
    39d2:	7e a5       	ldd	r23, Y+46	; 0x2e
    39d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    39d6:	98 a9       	ldd	r25, Y+48	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    39d8:	2b ea       	ldi	r18, 0xAB	; 171
    39da:	3a ea       	ldi	r19, 0xAA	; 170
    39dc:	4a ea       	ldi	r20, 0xAA	; 170
    39de:	5e e3       	ldi	r21, 0x3E	; 62
    39e0:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    39e4:	dc 01       	movw	r26, r24
    39e6:	cb 01       	movw	r24, r22
    39e8:	89 a7       	std	Y+41, r24	; 0x29
    39ea:	9a a7       	std	Y+42, r25	; 0x2a
    39ec:	ab a7       	std	Y+43, r26	; 0x2b
    39ee:	bc a7       	std	Y+44, r27	; 0x2c
    39f0:	69 a5       	ldd	r22, Y+41	; 0x29
    39f2:	7a a5       	ldd	r23, Y+42	; 0x2a
    39f4:	8b a5       	ldd	r24, Y+43	; 0x2b
    39f6:	9c a5       	ldd	r25, Y+44	; 0x2c
	if (__tmp < 1.0)
    39f8:	20 e0       	ldi	r18, 0x00	; 0
    39fa:	30 e0       	ldi	r19, 0x00	; 0
    39fc:	40 e8       	ldi	r20, 0x80	; 128
    39fe:	5f e3       	ldi	r21, 0x3F	; 63
    3a00:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3a04:	88 23       	and	r24, r24
    3a06:	1c f4       	brge	.+6      	; 0x3a0e <lcd_send_data+0x5c2>
    3a08:	81 e0       	ldi	r24, 0x01	; 1
    3a0a:	88 a7       	std	Y+40, r24	; 0x28
    3a0c:	91 c0       	rjmp	.+290    	; 0x3b30 <lcd_send_data+0x6e4>
    3a0e:	69 a5       	ldd	r22, Y+41	; 0x29
		__ticks = 1;
    3a10:	7a a5       	ldd	r23, Y+42	; 0x2a
    3a12:	8b a5       	ldd	r24, Y+43	; 0x2b
    3a14:	9c a5       	ldd	r25, Y+44	; 0x2c
	else if (__tmp > 255)
    3a16:	20 e0       	ldi	r18, 0x00	; 0
    3a18:	30 e0       	ldi	r19, 0x00	; 0
    3a1a:	4f e7       	ldi	r20, 0x7F	; 127
    3a1c:	53 e4       	ldi	r21, 0x43	; 67
    3a1e:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    3a22:	18 16       	cp	r1, r24
    3a24:	0c f0       	brlt	.+2      	; 0x3a28 <lcd_send_data+0x5dc>
    3a26:	7b c0       	rjmp	.+246    	; 0x3b1e <lcd_send_data+0x6d2>
    3a28:	6d a5       	ldd	r22, Y+45	; 0x2d
    3a2a:	7e a5       	ldd	r23, Y+46	; 0x2e
    3a2c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a2e:	98 a9       	ldd	r25, Y+48	; 0x30
	{
		_delay_ms(__us / 1000.0);
    3a30:	20 e0       	ldi	r18, 0x00	; 0
    3a32:	30 e0       	ldi	r19, 0x00	; 0
    3a34:	4a e7       	ldi	r20, 0x7A	; 122
    3a36:	54 e4       	ldi	r21, 0x44	; 68
    3a38:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    3a3c:	dc 01       	movw	r26, r24
    3a3e:	cb 01       	movw	r24, r22
    3a40:	8c a3       	std	Y+36, r24	; 0x24
    3a42:	9d a3       	std	Y+37, r25	; 0x25
    3a44:	ae a3       	std	Y+38, r26	; 0x26
    3a46:	bf a3       	std	Y+39, r27	; 0x27
    3a48:	6c a1       	ldd	r22, Y+36	; 0x24
    3a4a:	7d a1       	ldd	r23, Y+37	; 0x25
    3a4c:	8e a1       	ldd	r24, Y+38	; 0x26
    3a4e:	9f a1       	ldd	r25, Y+39	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a50:	20 e0       	ldi	r18, 0x00	; 0
    3a52:	30 e0       	ldi	r19, 0x00	; 0
    3a54:	4a e7       	ldi	r20, 0x7A	; 122
    3a56:	53 e4       	ldi	r21, 0x43	; 67
    3a58:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3a5c:	dc 01       	movw	r26, r24
    3a5e:	cb 01       	movw	r24, r22
    3a60:	88 a3       	std	Y+32, r24	; 0x20
    3a62:	99 a3       	std	Y+33, r25	; 0x21
    3a64:	aa a3       	std	Y+34, r26	; 0x22
    3a66:	bb a3       	std	Y+35, r27	; 0x23
    3a68:	68 a1       	ldd	r22, Y+32	; 0x20
    3a6a:	79 a1       	ldd	r23, Y+33	; 0x21
    3a6c:	8a a1       	ldd	r24, Y+34	; 0x22
    3a6e:	9b a1       	ldd	r25, Y+35	; 0x23
	if (__tmp < 1.0)
    3a70:	20 e0       	ldi	r18, 0x00	; 0
    3a72:	30 e0       	ldi	r19, 0x00	; 0
    3a74:	40 e8       	ldi	r20, 0x80	; 128
    3a76:	5f e3       	ldi	r21, 0x3F	; 63
    3a78:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3a7c:	88 23       	and	r24, r24
    3a7e:	2c f4       	brge	.+10     	; 0x3a8a <lcd_send_data+0x63e>
    3a80:	81 e0       	ldi	r24, 0x01	; 1
    3a82:	90 e0       	ldi	r25, 0x00	; 0
    3a84:	9f 8f       	std	Y+31, r25	; 0x1f
    3a86:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
    3a88:	3f c0       	rjmp	.+126    	; 0x3b08 <lcd_send_data+0x6bc>
    3a8a:	68 a1       	ldd	r22, Y+32	; 0x20
    3a8c:	79 a1       	ldd	r23, Y+33	; 0x21
    3a8e:	8a a1       	ldd	r24, Y+34	; 0x22
    3a90:	9b a1       	ldd	r25, Y+35	; 0x23
	else if (__tmp > 65535)
    3a92:	20 e0       	ldi	r18, 0x00	; 0
    3a94:	3f ef       	ldi	r19, 0xFF	; 255
    3a96:	4f e7       	ldi	r20, 0x7F	; 127
    3a98:	57 e4       	ldi	r21, 0x47	; 71
    3a9a:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    3a9e:	18 16       	cp	r1, r24
    3aa0:	4c f5       	brge	.+82     	; 0x3af4 <lcd_send_data+0x6a8>
    3aa2:	6c a1       	ldd	r22, Y+36	; 0x24
    3aa4:	7d a1       	ldd	r23, Y+37	; 0x25
    3aa6:	8e a1       	ldd	r24, Y+38	; 0x26
    3aa8:	9f a1       	ldd	r25, Y+39	; 0x27
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3aaa:	20 e0       	ldi	r18, 0x00	; 0
    3aac:	30 e0       	ldi	r19, 0x00	; 0
    3aae:	40 e2       	ldi	r20, 0x20	; 32
    3ab0:	51 e4       	ldi	r21, 0x41	; 65
    3ab2:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3ab6:	dc 01       	movw	r26, r24
    3ab8:	cb 01       	movw	r24, r22
    3aba:	bc 01       	movw	r22, r24
    3abc:	cd 01       	movw	r24, r26
    3abe:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3ac2:	dc 01       	movw	r26, r24
    3ac4:	cb 01       	movw	r24, r22
    3ac6:	9f 8f       	std	Y+31, r25	; 0x1f
    3ac8:	8e 8f       	std	Y+30, r24	; 0x1e
    3aca:	0f c0       	rjmp	.+30     	; 0x3aea <lcd_send_data+0x69e>
    3acc:	89 e1       	ldi	r24, 0x19	; 25
    3ace:	90 e0       	ldi	r25, 0x00	; 0
    3ad0:	9d 8f       	std	Y+29, r25	; 0x1d
    3ad2:	8c 8f       	std	Y+28, r24	; 0x1c
    3ad4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3ad6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3ad8:	01 97       	sbiw	r24, 0x01	; 1
    3ada:	f1 f7       	brne	.-4      	; 0x3ad8 <lcd_send_data+0x68c>
    3adc:	9d 8f       	std	Y+29, r25	; 0x1d
    3ade:	8c 8f       	std	Y+28, r24	; 0x1c
    3ae0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ae2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ae4:	01 97       	sbiw	r24, 0x01	; 1
    3ae6:	9f 8f       	std	Y+31, r25	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ae8:	8e 8f       	std	Y+30, r24	; 0x1e
    3aea:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3aec:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3aee:	00 97       	sbiw	r24, 0x00	; 0
    3af0:	69 f7       	brne	.-38     	; 0x3acc <lcd_send_data+0x680>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3af2:	24 c0       	rjmp	.+72     	; 0x3b3c <lcd_send_data+0x6f0>
    3af4:	68 a1       	ldd	r22, Y+32	; 0x20
    3af6:	79 a1       	ldd	r23, Y+33	; 0x21
    3af8:	8a a1       	ldd	r24, Y+34	; 0x22
    3afa:	9b a1       	ldd	r25, Y+35	; 0x23
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3afc:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3b00:	dc 01       	movw	r26, r24
    3b02:	cb 01       	movw	r24, r22
    3b04:	9f 8f       	std	Y+31, r25	; 0x1f
    3b06:	8e 8f       	std	Y+30, r24	; 0x1e
    3b08:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3b0a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3b0c:	9b 8f       	std	Y+27, r25	; 0x1b
    3b0e:	8a 8f       	std	Y+26, r24	; 0x1a
    3b10:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3b12:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3b14:	01 97       	sbiw	r24, 0x01	; 1
    3b16:	f1 f7       	brne	.-4      	; 0x3b14 <lcd_send_data+0x6c8>
    3b18:	9b 8f       	std	Y+27, r25	; 0x1b
    3b1a:	8a 8f       	std	Y+26, r24	; 0x1a
    3b1c:	0f c0       	rjmp	.+30     	; 0x3b3c <lcd_send_data+0x6f0>
    3b1e:	69 a5       	ldd	r22, Y+41	; 0x29
    3b20:	7a a5       	ldd	r23, Y+42	; 0x2a
    3b22:	8b a5       	ldd	r24, Y+43	; 0x2b
    3b24:	9c a5       	ldd	r25, Y+44	; 0x2c
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3b26:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3b2a:	dc 01       	movw	r26, r24
    3b2c:	cb 01       	movw	r24, r22
    3b2e:	88 a7       	std	Y+40, r24	; 0x28
    3b30:	88 a5       	ldd	r24, Y+40	; 0x28
    3b32:	89 8f       	std	Y+25, r24	; 0x19
    3b34:	89 8d       	ldd	r24, Y+25	; 0x19
    3b36:	8a 95       	dec	r24
    3b38:	f1 f7       	brne	.-4      	; 0x3b36 <lcd_send_data+0x6ea>
    3b3a:	89 8f       	std	Y+25, r24	; 0x19
    3b3c:	fe 01       	movw	r30, r28
    3b3e:	ef 59       	subi	r30, 0x9F	; 159
    3b40:	ff 4f       	sbci	r31, 0xFF	; 255
    3b42:	01 90       	ld	r0, Z+
	_delay_us(1);
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    3b44:	f0 81       	ld	r31, Z
    3b46:	e0 2d       	mov	r30, r0
    3b48:	82 81       	ldd	r24, Z+2	; 0x02
    3b4a:	fe 01       	movw	r30, r28
    3b4c:	ef 59       	subi	r30, 0x9F	; 159
    3b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b50:	01 90       	ld	r0, Z+
    3b52:	f0 81       	ld	r31, Z
    3b54:	e0 2d       	mov	r30, r0
    3b56:	95 81       	ldd	r25, Z+5	; 0x05
    3b58:	69 2f       	mov	r22, r25
    3b5a:	0e 94 91 13 	call	0x2722	; 0x2722 <DIO_clear_pin>
    3b5e:	80 e0       	ldi	r24, 0x00	; 0
    3b60:	90 e0       	ldi	r25, 0x00	; 0
    3b62:	a8 ec       	ldi	r26, 0xC8	; 200
    3b64:	b2 e4       	ldi	r27, 0x42	; 66
    3b66:	8d 8b       	std	Y+21, r24	; 0x15
    3b68:	9e 8b       	std	Y+22, r25	; 0x16
    3b6a:	af 8b       	std	Y+23, r26	; 0x17
    3b6c:	b8 8f       	std	Y+24, r27	; 0x18
    3b6e:	6d 89       	ldd	r22, Y+21	; 0x15
    3b70:	7e 89       	ldd	r23, Y+22	; 0x16
    3b72:	8f 89       	ldd	r24, Y+23	; 0x17
    3b74:	98 8d       	ldd	r25, Y+24	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3b76:	2b ea       	ldi	r18, 0xAB	; 171
    3b78:	3a ea       	ldi	r19, 0xAA	; 170
    3b7a:	4a ea       	ldi	r20, 0xAA	; 170
    3b7c:	5e e3       	ldi	r21, 0x3E	; 62
    3b7e:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3b82:	dc 01       	movw	r26, r24
    3b84:	cb 01       	movw	r24, r22
    3b86:	89 8b       	std	Y+17, r24	; 0x11
    3b88:	9a 8b       	std	Y+18, r25	; 0x12
    3b8a:	ab 8b       	std	Y+19, r26	; 0x13
    3b8c:	bc 8b       	std	Y+20, r27	; 0x14
    3b8e:	69 89       	ldd	r22, Y+17	; 0x11
    3b90:	7a 89       	ldd	r23, Y+18	; 0x12
    3b92:	8b 89       	ldd	r24, Y+19	; 0x13
    3b94:	9c 89       	ldd	r25, Y+20	; 0x14
	if (__tmp < 1.0)
    3b96:	20 e0       	ldi	r18, 0x00	; 0
    3b98:	30 e0       	ldi	r19, 0x00	; 0
    3b9a:	40 e8       	ldi	r20, 0x80	; 128
    3b9c:	5f e3       	ldi	r21, 0x3F	; 63
    3b9e:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3ba2:	88 23       	and	r24, r24
    3ba4:	1c f4       	brge	.+6      	; 0x3bac <lcd_send_data+0x760>
    3ba6:	81 e0       	ldi	r24, 0x01	; 1
    3ba8:	88 8b       	std	Y+16, r24	; 0x10
    3baa:	91 c0       	rjmp	.+290    	; 0x3cce <lcd_send_data+0x882>
    3bac:	69 89       	ldd	r22, Y+17	; 0x11
		__ticks = 1;
    3bae:	7a 89       	ldd	r23, Y+18	; 0x12
    3bb0:	8b 89       	ldd	r24, Y+19	; 0x13
    3bb2:	9c 89       	ldd	r25, Y+20	; 0x14
	else if (__tmp > 255)
    3bb4:	20 e0       	ldi	r18, 0x00	; 0
    3bb6:	30 e0       	ldi	r19, 0x00	; 0
    3bb8:	4f e7       	ldi	r20, 0x7F	; 127
    3bba:	53 e4       	ldi	r21, 0x43	; 67
    3bbc:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    3bc0:	18 16       	cp	r1, r24
    3bc2:	0c f0       	brlt	.+2      	; 0x3bc6 <lcd_send_data+0x77a>
    3bc4:	7b c0       	rjmp	.+246    	; 0x3cbc <lcd_send_data+0x870>
    3bc6:	6d 89       	ldd	r22, Y+21	; 0x15
    3bc8:	7e 89       	ldd	r23, Y+22	; 0x16
    3bca:	8f 89       	ldd	r24, Y+23	; 0x17
    3bcc:	98 8d       	ldd	r25, Y+24	; 0x18
	{
		_delay_ms(__us / 1000.0);
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	4a e7       	ldi	r20, 0x7A	; 122
    3bd4:	54 e4       	ldi	r21, 0x44	; 68
    3bd6:	0e 94 30 0c 	call	0x1860	; 0x1860 <__divsf3>
    3bda:	dc 01       	movw	r26, r24
    3bdc:	cb 01       	movw	r24, r22
    3bde:	8c 87       	std	Y+12, r24	; 0x0c
    3be0:	9d 87       	std	Y+13, r25	; 0x0d
    3be2:	ae 87       	std	Y+14, r26	; 0x0e
    3be4:	bf 87       	std	Y+15, r27	; 0x0f
    3be6:	6c 85       	ldd	r22, Y+12	; 0x0c
    3be8:	7d 85       	ldd	r23, Y+13	; 0x0d
    3bea:	8e 85       	ldd	r24, Y+14	; 0x0e
    3bec:	9f 85       	ldd	r25, Y+15	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bee:	20 e0       	ldi	r18, 0x00	; 0
    3bf0:	30 e0       	ldi	r19, 0x00	; 0
    3bf2:	4a e7       	ldi	r20, 0x7A	; 122
    3bf4:	53 e4       	ldi	r21, 0x43	; 67
    3bf6:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3bfa:	dc 01       	movw	r26, r24
    3bfc:	cb 01       	movw	r24, r22
    3bfe:	88 87       	std	Y+8, r24	; 0x08
    3c00:	99 87       	std	Y+9, r25	; 0x09
    3c02:	aa 87       	std	Y+10, r26	; 0x0a
    3c04:	bb 87       	std	Y+11, r27	; 0x0b
    3c06:	68 85       	ldd	r22, Y+8	; 0x08
    3c08:	79 85       	ldd	r23, Y+9	; 0x09
    3c0a:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c0c:	9b 85       	ldd	r25, Y+11	; 0x0b
	if (__tmp < 1.0)
    3c0e:	20 e0       	ldi	r18, 0x00	; 0
    3c10:	30 e0       	ldi	r19, 0x00	; 0
    3c12:	40 e8       	ldi	r20, 0x80	; 128
    3c14:	5f e3       	ldi	r21, 0x3F	; 63
    3c16:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__ltsf2>
    3c1a:	88 23       	and	r24, r24
    3c1c:	2c f4       	brge	.+10     	; 0x3c28 <lcd_send_data+0x7dc>
    3c1e:	81 e0       	ldi	r24, 0x01	; 1
    3c20:	90 e0       	ldi	r25, 0x00	; 0
    3c22:	9f 83       	std	Y+7, r25	; 0x07
    3c24:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
    3c26:	3f c0       	rjmp	.+126    	; 0x3ca6 <lcd_send_data+0x85a>
    3c28:	68 85       	ldd	r22, Y+8	; 0x08
    3c2a:	79 85       	ldd	r23, Y+9	; 0x09
    3c2c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c2e:	9b 85       	ldd	r25, Y+11	; 0x0b
	else if (__tmp > 65535)
    3c30:	20 e0       	ldi	r18, 0x00	; 0
    3c32:	3f ef       	ldi	r19, 0xFF	; 255
    3c34:	4f e7       	ldi	r20, 0x7F	; 127
    3c36:	57 e4       	ldi	r21, 0x47	; 71
    3c38:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__gtsf2>
    3c3c:	18 16       	cp	r1, r24
    3c3e:	4c f5       	brge	.+82     	; 0x3c92 <lcd_send_data+0x846>
    3c40:	6c 85       	ldd	r22, Y+12	; 0x0c
    3c42:	7d 85       	ldd	r23, Y+13	; 0x0d
    3c44:	8e 85       	ldd	r24, Y+14	; 0x0e
    3c46:	9f 85       	ldd	r25, Y+15	; 0x0f
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c48:	20 e0       	ldi	r18, 0x00	; 0
    3c4a:	30 e0       	ldi	r19, 0x00	; 0
    3c4c:	40 e2       	ldi	r20, 0x20	; 32
    3c4e:	51 e4       	ldi	r21, 0x41	; 65
    3c50:	0e 94 39 0b 	call	0x1672	; 0x1672 <__mulsf3>
    3c54:	dc 01       	movw	r26, r24
    3c56:	cb 01       	movw	r24, r22
    3c58:	bc 01       	movw	r22, r24
    3c5a:	cd 01       	movw	r24, r26
    3c5c:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3c60:	dc 01       	movw	r26, r24
    3c62:	cb 01       	movw	r24, r22
    3c64:	9f 83       	std	Y+7, r25	; 0x07
    3c66:	8e 83       	std	Y+6, r24	; 0x06
    3c68:	0f c0       	rjmp	.+30     	; 0x3c88 <lcd_send_data+0x83c>
    3c6a:	89 e1       	ldi	r24, 0x19	; 25
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	9d 83       	std	Y+5, r25	; 0x05
    3c70:	8c 83       	std	Y+4, r24	; 0x04
    3c72:	8c 81       	ldd	r24, Y+4	; 0x04
    3c74:	9d 81       	ldd	r25, Y+5	; 0x05
    3c76:	01 97       	sbiw	r24, 0x01	; 1
    3c78:	f1 f7       	brne	.-4      	; 0x3c76 <lcd_send_data+0x82a>
    3c7a:	9d 83       	std	Y+5, r25	; 0x05
    3c7c:	8c 83       	std	Y+4, r24	; 0x04
    3c7e:	8e 81       	ldd	r24, Y+6	; 0x06
    3c80:	9f 81       	ldd	r25, Y+7	; 0x07
    3c82:	01 97       	sbiw	r24, 0x01	; 1
    3c84:	9f 83       	std	Y+7, r25	; 0x07
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c86:	8e 83       	std	Y+6, r24	; 0x06
    3c88:	8e 81       	ldd	r24, Y+6	; 0x06
    3c8a:	9f 81       	ldd	r25, Y+7	; 0x07
    3c8c:	00 97       	sbiw	r24, 0x00	; 0
    3c8e:	69 f7       	brne	.-38     	; 0x3c6a <lcd_send_data+0x81e>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c90:	24 c0       	rjmp	.+72     	; 0x3cda <lcd_send_data+0x88e>
    3c92:	68 85       	ldd	r22, Y+8	; 0x08
    3c94:	79 85       	ldd	r23, Y+9	; 0x09
    3c96:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c98:	9b 85       	ldd	r25, Y+11	; 0x0b
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c9a:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	9f 83       	std	Y+7, r25	; 0x07
    3ca4:	8e 83       	std	Y+6, r24	; 0x06
    3ca6:	8e 81       	ldd	r24, Y+6	; 0x06
    3ca8:	9f 81       	ldd	r25, Y+7	; 0x07
    3caa:	9b 83       	std	Y+3, r25	; 0x03
    3cac:	8a 83       	std	Y+2, r24	; 0x02
    3cae:	8a 81       	ldd	r24, Y+2	; 0x02
    3cb0:	9b 81       	ldd	r25, Y+3	; 0x03
    3cb2:	01 97       	sbiw	r24, 0x01	; 1
    3cb4:	f1 f7       	brne	.-4      	; 0x3cb2 <lcd_send_data+0x866>
    3cb6:	9b 83       	std	Y+3, r25	; 0x03
    3cb8:	8a 83       	std	Y+2, r24	; 0x02
    3cba:	0f c0       	rjmp	.+30     	; 0x3cda <lcd_send_data+0x88e>
    3cbc:	69 89       	ldd	r22, Y+17	; 0x11
    3cbe:	7a 89       	ldd	r23, Y+18	; 0x12
    3cc0:	8b 89       	ldd	r24, Y+19	; 0x13
    3cc2:	9c 89       	ldd	r25, Y+20	; 0x14
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3cc4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    3cc8:	dc 01       	movw	r26, r24
    3cca:	cb 01       	movw	r24, r22
    3ccc:	88 8b       	std	Y+16, r24	; 0x10
    3cce:	88 89       	ldd	r24, Y+16	; 0x10
    3cd0:	89 83       	std	Y+1, r24	; 0x01
    3cd2:	89 81       	ldd	r24, Y+1	; 0x01
    3cd4:	8a 95       	dec	r24
    3cd6:	f1 f7       	brne	.-4      	; 0x3cd4 <lcd_send_data+0x888>
    3cd8:	89 83       	std	Y+1, r24	; 0x01
    3cda:	cd 59       	subi	r28, 0x9D	; 157
    3cdc:	df 4f       	sbci	r29, 0xFF	; 255
    3cde:	0f b6       	in	r0, 0x3f	; 63
    3ce0:	f8 94       	cli
	_delay_us(100);
}
    3ce2:	de bf       	out	0x3e, r29	; 62
    3ce4:	0f be       	out	0x3f, r0	; 63
    3ce6:	cd bf       	out	0x3d, r28	; 61
    3ce8:	cf 91       	pop	r28
    3cea:	df 91       	pop	r29
    3cec:	1f 91       	pop	r17
    3cee:	0f 91       	pop	r16
    3cf0:	08 95       	ret

00003cf2 <lcd_gotoxy>:

static const u8 firstCharAdr[] = { 0x80, 0xC0 };
void lcd_gotoxy(gcfg_lcd_t * lcd, u8 x, u8 y) {
    3cf2:	df 93       	push	r29
    3cf4:	cf 93       	push	r28
    3cf6:	00 d0       	rcall	.+0      	; 0x3cf8 <lcd_gotoxy+0x6>
    3cf8:	00 d0       	rcall	.+0      	; 0x3cfa <lcd_gotoxy+0x8>
    3cfa:	cd b7       	in	r28, 0x3d	; 61
    3cfc:	de b7       	in	r29, 0x3e	; 62
    3cfe:	9a 83       	std	Y+2, r25	; 0x02
    3d00:	89 83       	std	Y+1, r24	; 0x01
    3d02:	6b 83       	std	Y+3, r22	; 0x03
    3d04:	4c 83       	std	Y+4, r20	; 0x04
//	if (x > 0&&) todo
	//00-27h , 40h-67h

	lcd_send_command(lcd, firstCharAdr[y - 1] + x - 1);
    3d06:	8c 81       	ldd	r24, Y+4	; 0x04
    3d08:	88 2f       	mov	r24, r24
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	01 97       	sbiw	r24, 0x01	; 1
    3d0e:	fc 01       	movw	r30, r24
    3d10:	e8 59       	subi	r30, 0x98	; 152
    3d12:	fe 4f       	sbci	r31, 0xFE	; 254
    3d14:	90 81       	ld	r25, Z
    3d16:	8b 81       	ldd	r24, Y+3	; 0x03
    3d18:	89 0f       	add	r24, r25
    3d1a:	28 2f       	mov	r18, r24
    3d1c:	21 50       	subi	r18, 0x01	; 1
    3d1e:	89 81       	ldd	r24, Y+1	; 0x01
    3d20:	9a 81       	ldd	r25, Y+2	; 0x02
    3d22:	62 2f       	mov	r22, r18
    3d24:	0e 94 d8 15 	call	0x2bb0	; 0x2bb0 <lcd_send_command>
}
    3d28:	0f 90       	pop	r0
    3d2a:	0f 90       	pop	r0
    3d2c:	0f 90       	pop	r0
    3d2e:	0f 90       	pop	r0
    3d30:	cf 91       	pop	r28
    3d32:	df 91       	pop	r29
    3d34:	08 95       	ret

00003d36 <rx>:
	DIO_set_pin(BASE_A, 0);
//	lcd_send_data(&lcd, 'x');
//	sei();
}
u8 flag;
void rx() {
    3d36:	df 93       	push	r29
    3d38:	cf 93       	push	r28
    3d3a:	0f 92       	push	r0
    3d3c:	cd b7       	in	r28, 0x3d	; 61
    3d3e:	de b7       	in	r29, 0x3e	; 62
	flag = 1;
    3d40:	81 e0       	ldi	r24, 0x01	; 1
    3d42:	80 93 7e 01 	sts	0x017E, r24
	DIO_write_pin(BASE_A, 1, !DIO_read_pin(BASE_A, 1));
    3d46:	89 e3       	ldi	r24, 0x39	; 57
    3d48:	61 e0       	ldi	r22, 0x01	; 1
    3d4a:	0e 94 b7 13 	call	0x276e	; 0x276e <DIO_read_pin>
    3d4e:	19 82       	std	Y+1, r1	; 0x01
    3d50:	88 23       	and	r24, r24
    3d52:	11 f4       	brne	.+4      	; 0x3d58 <rx+0x22>
    3d54:	81 e0       	ldi	r24, 0x01	; 1
    3d56:	89 83       	std	Y+1, r24	; 0x01
    3d58:	89 e3       	ldi	r24, 0x39	; 57
    3d5a:	61 e0       	ldi	r22, 0x01	; 1
    3d5c:	49 81       	ldd	r20, Y+1	; 0x01
    3d5e:	0e 94 29 13 	call	0x2652	; 0x2652 <DIO_write_pin>
//	((void (*)()) tx)(); WOW !!!
//	UART_sendByte(0, 3);
//	DIO_set_pin(BASE_A, 1);
//	sei();

}
    3d62:	0f 90       	pop	r0
    3d64:	cf 91       	pop	r28
    3d66:	df 91       	pop	r29
    3d68:	08 95       	ret

00003d6a <main>:
int main(void) {
    3d6a:	df 93       	push	r29
    3d6c:	cf 93       	push	r28
    3d6e:	cd b7       	in	r28, 0x3d	; 61
    3d70:	de b7       	in	r29, 0x3e	; 62
//	u8 arr[] = { 1, 2, 3, 4, 5, 6, 7 };
	UART_init(UART0, 9600);
    3d72:	80 e0       	ldi	r24, 0x00	; 0
    3d74:	60 e8       	ldi	r22, 0x80	; 128
    3d76:	75 e2       	ldi	r23, 0x25	; 37
    3d78:	0e 94 1b 11 	call	0x2236	; 0x2236 <UART_init>
	DIO_init_port_output(BASE_A, 0x3);
    3d7c:	89 e3       	ldi	r24, 0x39	; 57
    3d7e:	63 e0       	ldi	r22, 0x03	; 3
    3d80:	0e 94 e0 12 	call	0x25c0	; 0x25c0 <DIO_init_port_output>
	UART_addISR(0, USART_RXC, rx);
    3d84:	2b e9       	ldi	r18, 0x9B	; 155
    3d86:	3e e1       	ldi	r19, 0x1E	; 30
    3d88:	80 e0       	ldi	r24, 0x00	; 0
    3d8a:	60 e0       	ldi	r22, 0x00	; 0
    3d8c:	a9 01       	movw	r20, r18
    3d8e:	0e 94 d7 10 	call	0x21ae	; 0x21ae <UART_addISR>
//	gcfg_keypad_t keypad = { BASE_C, BASE_C };
//	keypad_init(&keypad);

#define debug
#ifdef debug
	lcd.RS = 7;
    3d92:	87 e0       	ldi	r24, 0x07	; 7
    3d94:	80 93 79 01 	sts	0x0179, r24
	lcd.RW = 6;
    3d98:	86 e0       	ldi	r24, 0x06	; 6
    3d9a:	80 93 7a 01 	sts	0x017A, r24
	lcd.EN = 5;
    3d9e:	85 e0       	ldi	r24, 0x05	; 5
    3da0:	80 93 7b 01 	sts	0x017B, r24
	lcd.controlPort = BASE_A;
    3da4:	89 e3       	ldi	r24, 0x39	; 57
    3da6:	80 93 78 01 	sts	0x0178, r24
	lcd.dataPort = BASE_B;
    3daa:	86 e3       	ldi	r24, 0x36	; 54
    3dac:	80 93 77 01 	sts	0x0177, r24
	lcd.nbit = n4BIT_MODE;
    3db0:	81 e0       	ldi	r24, 0x01	; 1
    3db2:	80 93 76 01 	sts	0x0176, r24
	lcd_init(&lcd);
    3db6:	86 e7       	ldi	r24, 0x76	; 118
    3db8:	91 e0       	ldi	r25, 0x01	; 1
    3dba:	0e 94 d5 13 	call	0x27aa	; 0x27aa <lcd_init>
	lcd_gotoxy(&lcd, 1, 1);
    3dbe:	86 e7       	ldi	r24, 0x76	; 118
    3dc0:	91 e0       	ldi	r25, 0x01	; 1
    3dc2:	61 e0       	ldi	r22, 0x01	; 1
    3dc4:	41 e0       	ldi	r20, 0x01	; 1
    3dc6:	95 df       	rcall	.-214    	; 0x3cf2 <lcd_gotoxy>
    3dc8:	80 91 7e 01 	lds	r24, 0x017E
//		if (flag)
//			UART_sendByte(0, 3), flag = 0;
//		if (RX_com_dispatch())
//			rx();
//		lcd_send_data(&lcd, '0' + RX_com_dispatch());
		lcd_send_data(&lcd, '0' + flag | (UCSRA & (1 << RXC)));
    3dcc:	80 5d       	subi	r24, 0xD0	; 208
    3dce:	98 2f       	mov	r25, r24
    3dd0:	eb e2       	ldi	r30, 0x2B	; 43
    3dd2:	f0 e0       	ldi	r31, 0x00	; 0
    3dd4:	80 81       	ld	r24, Z
    3dd6:	80 78       	andi	r24, 0x80	; 128
    3dd8:	89 2b       	or	r24, r25
    3dda:	28 2f       	mov	r18, r24
    3ddc:	86 e7       	ldi	r24, 0x76	; 118
    3dde:	91 e0       	ldi	r25, 0x01	; 1
    3de0:	62 2f       	mov	r22, r18
    3de2:	34 db       	rcall	.-2456   	; 0x344c <lcd_send_data>
    3de4:	f1 cf       	rjmp	.-30     	; 0x3dc8 <main+0x5e>

00003de6 <__udivmodsi4>:
    3de6:	a1 e2       	ldi	r26, 0x21	; 33
    3de8:	1a 2e       	mov	r1, r26
    3dea:	aa 1b       	sub	r26, r26
    3dec:	bb 1b       	sub	r27, r27
    3dee:	fd 01       	movw	r30, r26
    3df0:	0d c0       	rjmp	.+26     	; 0x3e0c <__udivmodsi4_ep>

00003df2 <__udivmodsi4_loop>:
    3df2:	aa 1f       	adc	r26, r26
    3df4:	bb 1f       	adc	r27, r27
    3df6:	ee 1f       	adc	r30, r30
    3df8:	ff 1f       	adc	r31, r31
    3dfa:	a2 17       	cp	r26, r18
    3dfc:	b3 07       	cpc	r27, r19
    3dfe:	e4 07       	cpc	r30, r20
    3e00:	f5 07       	cpc	r31, r21
    3e02:	20 f0       	brcs	.+8      	; 0x3e0c <__udivmodsi4_ep>
    3e04:	a2 1b       	sub	r26, r18
    3e06:	b3 0b       	sbc	r27, r19
    3e08:	e4 0b       	sbc	r30, r20
    3e0a:	f5 0b       	sbc	r31, r21

00003e0c <__udivmodsi4_ep>:
    3e0c:	66 1f       	adc	r22, r22
    3e0e:	77 1f       	adc	r23, r23
    3e10:	88 1f       	adc	r24, r24
    3e12:	99 1f       	adc	r25, r25
    3e14:	1a 94       	dec	r1
    3e16:	69 f7       	brne	.-38     	; 0x3df2 <__udivmodsi4_loop>
    3e18:	60 95       	com	r22
    3e1a:	70 95       	com	r23
    3e1c:	80 95       	com	r24
    3e1e:	90 95       	com	r25
    3e20:	9b 01       	movw	r18, r22
    3e22:	ac 01       	movw	r20, r24
    3e24:	bd 01       	movw	r22, r26
    3e26:	cf 01       	movw	r24, r30
    3e28:	08 95       	ret

00003e2a <__mulsi3>:
    3e2a:	62 9f       	mul	r22, r18
    3e2c:	d0 01       	movw	r26, r0
    3e2e:	73 9f       	mul	r23, r19
    3e30:	f0 01       	movw	r30, r0
    3e32:	82 9f       	mul	r24, r18
    3e34:	e0 0d       	add	r30, r0
    3e36:	f1 1d       	adc	r31, r1
    3e38:	64 9f       	mul	r22, r20
    3e3a:	e0 0d       	add	r30, r0
    3e3c:	f1 1d       	adc	r31, r1
    3e3e:	92 9f       	mul	r25, r18
    3e40:	f0 0d       	add	r31, r0
    3e42:	83 9f       	mul	r24, r19
    3e44:	f0 0d       	add	r31, r0
    3e46:	74 9f       	mul	r23, r20
    3e48:	f0 0d       	add	r31, r0
    3e4a:	65 9f       	mul	r22, r21
    3e4c:	f0 0d       	add	r31, r0
    3e4e:	99 27       	eor	r25, r25
    3e50:	72 9f       	mul	r23, r18
    3e52:	b0 0d       	add	r27, r0
    3e54:	e1 1d       	adc	r30, r1
    3e56:	f9 1f       	adc	r31, r25
    3e58:	63 9f       	mul	r22, r19
    3e5a:	b0 0d       	add	r27, r0
    3e5c:	e1 1d       	adc	r30, r1
    3e5e:	f9 1f       	adc	r31, r25
    3e60:	bd 01       	movw	r22, r26
    3e62:	cf 01       	movw	r24, r30
    3e64:	11 24       	eor	r1, r1
    3e66:	08 95       	ret

00003e68 <__prologue_saves__>:
    3e68:	2f 92       	push	r2
    3e6a:	3f 92       	push	r3
    3e6c:	4f 92       	push	r4
    3e6e:	5f 92       	push	r5
    3e70:	6f 92       	push	r6
    3e72:	7f 92       	push	r7
    3e74:	8f 92       	push	r8
    3e76:	9f 92       	push	r9
    3e78:	af 92       	push	r10
    3e7a:	bf 92       	push	r11
    3e7c:	cf 92       	push	r12
    3e7e:	df 92       	push	r13
    3e80:	ef 92       	push	r14
    3e82:	ff 92       	push	r15
    3e84:	0f 93       	push	r16
    3e86:	1f 93       	push	r17
    3e88:	cf 93       	push	r28
    3e8a:	df 93       	push	r29
    3e8c:	cd b7       	in	r28, 0x3d	; 61
    3e8e:	de b7       	in	r29, 0x3e	; 62
    3e90:	ca 1b       	sub	r28, r26
    3e92:	db 0b       	sbc	r29, r27
    3e94:	0f b6       	in	r0, 0x3f	; 63
    3e96:	f8 94       	cli
    3e98:	de bf       	out	0x3e, r29	; 62
    3e9a:	0f be       	out	0x3f, r0	; 63
    3e9c:	cd bf       	out	0x3d, r28	; 61
    3e9e:	09 94       	ijmp

00003ea0 <__epilogue_restores__>:
    3ea0:	2a 88       	ldd	r2, Y+18	; 0x12
    3ea2:	39 88       	ldd	r3, Y+17	; 0x11
    3ea4:	48 88       	ldd	r4, Y+16	; 0x10
    3ea6:	5f 84       	ldd	r5, Y+15	; 0x0f
    3ea8:	6e 84       	ldd	r6, Y+14	; 0x0e
    3eaa:	7d 84       	ldd	r7, Y+13	; 0x0d
    3eac:	8c 84       	ldd	r8, Y+12	; 0x0c
    3eae:	9b 84       	ldd	r9, Y+11	; 0x0b
    3eb0:	aa 84       	ldd	r10, Y+10	; 0x0a
    3eb2:	b9 84       	ldd	r11, Y+9	; 0x09
    3eb4:	c8 84       	ldd	r12, Y+8	; 0x08
    3eb6:	df 80       	ldd	r13, Y+7	; 0x07
    3eb8:	ee 80       	ldd	r14, Y+6	; 0x06
    3eba:	fd 80       	ldd	r15, Y+5	; 0x05
    3ebc:	0c 81       	ldd	r16, Y+4	; 0x04
    3ebe:	1b 81       	ldd	r17, Y+3	; 0x03
    3ec0:	aa 81       	ldd	r26, Y+2	; 0x02
    3ec2:	b9 81       	ldd	r27, Y+1	; 0x01
    3ec4:	ce 0f       	add	r28, r30
    3ec6:	d1 1d       	adc	r29, r1
    3ec8:	0f b6       	in	r0, 0x3f	; 63
    3eca:	f8 94       	cli
    3ecc:	de bf       	out	0x3e, r29	; 62
    3ece:	0f be       	out	0x3f, r0	; 63
    3ed0:	cd bf       	out	0x3d, r28	; 61
    3ed2:	ed 01       	movw	r28, r26
    3ed4:	08 95       	ret

00003ed6 <round>:
    3ed6:	50 d0       	rcall	.+160    	; 0x3f78 <__fp_splitA>
    3ed8:	e0 f0       	brcs	.+56     	; 0x3f12 <round+0x3c>
    3eda:	9e 37       	cpi	r25, 0x7E	; 126
    3edc:	d8 f0       	brcs	.+54     	; 0x3f14 <round+0x3e>
    3ede:	96 39       	cpi	r25, 0x96	; 150
    3ee0:	b8 f4       	brcc	.+46     	; 0x3f10 <round+0x3a>
    3ee2:	9e 38       	cpi	r25, 0x8E	; 142
    3ee4:	48 f4       	brcc	.+18     	; 0x3ef8 <round+0x22>
    3ee6:	67 2f       	mov	r22, r23
    3ee8:	78 2f       	mov	r23, r24
    3eea:	88 27       	eor	r24, r24
    3eec:	98 5f       	subi	r25, 0xF8	; 248
    3eee:	f9 cf       	rjmp	.-14     	; 0x3ee2 <round+0xc>
    3ef0:	86 95       	lsr	r24
    3ef2:	77 95       	ror	r23
    3ef4:	67 95       	ror	r22
    3ef6:	93 95       	inc	r25
    3ef8:	95 39       	cpi	r25, 0x95	; 149
    3efa:	d0 f3       	brcs	.-12     	; 0x3ef0 <round+0x1a>
    3efc:	b6 2f       	mov	r27, r22
    3efe:	b1 70       	andi	r27, 0x01	; 1
    3f00:	6b 0f       	add	r22, r27
    3f02:	71 1d       	adc	r23, r1
    3f04:	81 1d       	adc	r24, r1
    3f06:	20 f4       	brcc	.+8      	; 0x3f10 <round+0x3a>
    3f08:	87 95       	ror	r24
    3f0a:	77 95       	ror	r23
    3f0c:	67 95       	ror	r22
    3f0e:	93 95       	inc	r25
    3f10:	02 c0       	rjmp	.+4      	; 0x3f16 <__fp_mintl>
    3f12:	1c c0       	rjmp	.+56     	; 0x3f4c <__fp_mpack>
    3f14:	4c c0       	rjmp	.+152    	; 0x3fae <__fp_szero>

00003f16 <__fp_mintl>:
    3f16:	88 23       	and	r24, r24
    3f18:	71 f4       	brne	.+28     	; 0x3f36 <__fp_mintl+0x20>
    3f1a:	77 23       	and	r23, r23
    3f1c:	21 f0       	breq	.+8      	; 0x3f26 <__fp_mintl+0x10>
    3f1e:	98 50       	subi	r25, 0x08	; 8
    3f20:	87 2b       	or	r24, r23
    3f22:	76 2f       	mov	r23, r22
    3f24:	07 c0       	rjmp	.+14     	; 0x3f34 <__fp_mintl+0x1e>
    3f26:	66 23       	and	r22, r22
    3f28:	11 f4       	brne	.+4      	; 0x3f2e <__fp_mintl+0x18>
    3f2a:	99 27       	eor	r25, r25
    3f2c:	0d c0       	rjmp	.+26     	; 0x3f48 <__fp_mintl+0x32>
    3f2e:	90 51       	subi	r25, 0x10	; 16
    3f30:	86 2b       	or	r24, r22
    3f32:	70 e0       	ldi	r23, 0x00	; 0
    3f34:	60 e0       	ldi	r22, 0x00	; 0
    3f36:	2a f0       	brmi	.+10     	; 0x3f42 <__fp_mintl+0x2c>
    3f38:	9a 95       	dec	r25
    3f3a:	66 0f       	add	r22, r22
    3f3c:	77 1f       	adc	r23, r23
    3f3e:	88 1f       	adc	r24, r24
    3f40:	da f7       	brpl	.-10     	; 0x3f38 <__fp_mintl+0x22>
    3f42:	88 0f       	add	r24, r24
    3f44:	96 95       	lsr	r25
    3f46:	87 95       	ror	r24
    3f48:	97 f9       	bld	r25, 7
    3f4a:	08 95       	ret

00003f4c <__fp_mpack>:
    3f4c:	9f 3f       	cpi	r25, 0xFF	; 255
    3f4e:	31 f0       	breq	.+12     	; 0x3f5c <__fp_mpack_finite+0xc>

00003f50 <__fp_mpack_finite>:
    3f50:	91 50       	subi	r25, 0x01	; 1
    3f52:	20 f4       	brcc	.+8      	; 0x3f5c <__fp_mpack_finite+0xc>
    3f54:	87 95       	ror	r24
    3f56:	77 95       	ror	r23
    3f58:	67 95       	ror	r22
    3f5a:	b7 95       	ror	r27
    3f5c:	88 0f       	add	r24, r24
    3f5e:	91 1d       	adc	r25, r1
    3f60:	96 95       	lsr	r25
    3f62:	87 95       	ror	r24
    3f64:	97 f9       	bld	r25, 7
    3f66:	08 95       	ret

00003f68 <__fp_split3>:
    3f68:	57 fd       	sbrc	r21, 7
    3f6a:	90 58       	subi	r25, 0x80	; 128
    3f6c:	44 0f       	add	r20, r20
    3f6e:	55 1f       	adc	r21, r21
    3f70:	59 f0       	breq	.+22     	; 0x3f88 <__fp_splitA+0x10>
    3f72:	5f 3f       	cpi	r21, 0xFF	; 255
    3f74:	71 f0       	breq	.+28     	; 0x3f92 <__fp_splitA+0x1a>
    3f76:	47 95       	ror	r20

00003f78 <__fp_splitA>:
    3f78:	88 0f       	add	r24, r24
    3f7a:	97 fb       	bst	r25, 7
    3f7c:	99 1f       	adc	r25, r25
    3f7e:	61 f0       	breq	.+24     	; 0x3f98 <__fp_splitA+0x20>
    3f80:	9f 3f       	cpi	r25, 0xFF	; 255
    3f82:	79 f0       	breq	.+30     	; 0x3fa2 <__fp_splitA+0x2a>
    3f84:	87 95       	ror	r24
    3f86:	08 95       	ret
    3f88:	12 16       	cp	r1, r18
    3f8a:	13 06       	cpc	r1, r19
    3f8c:	14 06       	cpc	r1, r20
    3f8e:	55 1f       	adc	r21, r21
    3f90:	f2 cf       	rjmp	.-28     	; 0x3f76 <__fp_split3+0xe>
    3f92:	46 95       	lsr	r20
    3f94:	f1 df       	rcall	.-30     	; 0x3f78 <__fp_splitA>
    3f96:	08 c0       	rjmp	.+16     	; 0x3fa8 <__fp_splitA+0x30>
    3f98:	16 16       	cp	r1, r22
    3f9a:	17 06       	cpc	r1, r23
    3f9c:	18 06       	cpc	r1, r24
    3f9e:	99 1f       	adc	r25, r25
    3fa0:	f1 cf       	rjmp	.-30     	; 0x3f84 <__fp_splitA+0xc>
    3fa2:	86 95       	lsr	r24
    3fa4:	71 05       	cpc	r23, r1
    3fa6:	61 05       	cpc	r22, r1
    3fa8:	08 94       	sec
    3faa:	08 95       	ret

00003fac <__fp_zero>:
    3fac:	e8 94       	clt

00003fae <__fp_szero>:
    3fae:	bb 27       	eor	r27, r27
    3fb0:	66 27       	eor	r22, r22
    3fb2:	77 27       	eor	r23, r23
    3fb4:	cb 01       	movw	r24, r22
    3fb6:	97 f9       	bld	r25, 7
    3fb8:	08 95       	ret

00003fba <_exit>:
    3fba:	f8 94       	cli

00003fbc <__stop_program>:
    3fbc:	ff cf       	rjmp	.-2      	; 0x3fbc <__stop_program>
