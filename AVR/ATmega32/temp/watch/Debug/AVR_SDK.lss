
AVR_SDK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002c00  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00002c00  00002c94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800082  00800082  00002cb6  2**0
                  ALLOC
  3 .stab         00002a00  00000000  00000000  00002cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000026ef  00000000  00000000  000056b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00007da7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  00007f07  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  00008096  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  0000a0db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  0000b1dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  0000c160  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  0000c2e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  0000c5a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ce30  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
       2:	00 00       	nop
       4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
       6:	00 00       	nop
       8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
       a:	00 00       	nop
       c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
       e:	00 00       	nop
      10:	3b c6       	rjmp	.+3190   	; 0xc88 <__vector_4>
      12:	00 00       	nop
      14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
      16:	00 00       	nop
      18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
      1e:	00 00       	nop
      20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
      22:	00 00       	nop
      24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
      26:	00 00       	nop
      28:	1d c6       	rjmp	.+3130   	; 0xc64 <__vector_10>
      2a:	00 00       	nop
      2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
      2e:	00 00       	nop
      30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
      32:	00 00       	nop
      34:	2c c0       	rjmp	.+88     	; 0x8e <__bad_interrupt>
      36:	00 00       	nop
      38:	2a c0       	rjmp	.+84     	; 0x8e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	28 c0       	rjmp	.+80     	; 0x8e <__bad_interrupt>
      3e:	00 00       	nop
      40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
      42:	00 00       	nop
      44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
      46:	00 00       	nop
      48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
      4e:	00 00       	nop
      50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
	...

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	fc e2       	ldi	r31, 0x2C	; 44
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 38       	cpi	r26, 0x89	; 137
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a8 12 	call	0x2550	; 0x2550 <main>
      8a:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <_exit>

0000008e <__bad_interrupt>:
      8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <__fixunssfsi>:
      90:	ef 92       	push	r14
      92:	ff 92       	push	r15
      94:	0f 93       	push	r16
      96:	1f 93       	push	r17
      98:	7b 01       	movw	r14, r22
      9a:	8c 01       	movw	r16, r24
      9c:	20 e0       	ldi	r18, 0x00	; 0
      9e:	30 e0       	ldi	r19, 0x00	; 0
      a0:	40 e0       	ldi	r20, 0x00	; 0
      a2:	5f e4       	ldi	r21, 0x4F	; 79
      a4:	8c d3       	rcall	.+1816   	; 0x7be <__gesf2>
      a6:	88 23       	and	r24, r24
      a8:	7c f0       	brlt	.+30     	; 0xc8 <__fixunssfsi+0x38>
      aa:	c8 01       	movw	r24, r16
      ac:	b7 01       	movw	r22, r14
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	30 e0       	ldi	r19, 0x00	; 0
      b2:	40 e0       	ldi	r20, 0x00	; 0
      b4:	5f e4       	ldi	r21, 0x4F	; 79
      b6:	60 d1       	rcall	.+704    	; 0x378 <__subsf3>
      b8:	dc d3       	rcall	.+1976   	; 0x872 <__fixsfsi>
      ba:	9b 01       	movw	r18, r22
      bc:	ac 01       	movw	r20, r24
      be:	20 50       	subi	r18, 0x00	; 0
      c0:	30 40       	sbci	r19, 0x00	; 0
      c2:	40 40       	sbci	r20, 0x00	; 0
      c4:	50 48       	sbci	r21, 0x80	; 128
      c6:	05 c0       	rjmp	.+10     	; 0xd2 <__fixunssfsi+0x42>
      c8:	c8 01       	movw	r24, r16
      ca:	b7 01       	movw	r22, r14
      cc:	d2 d3       	rcall	.+1956   	; 0x872 <__fixsfsi>
      ce:	9b 01       	movw	r18, r22
      d0:	ac 01       	movw	r20, r24
      d2:	b9 01       	movw	r22, r18
      d4:	ca 01       	movw	r24, r20
      d6:	1f 91       	pop	r17
      d8:	0f 91       	pop	r16
      da:	ff 90       	pop	r15
      dc:	ef 90       	pop	r14
      de:	08 95       	ret

000000e0 <_fpadd_parts>:
      e0:	a0 e0       	ldi	r26, 0x00	; 0
      e2:	b0 e0       	ldi	r27, 0x00	; 0
      e4:	e6 e7       	ldi	r30, 0x76	; 118
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	0c 94 38 13 	jmp	0x2670	; 0x2670 <__prologue_saves__>
      ec:	dc 01       	movw	r26, r24
      ee:	2b 01       	movw	r4, r22
      f0:	fa 01       	movw	r30, r20
      f2:	9c 91       	ld	r25, X
      f4:	92 30       	cpi	r25, 0x02	; 2
      f6:	08 f4       	brcc	.+2      	; 0xfa <_fpadd_parts+0x1a>
      f8:	39 c1       	rjmp	.+626    	; 0x36c <_fpadd_parts+0x28c>
      fa:	eb 01       	movw	r28, r22
      fc:	88 81       	ld	r24, Y
      fe:	82 30       	cpi	r24, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x24>
     102:	33 c1       	rjmp	.+614    	; 0x36a <_fpadd_parts+0x28a>
     104:	94 30       	cpi	r25, 0x04	; 4
     106:	69 f4       	brne	.+26     	; 0x122 <_fpadd_parts+0x42>
     108:	84 30       	cpi	r24, 0x04	; 4
     10a:	09 f0       	breq	.+2      	; 0x10e <_fpadd_parts+0x2e>
     10c:	2f c1       	rjmp	.+606    	; 0x36c <_fpadd_parts+0x28c>
     10e:	11 96       	adiw	r26, 0x01	; 1
     110:	9c 91       	ld	r25, X
     112:	11 97       	sbiw	r26, 0x01	; 1
     114:	89 81       	ldd	r24, Y+1	; 0x01
     116:	98 17       	cp	r25, r24
     118:	09 f4       	brne	.+2      	; 0x11c <_fpadd_parts+0x3c>
     11a:	28 c1       	rjmp	.+592    	; 0x36c <_fpadd_parts+0x28c>
     11c:	a7 e7       	ldi	r26, 0x77	; 119
     11e:	b0 e0       	ldi	r27, 0x00	; 0
     120:	25 c1       	rjmp	.+586    	; 0x36c <_fpadd_parts+0x28c>
     122:	84 30       	cpi	r24, 0x04	; 4
     124:	09 f4       	brne	.+2      	; 0x128 <_fpadd_parts+0x48>
     126:	21 c1       	rjmp	.+578    	; 0x36a <_fpadd_parts+0x28a>
     128:	82 30       	cpi	r24, 0x02	; 2
     12a:	a9 f4       	brne	.+42     	; 0x156 <_fpadd_parts+0x76>
     12c:	92 30       	cpi	r25, 0x02	; 2
     12e:	09 f0       	breq	.+2      	; 0x132 <_fpadd_parts+0x52>
     130:	1d c1       	rjmp	.+570    	; 0x36c <_fpadd_parts+0x28c>
     132:	9a 01       	movw	r18, r20
     134:	ad 01       	movw	r20, r26
     136:	88 e0       	ldi	r24, 0x08	; 8
     138:	ea 01       	movw	r28, r20
     13a:	09 90       	ld	r0, Y+
     13c:	ae 01       	movw	r20, r28
     13e:	e9 01       	movw	r28, r18
     140:	09 92       	st	Y+, r0
     142:	9e 01       	movw	r18, r28
     144:	81 50       	subi	r24, 0x01	; 1
     146:	c1 f7       	brne	.-16     	; 0x138 <_fpadd_parts+0x58>
     148:	e2 01       	movw	r28, r4
     14a:	89 81       	ldd	r24, Y+1	; 0x01
     14c:	11 96       	adiw	r26, 0x01	; 1
     14e:	9c 91       	ld	r25, X
     150:	89 23       	and	r24, r25
     152:	81 83       	std	Z+1, r24	; 0x01
     154:	08 c1       	rjmp	.+528    	; 0x366 <_fpadd_parts+0x286>
     156:	92 30       	cpi	r25, 0x02	; 2
     158:	09 f4       	brne	.+2      	; 0x15c <_fpadd_parts+0x7c>
     15a:	07 c1       	rjmp	.+526    	; 0x36a <_fpadd_parts+0x28a>
     15c:	12 96       	adiw	r26, 0x02	; 2
     15e:	2d 90       	ld	r2, X+
     160:	3c 90       	ld	r3, X
     162:	13 97       	sbiw	r26, 0x03	; 3
     164:	eb 01       	movw	r28, r22
     166:	8a 81       	ldd	r24, Y+2	; 0x02
     168:	9b 81       	ldd	r25, Y+3	; 0x03
     16a:	14 96       	adiw	r26, 0x04	; 4
     16c:	ad 90       	ld	r10, X+
     16e:	bd 90       	ld	r11, X+
     170:	cd 90       	ld	r12, X+
     172:	dc 90       	ld	r13, X
     174:	17 97       	sbiw	r26, 0x07	; 7
     176:	ec 80       	ldd	r14, Y+4	; 0x04
     178:	fd 80       	ldd	r15, Y+5	; 0x05
     17a:	0e 81       	ldd	r16, Y+6	; 0x06
     17c:	1f 81       	ldd	r17, Y+7	; 0x07
     17e:	91 01       	movw	r18, r2
     180:	28 1b       	sub	r18, r24
     182:	39 0b       	sbc	r19, r25
     184:	b9 01       	movw	r22, r18
     186:	37 ff       	sbrs	r19, 7
     188:	04 c0       	rjmp	.+8      	; 0x192 <_fpadd_parts+0xb2>
     18a:	66 27       	eor	r22, r22
     18c:	77 27       	eor	r23, r23
     18e:	62 1b       	sub	r22, r18
     190:	73 0b       	sbc	r23, r19
     192:	60 32       	cpi	r22, 0x20	; 32
     194:	71 05       	cpc	r23, r1
     196:	0c f0       	brlt	.+2      	; 0x19a <_fpadd_parts+0xba>
     198:	61 c0       	rjmp	.+194    	; 0x25c <_fpadd_parts+0x17c>
     19a:	12 16       	cp	r1, r18
     19c:	13 06       	cpc	r1, r19
     19e:	6c f5       	brge	.+90     	; 0x1fa <_fpadd_parts+0x11a>
     1a0:	37 01       	movw	r6, r14
     1a2:	48 01       	movw	r8, r16
     1a4:	06 2e       	mov	r0, r22
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <_fpadd_parts+0xd0>
     1a8:	96 94       	lsr	r9
     1aa:	87 94       	ror	r8
     1ac:	77 94       	ror	r7
     1ae:	67 94       	ror	r6
     1b0:	0a 94       	dec	r0
     1b2:	d2 f7       	brpl	.-12     	; 0x1a8 <_fpadd_parts+0xc8>
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	40 e0       	ldi	r20, 0x00	; 0
     1ba:	50 e0       	ldi	r21, 0x00	; 0
     1bc:	04 c0       	rjmp	.+8      	; 0x1c6 <_fpadd_parts+0xe6>
     1be:	22 0f       	add	r18, r18
     1c0:	33 1f       	adc	r19, r19
     1c2:	44 1f       	adc	r20, r20
     1c4:	55 1f       	adc	r21, r21
     1c6:	6a 95       	dec	r22
     1c8:	d2 f7       	brpl	.-12     	; 0x1be <_fpadd_parts+0xde>
     1ca:	21 50       	subi	r18, 0x01	; 1
     1cc:	30 40       	sbci	r19, 0x00	; 0
     1ce:	40 40       	sbci	r20, 0x00	; 0
     1d0:	50 40       	sbci	r21, 0x00	; 0
     1d2:	2e 21       	and	r18, r14
     1d4:	3f 21       	and	r19, r15
     1d6:	40 23       	and	r20, r16
     1d8:	51 23       	and	r21, r17
     1da:	21 15       	cp	r18, r1
     1dc:	31 05       	cpc	r19, r1
     1de:	41 05       	cpc	r20, r1
     1e0:	51 05       	cpc	r21, r1
     1e2:	21 f0       	breq	.+8      	; 0x1ec <_fpadd_parts+0x10c>
     1e4:	21 e0       	ldi	r18, 0x01	; 1
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	40 e0       	ldi	r20, 0x00	; 0
     1ea:	50 e0       	ldi	r21, 0x00	; 0
     1ec:	79 01       	movw	r14, r18
     1ee:	8a 01       	movw	r16, r20
     1f0:	e6 28       	or	r14, r6
     1f2:	f7 28       	or	r15, r7
     1f4:	08 29       	or	r16, r8
     1f6:	19 29       	or	r17, r9
     1f8:	3c c0       	rjmp	.+120    	; 0x272 <_fpadd_parts+0x192>
     1fa:	23 2b       	or	r18, r19
     1fc:	d1 f1       	breq	.+116    	; 0x272 <_fpadd_parts+0x192>
     1fe:	26 0e       	add	r2, r22
     200:	37 1e       	adc	r3, r23
     202:	35 01       	movw	r6, r10
     204:	46 01       	movw	r8, r12
     206:	06 2e       	mov	r0, r22
     208:	04 c0       	rjmp	.+8      	; 0x212 <_fpadd_parts+0x132>
     20a:	96 94       	lsr	r9
     20c:	87 94       	ror	r8
     20e:	77 94       	ror	r7
     210:	67 94       	ror	r6
     212:	0a 94       	dec	r0
     214:	d2 f7       	brpl	.-12     	; 0x20a <_fpadd_parts+0x12a>
     216:	21 e0       	ldi	r18, 0x01	; 1
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	50 e0       	ldi	r21, 0x00	; 0
     21e:	04 c0       	rjmp	.+8      	; 0x228 <_fpadd_parts+0x148>
     220:	22 0f       	add	r18, r18
     222:	33 1f       	adc	r19, r19
     224:	44 1f       	adc	r20, r20
     226:	55 1f       	adc	r21, r21
     228:	6a 95       	dec	r22
     22a:	d2 f7       	brpl	.-12     	; 0x220 <_fpadd_parts+0x140>
     22c:	21 50       	subi	r18, 0x01	; 1
     22e:	30 40       	sbci	r19, 0x00	; 0
     230:	40 40       	sbci	r20, 0x00	; 0
     232:	50 40       	sbci	r21, 0x00	; 0
     234:	2a 21       	and	r18, r10
     236:	3b 21       	and	r19, r11
     238:	4c 21       	and	r20, r12
     23a:	5d 21       	and	r21, r13
     23c:	21 15       	cp	r18, r1
     23e:	31 05       	cpc	r19, r1
     240:	41 05       	cpc	r20, r1
     242:	51 05       	cpc	r21, r1
     244:	21 f0       	breq	.+8      	; 0x24e <_fpadd_parts+0x16e>
     246:	21 e0       	ldi	r18, 0x01	; 1
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	50 e0       	ldi	r21, 0x00	; 0
     24e:	59 01       	movw	r10, r18
     250:	6a 01       	movw	r12, r20
     252:	a6 28       	or	r10, r6
     254:	b7 28       	or	r11, r7
     256:	c8 28       	or	r12, r8
     258:	d9 28       	or	r13, r9
     25a:	0b c0       	rjmp	.+22     	; 0x272 <_fpadd_parts+0x192>
     25c:	82 15       	cp	r24, r2
     25e:	93 05       	cpc	r25, r3
     260:	2c f0       	brlt	.+10     	; 0x26c <_fpadd_parts+0x18c>
     262:	1c 01       	movw	r2, r24
     264:	aa 24       	eor	r10, r10
     266:	bb 24       	eor	r11, r11
     268:	65 01       	movw	r12, r10
     26a:	03 c0       	rjmp	.+6      	; 0x272 <_fpadd_parts+0x192>
     26c:	ee 24       	eor	r14, r14
     26e:	ff 24       	eor	r15, r15
     270:	87 01       	movw	r16, r14
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	9c 91       	ld	r25, X
     276:	d2 01       	movw	r26, r4
     278:	11 96       	adiw	r26, 0x01	; 1
     27a:	8c 91       	ld	r24, X
     27c:	98 17       	cp	r25, r24
     27e:	09 f4       	brne	.+2      	; 0x282 <_fpadd_parts+0x1a2>
     280:	45 c0       	rjmp	.+138    	; 0x30c <_fpadd_parts+0x22c>
     282:	99 23       	and	r25, r25
     284:	39 f0       	breq	.+14     	; 0x294 <_fpadd_parts+0x1b4>
     286:	a8 01       	movw	r20, r16
     288:	97 01       	movw	r18, r14
     28a:	2a 19       	sub	r18, r10
     28c:	3b 09       	sbc	r19, r11
     28e:	4c 09       	sbc	r20, r12
     290:	5d 09       	sbc	r21, r13
     292:	06 c0       	rjmp	.+12     	; 0x2a0 <_fpadd_parts+0x1c0>
     294:	a6 01       	movw	r20, r12
     296:	95 01       	movw	r18, r10
     298:	2e 19       	sub	r18, r14
     29a:	3f 09       	sbc	r19, r15
     29c:	40 0b       	sbc	r20, r16
     29e:	51 0b       	sbc	r21, r17
     2a0:	57 fd       	sbrc	r21, 7
     2a2:	08 c0       	rjmp	.+16     	; 0x2b4 <_fpadd_parts+0x1d4>
     2a4:	11 82       	std	Z+1, r1	; 0x01
     2a6:	33 82       	std	Z+3, r3	; 0x03
     2a8:	22 82       	std	Z+2, r2	; 0x02
     2aa:	24 83       	std	Z+4, r18	; 0x04
     2ac:	35 83       	std	Z+5, r19	; 0x05
     2ae:	46 83       	std	Z+6, r20	; 0x06
     2b0:	57 83       	std	Z+7, r21	; 0x07
     2b2:	1d c0       	rjmp	.+58     	; 0x2ee <_fpadd_parts+0x20e>
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	81 83       	std	Z+1, r24	; 0x01
     2b8:	33 82       	std	Z+3, r3	; 0x03
     2ba:	22 82       	std	Z+2, r2	; 0x02
     2bc:	88 27       	eor	r24, r24
     2be:	99 27       	eor	r25, r25
     2c0:	dc 01       	movw	r26, r24
     2c2:	82 1b       	sub	r24, r18
     2c4:	93 0b       	sbc	r25, r19
     2c6:	a4 0b       	sbc	r26, r20
     2c8:	b5 0b       	sbc	r27, r21
     2ca:	84 83       	std	Z+4, r24	; 0x04
     2cc:	95 83       	std	Z+5, r25	; 0x05
     2ce:	a6 83       	std	Z+6, r26	; 0x06
     2d0:	b7 83       	std	Z+7, r27	; 0x07
     2d2:	0d c0       	rjmp	.+26     	; 0x2ee <_fpadd_parts+0x20e>
     2d4:	22 0f       	add	r18, r18
     2d6:	33 1f       	adc	r19, r19
     2d8:	44 1f       	adc	r20, r20
     2da:	55 1f       	adc	r21, r21
     2dc:	24 83       	std	Z+4, r18	; 0x04
     2de:	35 83       	std	Z+5, r19	; 0x05
     2e0:	46 83       	std	Z+6, r20	; 0x06
     2e2:	57 83       	std	Z+7, r21	; 0x07
     2e4:	82 81       	ldd	r24, Z+2	; 0x02
     2e6:	93 81       	ldd	r25, Z+3	; 0x03
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	93 83       	std	Z+3, r25	; 0x03
     2ec:	82 83       	std	Z+2, r24	; 0x02
     2ee:	24 81       	ldd	r18, Z+4	; 0x04
     2f0:	35 81       	ldd	r19, Z+5	; 0x05
     2f2:	46 81       	ldd	r20, Z+6	; 0x06
     2f4:	57 81       	ldd	r21, Z+7	; 0x07
     2f6:	da 01       	movw	r26, r20
     2f8:	c9 01       	movw	r24, r18
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	a1 09       	sbc	r26, r1
     2fe:	b1 09       	sbc	r27, r1
     300:	8f 5f       	subi	r24, 0xFF	; 255
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	af 4f       	sbci	r26, 0xFF	; 255
     306:	bf 43       	sbci	r27, 0x3F	; 63
     308:	28 f3       	brcs	.-54     	; 0x2d4 <_fpadd_parts+0x1f4>
     30a:	0b c0       	rjmp	.+22     	; 0x322 <_fpadd_parts+0x242>
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	33 82       	std	Z+3, r3	; 0x03
     310:	22 82       	std	Z+2, r2	; 0x02
     312:	ea 0c       	add	r14, r10
     314:	fb 1c       	adc	r15, r11
     316:	0c 1d       	adc	r16, r12
     318:	1d 1d       	adc	r17, r13
     31a:	e4 82       	std	Z+4, r14	; 0x04
     31c:	f5 82       	std	Z+5, r15	; 0x05
     31e:	06 83       	std	Z+6, r16	; 0x06
     320:	17 83       	std	Z+7, r17	; 0x07
     322:	83 e0       	ldi	r24, 0x03	; 3
     324:	80 83       	st	Z, r24
     326:	24 81       	ldd	r18, Z+4	; 0x04
     328:	35 81       	ldd	r19, Z+5	; 0x05
     32a:	46 81       	ldd	r20, Z+6	; 0x06
     32c:	57 81       	ldd	r21, Z+7	; 0x07
     32e:	57 ff       	sbrs	r21, 7
     330:	1a c0       	rjmp	.+52     	; 0x366 <_fpadd_parts+0x286>
     332:	c9 01       	movw	r24, r18
     334:	aa 27       	eor	r26, r26
     336:	97 fd       	sbrc	r25, 7
     338:	a0 95       	com	r26
     33a:	ba 2f       	mov	r27, r26
     33c:	81 70       	andi	r24, 0x01	; 1
     33e:	90 70       	andi	r25, 0x00	; 0
     340:	a0 70       	andi	r26, 0x00	; 0
     342:	b0 70       	andi	r27, 0x00	; 0
     344:	56 95       	lsr	r21
     346:	47 95       	ror	r20
     348:	37 95       	ror	r19
     34a:	27 95       	ror	r18
     34c:	82 2b       	or	r24, r18
     34e:	93 2b       	or	r25, r19
     350:	a4 2b       	or	r26, r20
     352:	b5 2b       	or	r27, r21
     354:	84 83       	std	Z+4, r24	; 0x04
     356:	95 83       	std	Z+5, r25	; 0x05
     358:	a6 83       	std	Z+6, r26	; 0x06
     35a:	b7 83       	std	Z+7, r27	; 0x07
     35c:	82 81       	ldd	r24, Z+2	; 0x02
     35e:	93 81       	ldd	r25, Z+3	; 0x03
     360:	01 96       	adiw	r24, 0x01	; 1
     362:	93 83       	std	Z+3, r25	; 0x03
     364:	82 83       	std	Z+2, r24	; 0x02
     366:	df 01       	movw	r26, r30
     368:	01 c0       	rjmp	.+2      	; 0x36c <_fpadd_parts+0x28c>
     36a:	d2 01       	movw	r26, r4
     36c:	cd 01       	movw	r24, r26
     36e:	cd b7       	in	r28, 0x3d	; 61
     370:	de b7       	in	r29, 0x3e	; 62
     372:	e2 e1       	ldi	r30, 0x12	; 18
     374:	0c 94 54 13 	jmp	0x26a8	; 0x26a8 <__epilogue_restores__>

00000378 <__subsf3>:
     378:	a0 e2       	ldi	r26, 0x20	; 32
     37a:	b0 e0       	ldi	r27, 0x00	; 0
     37c:	e2 ec       	ldi	r30, 0xC2	; 194
     37e:	f1 e0       	ldi	r31, 0x01	; 1
     380:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__prologue_saves__+0x18>
     384:	69 83       	std	Y+1, r22	; 0x01
     386:	7a 83       	std	Y+2, r23	; 0x02
     388:	8b 83       	std	Y+3, r24	; 0x03
     38a:	9c 83       	std	Y+4, r25	; 0x04
     38c:	2d 83       	std	Y+5, r18	; 0x05
     38e:	3e 83       	std	Y+6, r19	; 0x06
     390:	4f 83       	std	Y+7, r20	; 0x07
     392:	58 87       	std	Y+8, r21	; 0x08
     394:	e9 e0       	ldi	r30, 0x09	; 9
     396:	ee 2e       	mov	r14, r30
     398:	f1 2c       	mov	r15, r1
     39a:	ec 0e       	add	r14, r28
     39c:	fd 1e       	adc	r15, r29
     39e:	ce 01       	movw	r24, r28
     3a0:	01 96       	adiw	r24, 0x01	; 1
     3a2:	b7 01       	movw	r22, r14
     3a4:	8e d3       	rcall	.+1820   	; 0xac2 <__unpack_f>
     3a6:	8e 01       	movw	r16, r28
     3a8:	0f 5e       	subi	r16, 0xEF	; 239
     3aa:	1f 4f       	sbci	r17, 0xFF	; 255
     3ac:	ce 01       	movw	r24, r28
     3ae:	05 96       	adiw	r24, 0x05	; 5
     3b0:	b8 01       	movw	r22, r16
     3b2:	87 d3       	rcall	.+1806   	; 0xac2 <__unpack_f>
     3b4:	8a 89       	ldd	r24, Y+18	; 0x12
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	89 27       	eor	r24, r25
     3ba:	8a 8b       	std	Y+18, r24	; 0x12
     3bc:	c7 01       	movw	r24, r14
     3be:	b8 01       	movw	r22, r16
     3c0:	ae 01       	movw	r20, r28
     3c2:	47 5e       	subi	r20, 0xE7	; 231
     3c4:	5f 4f       	sbci	r21, 0xFF	; 255
     3c6:	8c de       	rcall	.-744    	; 0xe0 <_fpadd_parts>
     3c8:	a7 d2       	rcall	.+1358   	; 0x918 <__pack_f>
     3ca:	a0 96       	adiw	r28, 0x20	; 32
     3cc:	e6 e0       	ldi	r30, 0x06	; 6
     3ce:	0c 94 60 13 	jmp	0x26c0	; 0x26c0 <__epilogue_restores__+0x18>

000003d2 <__addsf3>:
     3d2:	a0 e2       	ldi	r26, 0x20	; 32
     3d4:	b0 e0       	ldi	r27, 0x00	; 0
     3d6:	ef ee       	ldi	r30, 0xEF	; 239
     3d8:	f1 e0       	ldi	r31, 0x01	; 1
     3da:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__prologue_saves__+0x18>
     3de:	69 83       	std	Y+1, r22	; 0x01
     3e0:	7a 83       	std	Y+2, r23	; 0x02
     3e2:	8b 83       	std	Y+3, r24	; 0x03
     3e4:	9c 83       	std	Y+4, r25	; 0x04
     3e6:	2d 83       	std	Y+5, r18	; 0x05
     3e8:	3e 83       	std	Y+6, r19	; 0x06
     3ea:	4f 83       	std	Y+7, r20	; 0x07
     3ec:	58 87       	std	Y+8, r21	; 0x08
     3ee:	f9 e0       	ldi	r31, 0x09	; 9
     3f0:	ef 2e       	mov	r14, r31
     3f2:	f1 2c       	mov	r15, r1
     3f4:	ec 0e       	add	r14, r28
     3f6:	fd 1e       	adc	r15, r29
     3f8:	ce 01       	movw	r24, r28
     3fa:	01 96       	adiw	r24, 0x01	; 1
     3fc:	b7 01       	movw	r22, r14
     3fe:	61 d3       	rcall	.+1730   	; 0xac2 <__unpack_f>
     400:	8e 01       	movw	r16, r28
     402:	0f 5e       	subi	r16, 0xEF	; 239
     404:	1f 4f       	sbci	r17, 0xFF	; 255
     406:	ce 01       	movw	r24, r28
     408:	05 96       	adiw	r24, 0x05	; 5
     40a:	b8 01       	movw	r22, r16
     40c:	5a d3       	rcall	.+1716   	; 0xac2 <__unpack_f>
     40e:	c7 01       	movw	r24, r14
     410:	b8 01       	movw	r22, r16
     412:	ae 01       	movw	r20, r28
     414:	47 5e       	subi	r20, 0xE7	; 231
     416:	5f 4f       	sbci	r21, 0xFF	; 255
     418:	63 de       	rcall	.-826    	; 0xe0 <_fpadd_parts>
     41a:	7e d2       	rcall	.+1276   	; 0x918 <__pack_f>
     41c:	a0 96       	adiw	r28, 0x20	; 32
     41e:	e6 e0       	ldi	r30, 0x06	; 6
     420:	0c 94 60 13 	jmp	0x26c0	; 0x26c0 <__epilogue_restores__+0x18>

00000424 <__mulsf3>:
     424:	a0 e2       	ldi	r26, 0x20	; 32
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	e8 e1       	ldi	r30, 0x18	; 24
     42a:	f2 e0       	ldi	r31, 0x02	; 2
     42c:	0c 94 38 13 	jmp	0x2670	; 0x2670 <__prologue_saves__>
     430:	69 83       	std	Y+1, r22	; 0x01
     432:	7a 83       	std	Y+2, r23	; 0x02
     434:	8b 83       	std	Y+3, r24	; 0x03
     436:	9c 83       	std	Y+4, r25	; 0x04
     438:	2d 83       	std	Y+5, r18	; 0x05
     43a:	3e 83       	std	Y+6, r19	; 0x06
     43c:	4f 83       	std	Y+7, r20	; 0x07
     43e:	58 87       	std	Y+8, r21	; 0x08
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	be 01       	movw	r22, r28
     446:	67 5f       	subi	r22, 0xF7	; 247
     448:	7f 4f       	sbci	r23, 0xFF	; 255
     44a:	3b d3       	rcall	.+1654   	; 0xac2 <__unpack_f>
     44c:	ce 01       	movw	r24, r28
     44e:	05 96       	adiw	r24, 0x05	; 5
     450:	be 01       	movw	r22, r28
     452:	6f 5e       	subi	r22, 0xEF	; 239
     454:	7f 4f       	sbci	r23, 0xFF	; 255
     456:	35 d3       	rcall	.+1642   	; 0xac2 <__unpack_f>
     458:	99 85       	ldd	r25, Y+9	; 0x09
     45a:	92 30       	cpi	r25, 0x02	; 2
     45c:	88 f0       	brcs	.+34     	; 0x480 <__mulsf3+0x5c>
     45e:	89 89       	ldd	r24, Y+17	; 0x11
     460:	82 30       	cpi	r24, 0x02	; 2
     462:	c8 f0       	brcs	.+50     	; 0x496 <__mulsf3+0x72>
     464:	94 30       	cpi	r25, 0x04	; 4
     466:	19 f4       	brne	.+6      	; 0x46e <__mulsf3+0x4a>
     468:	82 30       	cpi	r24, 0x02	; 2
     46a:	51 f4       	brne	.+20     	; 0x480 <__mulsf3+0x5c>
     46c:	04 c0       	rjmp	.+8      	; 0x476 <__mulsf3+0x52>
     46e:	84 30       	cpi	r24, 0x04	; 4
     470:	29 f4       	brne	.+10     	; 0x47c <__mulsf3+0x58>
     472:	92 30       	cpi	r25, 0x02	; 2
     474:	81 f4       	brne	.+32     	; 0x496 <__mulsf3+0x72>
     476:	87 e7       	ldi	r24, 0x77	; 119
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	c6 c0       	rjmp	.+396    	; 0x608 <__mulsf3+0x1e4>
     47c:	92 30       	cpi	r25, 0x02	; 2
     47e:	49 f4       	brne	.+18     	; 0x492 <__mulsf3+0x6e>
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	9a 85       	ldd	r25, Y+10	; 0x0a
     484:	8a 89       	ldd	r24, Y+18	; 0x12
     486:	98 13       	cpse	r25, r24
     488:	21 e0       	ldi	r18, 0x01	; 1
     48a:	2a 87       	std	Y+10, r18	; 0x0a
     48c:	ce 01       	movw	r24, r28
     48e:	09 96       	adiw	r24, 0x09	; 9
     490:	bb c0       	rjmp	.+374    	; 0x608 <__mulsf3+0x1e4>
     492:	82 30       	cpi	r24, 0x02	; 2
     494:	49 f4       	brne	.+18     	; 0x4a8 <__mulsf3+0x84>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	9a 85       	ldd	r25, Y+10	; 0x0a
     49a:	8a 89       	ldd	r24, Y+18	; 0x12
     49c:	98 13       	cpse	r25, r24
     49e:	21 e0       	ldi	r18, 0x01	; 1
     4a0:	2a 8b       	std	Y+18, r18	; 0x12
     4a2:	ce 01       	movw	r24, r28
     4a4:	41 96       	adiw	r24, 0x11	; 17
     4a6:	b0 c0       	rjmp	.+352    	; 0x608 <__mulsf3+0x1e4>
     4a8:	2d 84       	ldd	r2, Y+13	; 0x0d
     4aa:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ac:	4f 84       	ldd	r4, Y+15	; 0x0f
     4ae:	58 88       	ldd	r5, Y+16	; 0x10
     4b0:	6d 88       	ldd	r6, Y+21	; 0x15
     4b2:	7e 88       	ldd	r7, Y+22	; 0x16
     4b4:	8f 88       	ldd	r8, Y+23	; 0x17
     4b6:	98 8c       	ldd	r9, Y+24	; 0x18
     4b8:	ee 24       	eor	r14, r14
     4ba:	ff 24       	eor	r15, r15
     4bc:	87 01       	movw	r16, r14
     4be:	aa 24       	eor	r10, r10
     4c0:	bb 24       	eor	r11, r11
     4c2:	65 01       	movw	r12, r10
     4c4:	40 e0       	ldi	r20, 0x00	; 0
     4c6:	50 e0       	ldi	r21, 0x00	; 0
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	e0 e0       	ldi	r30, 0x00	; 0
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	c1 01       	movw	r24, r2
     4d2:	81 70       	andi	r24, 0x01	; 1
     4d4:	90 70       	andi	r25, 0x00	; 0
     4d6:	89 2b       	or	r24, r25
     4d8:	e9 f0       	breq	.+58     	; 0x514 <__mulsf3+0xf0>
     4da:	e6 0c       	add	r14, r6
     4dc:	f7 1c       	adc	r15, r7
     4de:	08 1d       	adc	r16, r8
     4e0:	19 1d       	adc	r17, r9
     4e2:	9a 01       	movw	r18, r20
     4e4:	ab 01       	movw	r20, r22
     4e6:	2a 0d       	add	r18, r10
     4e8:	3b 1d       	adc	r19, r11
     4ea:	4c 1d       	adc	r20, r12
     4ec:	5d 1d       	adc	r21, r13
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	a0 e0       	ldi	r26, 0x00	; 0
     4f4:	b0 e0       	ldi	r27, 0x00	; 0
     4f6:	e6 14       	cp	r14, r6
     4f8:	f7 04       	cpc	r15, r7
     4fa:	08 05       	cpc	r16, r8
     4fc:	19 05       	cpc	r17, r9
     4fe:	20 f4       	brcc	.+8      	; 0x508 <__mulsf3+0xe4>
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	a0 e0       	ldi	r26, 0x00	; 0
     506:	b0 e0       	ldi	r27, 0x00	; 0
     508:	ba 01       	movw	r22, r20
     50a:	a9 01       	movw	r20, r18
     50c:	48 0f       	add	r20, r24
     50e:	59 1f       	adc	r21, r25
     510:	6a 1f       	adc	r22, r26
     512:	7b 1f       	adc	r23, r27
     514:	aa 0c       	add	r10, r10
     516:	bb 1c       	adc	r11, r11
     518:	cc 1c       	adc	r12, r12
     51a:	dd 1c       	adc	r13, r13
     51c:	97 fe       	sbrs	r9, 7
     51e:	08 c0       	rjmp	.+16     	; 0x530 <__mulsf3+0x10c>
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	a0 e0       	ldi	r26, 0x00	; 0
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	a8 2a       	or	r10, r24
     52a:	b9 2a       	or	r11, r25
     52c:	ca 2a       	or	r12, r26
     52e:	db 2a       	or	r13, r27
     530:	31 96       	adiw	r30, 0x01	; 1
     532:	e0 32       	cpi	r30, 0x20	; 32
     534:	f1 05       	cpc	r31, r1
     536:	49 f0       	breq	.+18     	; 0x54a <__mulsf3+0x126>
     538:	66 0c       	add	r6, r6
     53a:	77 1c       	adc	r7, r7
     53c:	88 1c       	adc	r8, r8
     53e:	99 1c       	adc	r9, r9
     540:	56 94       	lsr	r5
     542:	47 94       	ror	r4
     544:	37 94       	ror	r3
     546:	27 94       	ror	r2
     548:	c3 cf       	rjmp	.-122    	; 0x4d0 <__mulsf3+0xac>
     54a:	fa 85       	ldd	r31, Y+10	; 0x0a
     54c:	ea 89       	ldd	r30, Y+18	; 0x12
     54e:	2b 89       	ldd	r18, Y+19	; 0x13
     550:	3c 89       	ldd	r19, Y+20	; 0x14
     552:	8b 85       	ldd	r24, Y+11	; 0x0b
     554:	9c 85       	ldd	r25, Y+12	; 0x0c
     556:	28 0f       	add	r18, r24
     558:	39 1f       	adc	r19, r25
     55a:	2e 5f       	subi	r18, 0xFE	; 254
     55c:	3f 4f       	sbci	r19, 0xFF	; 255
     55e:	17 c0       	rjmp	.+46     	; 0x58e <__mulsf3+0x16a>
     560:	ca 01       	movw	r24, r20
     562:	81 70       	andi	r24, 0x01	; 1
     564:	90 70       	andi	r25, 0x00	; 0
     566:	89 2b       	or	r24, r25
     568:	61 f0       	breq	.+24     	; 0x582 <__mulsf3+0x15e>
     56a:	16 95       	lsr	r17
     56c:	07 95       	ror	r16
     56e:	f7 94       	ror	r15
     570:	e7 94       	ror	r14
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	a0 e0       	ldi	r26, 0x00	; 0
     578:	b0 e8       	ldi	r27, 0x80	; 128
     57a:	e8 2a       	or	r14, r24
     57c:	f9 2a       	or	r15, r25
     57e:	0a 2b       	or	r16, r26
     580:	1b 2b       	or	r17, r27
     582:	76 95       	lsr	r23
     584:	67 95       	ror	r22
     586:	57 95       	ror	r21
     588:	47 95       	ror	r20
     58a:	2f 5f       	subi	r18, 0xFF	; 255
     58c:	3f 4f       	sbci	r19, 0xFF	; 255
     58e:	77 fd       	sbrc	r23, 7
     590:	e7 cf       	rjmp	.-50     	; 0x560 <__mulsf3+0x13c>
     592:	0c c0       	rjmp	.+24     	; 0x5ac <__mulsf3+0x188>
     594:	44 0f       	add	r20, r20
     596:	55 1f       	adc	r21, r21
     598:	66 1f       	adc	r22, r22
     59a:	77 1f       	adc	r23, r23
     59c:	17 fd       	sbrc	r17, 7
     59e:	41 60       	ori	r20, 0x01	; 1
     5a0:	ee 0c       	add	r14, r14
     5a2:	ff 1c       	adc	r15, r15
     5a4:	00 1f       	adc	r16, r16
     5a6:	11 1f       	adc	r17, r17
     5a8:	21 50       	subi	r18, 0x01	; 1
     5aa:	30 40       	sbci	r19, 0x00	; 0
     5ac:	40 30       	cpi	r20, 0x00	; 0
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	59 07       	cpc	r21, r25
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	69 07       	cpc	r22, r25
     5b6:	90 e4       	ldi	r25, 0x40	; 64
     5b8:	79 07       	cpc	r23, r25
     5ba:	60 f3       	brcs	.-40     	; 0x594 <__mulsf3+0x170>
     5bc:	2b 8f       	std	Y+27, r18	; 0x1b
     5be:	3c 8f       	std	Y+28, r19	; 0x1c
     5c0:	db 01       	movw	r26, r22
     5c2:	ca 01       	movw	r24, r20
     5c4:	8f 77       	andi	r24, 0x7F	; 127
     5c6:	90 70       	andi	r25, 0x00	; 0
     5c8:	a0 70       	andi	r26, 0x00	; 0
     5ca:	b0 70       	andi	r27, 0x00	; 0
     5cc:	80 34       	cpi	r24, 0x40	; 64
     5ce:	91 05       	cpc	r25, r1
     5d0:	a1 05       	cpc	r26, r1
     5d2:	b1 05       	cpc	r27, r1
     5d4:	61 f4       	brne	.+24     	; 0x5ee <__mulsf3+0x1ca>
     5d6:	47 fd       	sbrc	r20, 7
     5d8:	0a c0       	rjmp	.+20     	; 0x5ee <__mulsf3+0x1ca>
     5da:	e1 14       	cp	r14, r1
     5dc:	f1 04       	cpc	r15, r1
     5de:	01 05       	cpc	r16, r1
     5e0:	11 05       	cpc	r17, r1
     5e2:	29 f0       	breq	.+10     	; 0x5ee <__mulsf3+0x1ca>
     5e4:	40 5c       	subi	r20, 0xC0	; 192
     5e6:	5f 4f       	sbci	r21, 0xFF	; 255
     5e8:	6f 4f       	sbci	r22, 0xFF	; 255
     5ea:	7f 4f       	sbci	r23, 0xFF	; 255
     5ec:	40 78       	andi	r20, 0x80	; 128
     5ee:	1a 8e       	std	Y+26, r1	; 0x1a
     5f0:	fe 17       	cp	r31, r30
     5f2:	11 f0       	breq	.+4      	; 0x5f8 <__mulsf3+0x1d4>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	8a 8f       	std	Y+26, r24	; 0x1a
     5f8:	4d 8f       	std	Y+29, r20	; 0x1d
     5fa:	5e 8f       	std	Y+30, r21	; 0x1e
     5fc:	6f 8f       	std	Y+31, r22	; 0x1f
     5fe:	78 a3       	std	Y+32, r23	; 0x20
     600:	83 e0       	ldi	r24, 0x03	; 3
     602:	89 8f       	std	Y+25, r24	; 0x19
     604:	ce 01       	movw	r24, r28
     606:	49 96       	adiw	r24, 0x19	; 25
     608:	87 d1       	rcall	.+782    	; 0x918 <__pack_f>
     60a:	a0 96       	adiw	r28, 0x20	; 32
     60c:	e2 e1       	ldi	r30, 0x12	; 18
     60e:	0c 94 54 13 	jmp	0x26a8	; 0x26a8 <__epilogue_restores__>

00000612 <__divsf3>:
     612:	a8 e1       	ldi	r26, 0x18	; 24
     614:	b0 e0       	ldi	r27, 0x00	; 0
     616:	ef e0       	ldi	r30, 0x0F	; 15
     618:	f3 e0       	ldi	r31, 0x03	; 3
     61a:	0c 94 40 13 	jmp	0x2680	; 0x2680 <__prologue_saves__+0x10>
     61e:	69 83       	std	Y+1, r22	; 0x01
     620:	7a 83       	std	Y+2, r23	; 0x02
     622:	8b 83       	std	Y+3, r24	; 0x03
     624:	9c 83       	std	Y+4, r25	; 0x04
     626:	2d 83       	std	Y+5, r18	; 0x05
     628:	3e 83       	std	Y+6, r19	; 0x06
     62a:	4f 83       	std	Y+7, r20	; 0x07
     62c:	58 87       	std	Y+8, r21	; 0x08
     62e:	b9 e0       	ldi	r27, 0x09	; 9
     630:	eb 2e       	mov	r14, r27
     632:	f1 2c       	mov	r15, r1
     634:	ec 0e       	add	r14, r28
     636:	fd 1e       	adc	r15, r29
     638:	ce 01       	movw	r24, r28
     63a:	01 96       	adiw	r24, 0x01	; 1
     63c:	b7 01       	movw	r22, r14
     63e:	41 d2       	rcall	.+1154   	; 0xac2 <__unpack_f>
     640:	8e 01       	movw	r16, r28
     642:	0f 5e       	subi	r16, 0xEF	; 239
     644:	1f 4f       	sbci	r17, 0xFF	; 255
     646:	ce 01       	movw	r24, r28
     648:	05 96       	adiw	r24, 0x05	; 5
     64a:	b8 01       	movw	r22, r16
     64c:	3a d2       	rcall	.+1140   	; 0xac2 <__unpack_f>
     64e:	29 85       	ldd	r18, Y+9	; 0x09
     650:	22 30       	cpi	r18, 0x02	; 2
     652:	08 f4       	brcc	.+2      	; 0x656 <__divsf3+0x44>
     654:	7e c0       	rjmp	.+252    	; 0x752 <__divsf3+0x140>
     656:	39 89       	ldd	r19, Y+17	; 0x11
     658:	32 30       	cpi	r19, 0x02	; 2
     65a:	10 f4       	brcc	.+4      	; 0x660 <__divsf3+0x4e>
     65c:	b8 01       	movw	r22, r16
     65e:	7c c0       	rjmp	.+248    	; 0x758 <__divsf3+0x146>
     660:	8a 85       	ldd	r24, Y+10	; 0x0a
     662:	9a 89       	ldd	r25, Y+18	; 0x12
     664:	89 27       	eor	r24, r25
     666:	8a 87       	std	Y+10, r24	; 0x0a
     668:	24 30       	cpi	r18, 0x04	; 4
     66a:	11 f0       	breq	.+4      	; 0x670 <__divsf3+0x5e>
     66c:	22 30       	cpi	r18, 0x02	; 2
     66e:	31 f4       	brne	.+12     	; 0x67c <__divsf3+0x6a>
     670:	23 17       	cp	r18, r19
     672:	09 f0       	breq	.+2      	; 0x676 <__divsf3+0x64>
     674:	6e c0       	rjmp	.+220    	; 0x752 <__divsf3+0x140>
     676:	67 e7       	ldi	r22, 0x77	; 119
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	6e c0       	rjmp	.+220    	; 0x758 <__divsf3+0x146>
     67c:	34 30       	cpi	r19, 0x04	; 4
     67e:	39 f4       	brne	.+14     	; 0x68e <__divsf3+0x7c>
     680:	1d 86       	std	Y+13, r1	; 0x0d
     682:	1e 86       	std	Y+14, r1	; 0x0e
     684:	1f 86       	std	Y+15, r1	; 0x0f
     686:	18 8a       	std	Y+16, r1	; 0x10
     688:	1c 86       	std	Y+12, r1	; 0x0c
     68a:	1b 86       	std	Y+11, r1	; 0x0b
     68c:	04 c0       	rjmp	.+8      	; 0x696 <__divsf3+0x84>
     68e:	32 30       	cpi	r19, 0x02	; 2
     690:	21 f4       	brne	.+8      	; 0x69a <__divsf3+0x88>
     692:	84 e0       	ldi	r24, 0x04	; 4
     694:	89 87       	std	Y+9, r24	; 0x09
     696:	b7 01       	movw	r22, r14
     698:	5f c0       	rjmp	.+190    	; 0x758 <__divsf3+0x146>
     69a:	2b 85       	ldd	r18, Y+11	; 0x0b
     69c:	3c 85       	ldd	r19, Y+12	; 0x0c
     69e:	8b 89       	ldd	r24, Y+19	; 0x13
     6a0:	9c 89       	ldd	r25, Y+20	; 0x14
     6a2:	28 1b       	sub	r18, r24
     6a4:	39 0b       	sbc	r19, r25
     6a6:	3c 87       	std	Y+12, r19	; 0x0c
     6a8:	2b 87       	std	Y+11, r18	; 0x0b
     6aa:	ed 84       	ldd	r14, Y+13	; 0x0d
     6ac:	fe 84       	ldd	r15, Y+14	; 0x0e
     6ae:	0f 85       	ldd	r16, Y+15	; 0x0f
     6b0:	18 89       	ldd	r17, Y+16	; 0x10
     6b2:	ad 88       	ldd	r10, Y+21	; 0x15
     6b4:	be 88       	ldd	r11, Y+22	; 0x16
     6b6:	cf 88       	ldd	r12, Y+23	; 0x17
     6b8:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ba:	ea 14       	cp	r14, r10
     6bc:	fb 04       	cpc	r15, r11
     6be:	0c 05       	cpc	r16, r12
     6c0:	1d 05       	cpc	r17, r13
     6c2:	40 f4       	brcc	.+16     	; 0x6d4 <__divsf3+0xc2>
     6c4:	ee 0c       	add	r14, r14
     6c6:	ff 1c       	adc	r15, r15
     6c8:	00 1f       	adc	r16, r16
     6ca:	11 1f       	adc	r17, r17
     6cc:	21 50       	subi	r18, 0x01	; 1
     6ce:	30 40       	sbci	r19, 0x00	; 0
     6d0:	3c 87       	std	Y+12, r19	; 0x0c
     6d2:	2b 87       	std	Y+11, r18	; 0x0b
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	80 e0       	ldi	r24, 0x00	; 0
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	a0 e0       	ldi	r26, 0x00	; 0
     6e2:	b0 e4       	ldi	r27, 0x40	; 64
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	ea 14       	cp	r14, r10
     6ea:	fb 04       	cpc	r15, r11
     6ec:	0c 05       	cpc	r16, r12
     6ee:	1d 05       	cpc	r17, r13
     6f0:	40 f0       	brcs	.+16     	; 0x702 <__divsf3+0xf0>
     6f2:	28 2b       	or	r18, r24
     6f4:	39 2b       	or	r19, r25
     6f6:	4a 2b       	or	r20, r26
     6f8:	5b 2b       	or	r21, r27
     6fa:	ea 18       	sub	r14, r10
     6fc:	fb 08       	sbc	r15, r11
     6fe:	0c 09       	sbc	r16, r12
     700:	1d 09       	sbc	r17, r13
     702:	b6 95       	lsr	r27
     704:	a7 95       	ror	r26
     706:	97 95       	ror	r25
     708:	87 95       	ror	r24
     70a:	ee 0c       	add	r14, r14
     70c:	ff 1c       	adc	r15, r15
     70e:	00 1f       	adc	r16, r16
     710:	11 1f       	adc	r17, r17
     712:	6f 5f       	subi	r22, 0xFF	; 255
     714:	7f 4f       	sbci	r23, 0xFF	; 255
     716:	6f 31       	cpi	r22, 0x1F	; 31
     718:	71 05       	cpc	r23, r1
     71a:	31 f7       	brne	.-52     	; 0x6e8 <__divsf3+0xd6>
     71c:	da 01       	movw	r26, r20
     71e:	c9 01       	movw	r24, r18
     720:	8f 77       	andi	r24, 0x7F	; 127
     722:	90 70       	andi	r25, 0x00	; 0
     724:	a0 70       	andi	r26, 0x00	; 0
     726:	b0 70       	andi	r27, 0x00	; 0
     728:	80 34       	cpi	r24, 0x40	; 64
     72a:	91 05       	cpc	r25, r1
     72c:	a1 05       	cpc	r26, r1
     72e:	b1 05       	cpc	r27, r1
     730:	61 f4       	brne	.+24     	; 0x74a <__divsf3+0x138>
     732:	27 fd       	sbrc	r18, 7
     734:	0a c0       	rjmp	.+20     	; 0x74a <__divsf3+0x138>
     736:	e1 14       	cp	r14, r1
     738:	f1 04       	cpc	r15, r1
     73a:	01 05       	cpc	r16, r1
     73c:	11 05       	cpc	r17, r1
     73e:	29 f0       	breq	.+10     	; 0x74a <__divsf3+0x138>
     740:	20 5c       	subi	r18, 0xC0	; 192
     742:	3f 4f       	sbci	r19, 0xFF	; 255
     744:	4f 4f       	sbci	r20, 0xFF	; 255
     746:	5f 4f       	sbci	r21, 0xFF	; 255
     748:	20 78       	andi	r18, 0x80	; 128
     74a:	2d 87       	std	Y+13, r18	; 0x0d
     74c:	3e 87       	std	Y+14, r19	; 0x0e
     74e:	4f 87       	std	Y+15, r20	; 0x0f
     750:	58 8b       	std	Y+16, r21	; 0x10
     752:	be 01       	movw	r22, r28
     754:	67 5f       	subi	r22, 0xF7	; 247
     756:	7f 4f       	sbci	r23, 0xFF	; 255
     758:	cb 01       	movw	r24, r22
     75a:	de d0       	rcall	.+444    	; 0x918 <__pack_f>
     75c:	68 96       	adiw	r28, 0x18	; 24
     75e:	ea e0       	ldi	r30, 0x0A	; 10
     760:	0c 94 5c 13 	jmp	0x26b8	; 0x26b8 <__epilogue_restores__+0x10>

00000764 <__gtsf2>:
     764:	a8 e1       	ldi	r26, 0x18	; 24
     766:	b0 e0       	ldi	r27, 0x00	; 0
     768:	e8 eb       	ldi	r30, 0xB8	; 184
     76a:	f3 e0       	ldi	r31, 0x03	; 3
     76c:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__prologue_saves__+0x18>
     770:	69 83       	std	Y+1, r22	; 0x01
     772:	7a 83       	std	Y+2, r23	; 0x02
     774:	8b 83       	std	Y+3, r24	; 0x03
     776:	9c 83       	std	Y+4, r25	; 0x04
     778:	2d 83       	std	Y+5, r18	; 0x05
     77a:	3e 83       	std	Y+6, r19	; 0x06
     77c:	4f 83       	std	Y+7, r20	; 0x07
     77e:	58 87       	std	Y+8, r21	; 0x08
     780:	89 e0       	ldi	r24, 0x09	; 9
     782:	e8 2e       	mov	r14, r24
     784:	f1 2c       	mov	r15, r1
     786:	ec 0e       	add	r14, r28
     788:	fd 1e       	adc	r15, r29
     78a:	ce 01       	movw	r24, r28
     78c:	01 96       	adiw	r24, 0x01	; 1
     78e:	b7 01       	movw	r22, r14
     790:	98 d1       	rcall	.+816    	; 0xac2 <__unpack_f>
     792:	8e 01       	movw	r16, r28
     794:	0f 5e       	subi	r16, 0xEF	; 239
     796:	1f 4f       	sbci	r17, 0xFF	; 255
     798:	ce 01       	movw	r24, r28
     79a:	05 96       	adiw	r24, 0x05	; 5
     79c:	b8 01       	movw	r22, r16
     79e:	91 d1       	rcall	.+802    	; 0xac2 <__unpack_f>
     7a0:	89 85       	ldd	r24, Y+9	; 0x09
     7a2:	82 30       	cpi	r24, 0x02	; 2
     7a4:	38 f0       	brcs	.+14     	; 0x7b4 <__gtsf2+0x50>
     7a6:	89 89       	ldd	r24, Y+17	; 0x11
     7a8:	82 30       	cpi	r24, 0x02	; 2
     7aa:	20 f0       	brcs	.+8      	; 0x7b4 <__gtsf2+0x50>
     7ac:	c7 01       	movw	r24, r14
     7ae:	b8 01       	movw	r22, r16
     7b0:	00 d2       	rcall	.+1024   	; 0xbb2 <__fpcmp_parts_f>
     7b2:	01 c0       	rjmp	.+2      	; 0x7b6 <__gtsf2+0x52>
     7b4:	8f ef       	ldi	r24, 0xFF	; 255
     7b6:	68 96       	adiw	r28, 0x18	; 24
     7b8:	e6 e0       	ldi	r30, 0x06	; 6
     7ba:	0c 94 60 13 	jmp	0x26c0	; 0x26c0 <__epilogue_restores__+0x18>

000007be <__gesf2>:
     7be:	a8 e1       	ldi	r26, 0x18	; 24
     7c0:	b0 e0       	ldi	r27, 0x00	; 0
     7c2:	e5 ee       	ldi	r30, 0xE5	; 229
     7c4:	f3 e0       	ldi	r31, 0x03	; 3
     7c6:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__prologue_saves__+0x18>
     7ca:	69 83       	std	Y+1, r22	; 0x01
     7cc:	7a 83       	std	Y+2, r23	; 0x02
     7ce:	8b 83       	std	Y+3, r24	; 0x03
     7d0:	9c 83       	std	Y+4, r25	; 0x04
     7d2:	2d 83       	std	Y+5, r18	; 0x05
     7d4:	3e 83       	std	Y+6, r19	; 0x06
     7d6:	4f 83       	std	Y+7, r20	; 0x07
     7d8:	58 87       	std	Y+8, r21	; 0x08
     7da:	89 e0       	ldi	r24, 0x09	; 9
     7dc:	e8 2e       	mov	r14, r24
     7de:	f1 2c       	mov	r15, r1
     7e0:	ec 0e       	add	r14, r28
     7e2:	fd 1e       	adc	r15, r29
     7e4:	ce 01       	movw	r24, r28
     7e6:	01 96       	adiw	r24, 0x01	; 1
     7e8:	b7 01       	movw	r22, r14
     7ea:	6b d1       	rcall	.+726    	; 0xac2 <__unpack_f>
     7ec:	8e 01       	movw	r16, r28
     7ee:	0f 5e       	subi	r16, 0xEF	; 239
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	ce 01       	movw	r24, r28
     7f4:	05 96       	adiw	r24, 0x05	; 5
     7f6:	b8 01       	movw	r22, r16
     7f8:	64 d1       	rcall	.+712    	; 0xac2 <__unpack_f>
     7fa:	89 85       	ldd	r24, Y+9	; 0x09
     7fc:	82 30       	cpi	r24, 0x02	; 2
     7fe:	38 f0       	brcs	.+14     	; 0x80e <__gesf2+0x50>
     800:	89 89       	ldd	r24, Y+17	; 0x11
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	20 f0       	brcs	.+8      	; 0x80e <__gesf2+0x50>
     806:	c7 01       	movw	r24, r14
     808:	b8 01       	movw	r22, r16
     80a:	d3 d1       	rcall	.+934    	; 0xbb2 <__fpcmp_parts_f>
     80c:	01 c0       	rjmp	.+2      	; 0x810 <__gesf2+0x52>
     80e:	8f ef       	ldi	r24, 0xFF	; 255
     810:	68 96       	adiw	r28, 0x18	; 24
     812:	e6 e0       	ldi	r30, 0x06	; 6
     814:	0c 94 60 13 	jmp	0x26c0	; 0x26c0 <__epilogue_restores__+0x18>

00000818 <__ltsf2>:
     818:	a8 e1       	ldi	r26, 0x18	; 24
     81a:	b0 e0       	ldi	r27, 0x00	; 0
     81c:	e2 e1       	ldi	r30, 0x12	; 18
     81e:	f4 e0       	ldi	r31, 0x04	; 4
     820:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__prologue_saves__+0x18>
     824:	69 83       	std	Y+1, r22	; 0x01
     826:	7a 83       	std	Y+2, r23	; 0x02
     828:	8b 83       	std	Y+3, r24	; 0x03
     82a:	9c 83       	std	Y+4, r25	; 0x04
     82c:	2d 83       	std	Y+5, r18	; 0x05
     82e:	3e 83       	std	Y+6, r19	; 0x06
     830:	4f 83       	std	Y+7, r20	; 0x07
     832:	58 87       	std	Y+8, r21	; 0x08
     834:	89 e0       	ldi	r24, 0x09	; 9
     836:	e8 2e       	mov	r14, r24
     838:	f1 2c       	mov	r15, r1
     83a:	ec 0e       	add	r14, r28
     83c:	fd 1e       	adc	r15, r29
     83e:	ce 01       	movw	r24, r28
     840:	01 96       	adiw	r24, 0x01	; 1
     842:	b7 01       	movw	r22, r14
     844:	3e d1       	rcall	.+636    	; 0xac2 <__unpack_f>
     846:	8e 01       	movw	r16, r28
     848:	0f 5e       	subi	r16, 0xEF	; 239
     84a:	1f 4f       	sbci	r17, 0xFF	; 255
     84c:	ce 01       	movw	r24, r28
     84e:	05 96       	adiw	r24, 0x05	; 5
     850:	b8 01       	movw	r22, r16
     852:	37 d1       	rcall	.+622    	; 0xac2 <__unpack_f>
     854:	89 85       	ldd	r24, Y+9	; 0x09
     856:	82 30       	cpi	r24, 0x02	; 2
     858:	38 f0       	brcs	.+14     	; 0x868 <__stack+0x9>
     85a:	89 89       	ldd	r24, Y+17	; 0x11
     85c:	82 30       	cpi	r24, 0x02	; 2
     85e:	20 f0       	brcs	.+8      	; 0x868 <__stack+0x9>
     860:	c7 01       	movw	r24, r14
     862:	b8 01       	movw	r22, r16
     864:	a6 d1       	rcall	.+844    	; 0xbb2 <__fpcmp_parts_f>
     866:	01 c0       	rjmp	.+2      	; 0x86a <__stack+0xb>
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	68 96       	adiw	r28, 0x18	; 24
     86c:	e6 e0       	ldi	r30, 0x06	; 6
     86e:	0c 94 60 13 	jmp	0x26c0	; 0x26c0 <__epilogue_restores__+0x18>

00000872 <__fixsfsi>:
     872:	ac e0       	ldi	r26, 0x0C	; 12
     874:	b0 e0       	ldi	r27, 0x00	; 0
     876:	ef e3       	ldi	r30, 0x3F	; 63
     878:	f4 e0       	ldi	r31, 0x04	; 4
     87a:	0c 94 48 13 	jmp	0x2690	; 0x2690 <__prologue_saves__+0x20>
     87e:	69 83       	std	Y+1, r22	; 0x01
     880:	7a 83       	std	Y+2, r23	; 0x02
     882:	8b 83       	std	Y+3, r24	; 0x03
     884:	9c 83       	std	Y+4, r25	; 0x04
     886:	ce 01       	movw	r24, r28
     888:	01 96       	adiw	r24, 0x01	; 1
     88a:	be 01       	movw	r22, r28
     88c:	6b 5f       	subi	r22, 0xFB	; 251
     88e:	7f 4f       	sbci	r23, 0xFF	; 255
     890:	18 d1       	rcall	.+560    	; 0xac2 <__unpack_f>
     892:	8d 81       	ldd	r24, Y+5	; 0x05
     894:	82 30       	cpi	r24, 0x02	; 2
     896:	61 f1       	breq	.+88     	; 0x8f0 <__fixsfsi+0x7e>
     898:	82 30       	cpi	r24, 0x02	; 2
     89a:	50 f1       	brcs	.+84     	; 0x8f0 <__fixsfsi+0x7e>
     89c:	84 30       	cpi	r24, 0x04	; 4
     89e:	21 f4       	brne	.+8      	; 0x8a8 <__fixsfsi+0x36>
     8a0:	8e 81       	ldd	r24, Y+6	; 0x06
     8a2:	88 23       	and	r24, r24
     8a4:	51 f1       	breq	.+84     	; 0x8fa <__fixsfsi+0x88>
     8a6:	2e c0       	rjmp	.+92     	; 0x904 <__fixsfsi+0x92>
     8a8:	2f 81       	ldd	r18, Y+7	; 0x07
     8aa:	38 85       	ldd	r19, Y+8	; 0x08
     8ac:	37 fd       	sbrc	r19, 7
     8ae:	20 c0       	rjmp	.+64     	; 0x8f0 <__fixsfsi+0x7e>
     8b0:	6e 81       	ldd	r22, Y+6	; 0x06
     8b2:	2f 31       	cpi	r18, 0x1F	; 31
     8b4:	31 05       	cpc	r19, r1
     8b6:	1c f0       	brlt	.+6      	; 0x8be <__fixsfsi+0x4c>
     8b8:	66 23       	and	r22, r22
     8ba:	f9 f0       	breq	.+62     	; 0x8fa <__fixsfsi+0x88>
     8bc:	23 c0       	rjmp	.+70     	; 0x904 <__fixsfsi+0x92>
     8be:	8e e1       	ldi	r24, 0x1E	; 30
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	82 1b       	sub	r24, r18
     8c4:	93 0b       	sbc	r25, r19
     8c6:	29 85       	ldd	r18, Y+9	; 0x09
     8c8:	3a 85       	ldd	r19, Y+10	; 0x0a
     8ca:	4b 85       	ldd	r20, Y+11	; 0x0b
     8cc:	5c 85       	ldd	r21, Y+12	; 0x0c
     8ce:	04 c0       	rjmp	.+8      	; 0x8d8 <__fixsfsi+0x66>
     8d0:	56 95       	lsr	r21
     8d2:	47 95       	ror	r20
     8d4:	37 95       	ror	r19
     8d6:	27 95       	ror	r18
     8d8:	8a 95       	dec	r24
     8da:	d2 f7       	brpl	.-12     	; 0x8d0 <__fixsfsi+0x5e>
     8dc:	66 23       	and	r22, r22
     8de:	b1 f0       	breq	.+44     	; 0x90c <__fixsfsi+0x9a>
     8e0:	50 95       	com	r21
     8e2:	40 95       	com	r20
     8e4:	30 95       	com	r19
     8e6:	21 95       	neg	r18
     8e8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ea:	4f 4f       	sbci	r20, 0xFF	; 255
     8ec:	5f 4f       	sbci	r21, 0xFF	; 255
     8ee:	0e c0       	rjmp	.+28     	; 0x90c <__fixsfsi+0x9a>
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	09 c0       	rjmp	.+18     	; 0x90c <__fixsfsi+0x9a>
     8fa:	2f ef       	ldi	r18, 0xFF	; 255
     8fc:	3f ef       	ldi	r19, 0xFF	; 255
     8fe:	4f ef       	ldi	r20, 0xFF	; 255
     900:	5f e7       	ldi	r21, 0x7F	; 127
     902:	04 c0       	rjmp	.+8      	; 0x90c <__fixsfsi+0x9a>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	50 e8       	ldi	r21, 0x80	; 128
     90c:	b9 01       	movw	r22, r18
     90e:	ca 01       	movw	r24, r20
     910:	2c 96       	adiw	r28, 0x0c	; 12
     912:	e2 e0       	ldi	r30, 0x02	; 2
     914:	0c 94 64 13 	jmp	0x26c8	; 0x26c8 <__epilogue_restores__+0x20>

00000918 <__pack_f>:
     918:	df 92       	push	r13
     91a:	ef 92       	push	r14
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	fc 01       	movw	r30, r24
     924:	e4 80       	ldd	r14, Z+4	; 0x04
     926:	f5 80       	ldd	r15, Z+5	; 0x05
     928:	06 81       	ldd	r16, Z+6	; 0x06
     92a:	17 81       	ldd	r17, Z+7	; 0x07
     92c:	d1 80       	ldd	r13, Z+1	; 0x01
     92e:	80 81       	ld	r24, Z
     930:	82 30       	cpi	r24, 0x02	; 2
     932:	48 f4       	brcc	.+18     	; 0x946 <__pack_f+0x2e>
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e1       	ldi	r26, 0x10	; 16
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	e8 2a       	or	r14, r24
     93e:	f9 2a       	or	r15, r25
     940:	0a 2b       	or	r16, r26
     942:	1b 2b       	or	r17, r27
     944:	a5 c0       	rjmp	.+330    	; 0xa90 <__pack_f+0x178>
     946:	84 30       	cpi	r24, 0x04	; 4
     948:	09 f4       	brne	.+2      	; 0x94c <__pack_f+0x34>
     94a:	9f c0       	rjmp	.+318    	; 0xa8a <__pack_f+0x172>
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	21 f4       	brne	.+8      	; 0x958 <__pack_f+0x40>
     950:	ee 24       	eor	r14, r14
     952:	ff 24       	eor	r15, r15
     954:	87 01       	movw	r16, r14
     956:	05 c0       	rjmp	.+10     	; 0x962 <__pack_f+0x4a>
     958:	e1 14       	cp	r14, r1
     95a:	f1 04       	cpc	r15, r1
     95c:	01 05       	cpc	r16, r1
     95e:	11 05       	cpc	r17, r1
     960:	19 f4       	brne	.+6      	; 0x968 <__pack_f+0x50>
     962:	e0 e0       	ldi	r30, 0x00	; 0
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	96 c0       	rjmp	.+300    	; 0xa94 <__pack_f+0x17c>
     968:	62 81       	ldd	r22, Z+2	; 0x02
     96a:	73 81       	ldd	r23, Z+3	; 0x03
     96c:	9f ef       	ldi	r25, 0xFF	; 255
     96e:	62 38       	cpi	r22, 0x82	; 130
     970:	79 07       	cpc	r23, r25
     972:	0c f0       	brlt	.+2      	; 0x976 <__pack_f+0x5e>
     974:	5b c0       	rjmp	.+182    	; 0xa2c <__pack_f+0x114>
     976:	22 e8       	ldi	r18, 0x82	; 130
     978:	3f ef       	ldi	r19, 0xFF	; 255
     97a:	26 1b       	sub	r18, r22
     97c:	37 0b       	sbc	r19, r23
     97e:	2a 31       	cpi	r18, 0x1A	; 26
     980:	31 05       	cpc	r19, r1
     982:	2c f0       	brlt	.+10     	; 0x98e <__pack_f+0x76>
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	40 e0       	ldi	r20, 0x00	; 0
     98a:	50 e0       	ldi	r21, 0x00	; 0
     98c:	2a c0       	rjmp	.+84     	; 0x9e2 <__pack_f+0xca>
     98e:	b8 01       	movw	r22, r16
     990:	a7 01       	movw	r20, r14
     992:	02 2e       	mov	r0, r18
     994:	04 c0       	rjmp	.+8      	; 0x99e <__pack_f+0x86>
     996:	76 95       	lsr	r23
     998:	67 95       	ror	r22
     99a:	57 95       	ror	r21
     99c:	47 95       	ror	r20
     99e:	0a 94       	dec	r0
     9a0:	d2 f7       	brpl	.-12     	; 0x996 <__pack_f+0x7e>
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	a0 e0       	ldi	r26, 0x00	; 0
     9a8:	b0 e0       	ldi	r27, 0x00	; 0
     9aa:	04 c0       	rjmp	.+8      	; 0x9b4 <__pack_f+0x9c>
     9ac:	88 0f       	add	r24, r24
     9ae:	99 1f       	adc	r25, r25
     9b0:	aa 1f       	adc	r26, r26
     9b2:	bb 1f       	adc	r27, r27
     9b4:	2a 95       	dec	r18
     9b6:	d2 f7       	brpl	.-12     	; 0x9ac <__pack_f+0x94>
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	a1 09       	sbc	r26, r1
     9bc:	b1 09       	sbc	r27, r1
     9be:	8e 21       	and	r24, r14
     9c0:	9f 21       	and	r25, r15
     9c2:	a0 23       	and	r26, r16
     9c4:	b1 23       	and	r27, r17
     9c6:	00 97       	sbiw	r24, 0x00	; 0
     9c8:	a1 05       	cpc	r26, r1
     9ca:	b1 05       	cpc	r27, r1
     9cc:	21 f0       	breq	.+8      	; 0x9d6 <__pack_f+0xbe>
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	9a 01       	movw	r18, r20
     9d8:	ab 01       	movw	r20, r22
     9da:	28 2b       	or	r18, r24
     9dc:	39 2b       	or	r19, r25
     9de:	4a 2b       	or	r20, r26
     9e0:	5b 2b       	or	r21, r27
     9e2:	da 01       	movw	r26, r20
     9e4:	c9 01       	movw	r24, r18
     9e6:	8f 77       	andi	r24, 0x7F	; 127
     9e8:	90 70       	andi	r25, 0x00	; 0
     9ea:	a0 70       	andi	r26, 0x00	; 0
     9ec:	b0 70       	andi	r27, 0x00	; 0
     9ee:	80 34       	cpi	r24, 0x40	; 64
     9f0:	91 05       	cpc	r25, r1
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	39 f4       	brne	.+14     	; 0xa06 <__pack_f+0xee>
     9f8:	27 ff       	sbrs	r18, 7
     9fa:	09 c0       	rjmp	.+18     	; 0xa0e <__pack_f+0xf6>
     9fc:	20 5c       	subi	r18, 0xC0	; 192
     9fe:	3f 4f       	sbci	r19, 0xFF	; 255
     a00:	4f 4f       	sbci	r20, 0xFF	; 255
     a02:	5f 4f       	sbci	r21, 0xFF	; 255
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__pack_f+0xf6>
     a06:	21 5c       	subi	r18, 0xC1	; 193
     a08:	3f 4f       	sbci	r19, 0xFF	; 255
     a0a:	4f 4f       	sbci	r20, 0xFF	; 255
     a0c:	5f 4f       	sbci	r21, 0xFF	; 255
     a0e:	e0 e0       	ldi	r30, 0x00	; 0
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	20 30       	cpi	r18, 0x00	; 0
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	3a 07       	cpc	r19, r26
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	4a 07       	cpc	r20, r26
     a1c:	a0 e4       	ldi	r26, 0x40	; 64
     a1e:	5a 07       	cpc	r21, r26
     a20:	10 f0       	brcs	.+4      	; 0xa26 <__pack_f+0x10e>
     a22:	e1 e0       	ldi	r30, 0x01	; 1
     a24:	f0 e0       	ldi	r31, 0x00	; 0
     a26:	79 01       	movw	r14, r18
     a28:	8a 01       	movw	r16, r20
     a2a:	27 c0       	rjmp	.+78     	; 0xa7a <__pack_f+0x162>
     a2c:	60 38       	cpi	r22, 0x80	; 128
     a2e:	71 05       	cpc	r23, r1
     a30:	64 f5       	brge	.+88     	; 0xa8a <__pack_f+0x172>
     a32:	fb 01       	movw	r30, r22
     a34:	e1 58       	subi	r30, 0x81	; 129
     a36:	ff 4f       	sbci	r31, 0xFF	; 255
     a38:	d8 01       	movw	r26, r16
     a3a:	c7 01       	movw	r24, r14
     a3c:	8f 77       	andi	r24, 0x7F	; 127
     a3e:	90 70       	andi	r25, 0x00	; 0
     a40:	a0 70       	andi	r26, 0x00	; 0
     a42:	b0 70       	andi	r27, 0x00	; 0
     a44:	80 34       	cpi	r24, 0x40	; 64
     a46:	91 05       	cpc	r25, r1
     a48:	a1 05       	cpc	r26, r1
     a4a:	b1 05       	cpc	r27, r1
     a4c:	39 f4       	brne	.+14     	; 0xa5c <__pack_f+0x144>
     a4e:	e7 fe       	sbrs	r14, 7
     a50:	0d c0       	rjmp	.+26     	; 0xa6c <__pack_f+0x154>
     a52:	80 e4       	ldi	r24, 0x40	; 64
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	a0 e0       	ldi	r26, 0x00	; 0
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	04 c0       	rjmp	.+8      	; 0xa64 <__pack_f+0x14c>
     a5c:	8f e3       	ldi	r24, 0x3F	; 63
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	a0 e0       	ldi	r26, 0x00	; 0
     a62:	b0 e0       	ldi	r27, 0x00	; 0
     a64:	e8 0e       	add	r14, r24
     a66:	f9 1e       	adc	r15, r25
     a68:	0a 1f       	adc	r16, r26
     a6a:	1b 1f       	adc	r17, r27
     a6c:	17 ff       	sbrs	r17, 7
     a6e:	05 c0       	rjmp	.+10     	; 0xa7a <__pack_f+0x162>
     a70:	16 95       	lsr	r17
     a72:	07 95       	ror	r16
     a74:	f7 94       	ror	r15
     a76:	e7 94       	ror	r14
     a78:	31 96       	adiw	r30, 0x01	; 1
     a7a:	87 e0       	ldi	r24, 0x07	; 7
     a7c:	16 95       	lsr	r17
     a7e:	07 95       	ror	r16
     a80:	f7 94       	ror	r15
     a82:	e7 94       	ror	r14
     a84:	8a 95       	dec	r24
     a86:	d1 f7       	brne	.-12     	; 0xa7c <__pack_f+0x164>
     a88:	05 c0       	rjmp	.+10     	; 0xa94 <__pack_f+0x17c>
     a8a:	ee 24       	eor	r14, r14
     a8c:	ff 24       	eor	r15, r15
     a8e:	87 01       	movw	r16, r14
     a90:	ef ef       	ldi	r30, 0xFF	; 255
     a92:	f0 e0       	ldi	r31, 0x00	; 0
     a94:	6e 2f       	mov	r22, r30
     a96:	67 95       	ror	r22
     a98:	66 27       	eor	r22, r22
     a9a:	67 95       	ror	r22
     a9c:	90 2f       	mov	r25, r16
     a9e:	9f 77       	andi	r25, 0x7F	; 127
     aa0:	d7 94       	ror	r13
     aa2:	dd 24       	eor	r13, r13
     aa4:	d7 94       	ror	r13
     aa6:	8e 2f       	mov	r24, r30
     aa8:	86 95       	lsr	r24
     aaa:	49 2f       	mov	r20, r25
     aac:	46 2b       	or	r20, r22
     aae:	58 2f       	mov	r21, r24
     ab0:	5d 29       	or	r21, r13
     ab2:	b7 01       	movw	r22, r14
     ab4:	ca 01       	movw	r24, r20
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	ff 90       	pop	r15
     abc:	ef 90       	pop	r14
     abe:	df 90       	pop	r13
     ac0:	08 95       	ret

00000ac2 <__unpack_f>:
     ac2:	fc 01       	movw	r30, r24
     ac4:	db 01       	movw	r26, r22
     ac6:	40 81       	ld	r20, Z
     ac8:	51 81       	ldd	r21, Z+1	; 0x01
     aca:	22 81       	ldd	r18, Z+2	; 0x02
     acc:	62 2f       	mov	r22, r18
     ace:	6f 77       	andi	r22, 0x7F	; 127
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	22 1f       	adc	r18, r18
     ad4:	22 27       	eor	r18, r18
     ad6:	22 1f       	adc	r18, r18
     ad8:	93 81       	ldd	r25, Z+3	; 0x03
     ada:	89 2f       	mov	r24, r25
     adc:	88 0f       	add	r24, r24
     ade:	82 2b       	or	r24, r18
     ae0:	28 2f       	mov	r18, r24
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	99 1f       	adc	r25, r25
     ae6:	99 27       	eor	r25, r25
     ae8:	99 1f       	adc	r25, r25
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	9c 93       	st	X, r25
     aee:	11 97       	sbiw	r26, 0x01	; 1
     af0:	21 15       	cp	r18, r1
     af2:	31 05       	cpc	r19, r1
     af4:	a9 f5       	brne	.+106    	; 0xb60 <__unpack_f+0x9e>
     af6:	41 15       	cp	r20, r1
     af8:	51 05       	cpc	r21, r1
     afa:	61 05       	cpc	r22, r1
     afc:	71 05       	cpc	r23, r1
     afe:	11 f4       	brne	.+4      	; 0xb04 <__unpack_f+0x42>
     b00:	82 e0       	ldi	r24, 0x02	; 2
     b02:	37 c0       	rjmp	.+110    	; 0xb72 <__unpack_f+0xb0>
     b04:	82 e8       	ldi	r24, 0x82	; 130
     b06:	9f ef       	ldi	r25, 0xFF	; 255
     b08:	13 96       	adiw	r26, 0x03	; 3
     b0a:	9c 93       	st	X, r25
     b0c:	8e 93       	st	-X, r24
     b0e:	12 97       	sbiw	r26, 0x02	; 2
     b10:	9a 01       	movw	r18, r20
     b12:	ab 01       	movw	r20, r22
     b14:	67 e0       	ldi	r22, 0x07	; 7
     b16:	22 0f       	add	r18, r18
     b18:	33 1f       	adc	r19, r19
     b1a:	44 1f       	adc	r20, r20
     b1c:	55 1f       	adc	r21, r21
     b1e:	6a 95       	dec	r22
     b20:	d1 f7       	brne	.-12     	; 0xb16 <__unpack_f+0x54>
     b22:	83 e0       	ldi	r24, 0x03	; 3
     b24:	8c 93       	st	X, r24
     b26:	0d c0       	rjmp	.+26     	; 0xb42 <__unpack_f+0x80>
     b28:	22 0f       	add	r18, r18
     b2a:	33 1f       	adc	r19, r19
     b2c:	44 1f       	adc	r20, r20
     b2e:	55 1f       	adc	r21, r21
     b30:	12 96       	adiw	r26, 0x02	; 2
     b32:	8d 91       	ld	r24, X+
     b34:	9c 91       	ld	r25, X
     b36:	13 97       	sbiw	r26, 0x03	; 3
     b38:	01 97       	sbiw	r24, 0x01	; 1
     b3a:	13 96       	adiw	r26, 0x03	; 3
     b3c:	9c 93       	st	X, r25
     b3e:	8e 93       	st	-X, r24
     b40:	12 97       	sbiw	r26, 0x02	; 2
     b42:	20 30       	cpi	r18, 0x00	; 0
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	38 07       	cpc	r19, r24
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	48 07       	cpc	r20, r24
     b4c:	80 e4       	ldi	r24, 0x40	; 64
     b4e:	58 07       	cpc	r21, r24
     b50:	58 f3       	brcs	.-42     	; 0xb28 <__unpack_f+0x66>
     b52:	14 96       	adiw	r26, 0x04	; 4
     b54:	2d 93       	st	X+, r18
     b56:	3d 93       	st	X+, r19
     b58:	4d 93       	st	X+, r20
     b5a:	5c 93       	st	X, r21
     b5c:	17 97       	sbiw	r26, 0x07	; 7
     b5e:	08 95       	ret
     b60:	2f 3f       	cpi	r18, 0xFF	; 255
     b62:	31 05       	cpc	r19, r1
     b64:	79 f4       	brne	.+30     	; 0xb84 <__unpack_f+0xc2>
     b66:	41 15       	cp	r20, r1
     b68:	51 05       	cpc	r21, r1
     b6a:	61 05       	cpc	r22, r1
     b6c:	71 05       	cpc	r23, r1
     b6e:	19 f4       	brne	.+6      	; 0xb76 <__unpack_f+0xb4>
     b70:	84 e0       	ldi	r24, 0x04	; 4
     b72:	8c 93       	st	X, r24
     b74:	08 95       	ret
     b76:	64 ff       	sbrs	r22, 4
     b78:	03 c0       	rjmp	.+6      	; 0xb80 <__unpack_f+0xbe>
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	8c 93       	st	X, r24
     b7e:	12 c0       	rjmp	.+36     	; 0xba4 <__unpack_f+0xe2>
     b80:	1c 92       	st	X, r1
     b82:	10 c0       	rjmp	.+32     	; 0xba4 <__unpack_f+0xe2>
     b84:	2f 57       	subi	r18, 0x7F	; 127
     b86:	30 40       	sbci	r19, 0x00	; 0
     b88:	13 96       	adiw	r26, 0x03	; 3
     b8a:	3c 93       	st	X, r19
     b8c:	2e 93       	st	-X, r18
     b8e:	12 97       	sbiw	r26, 0x02	; 2
     b90:	83 e0       	ldi	r24, 0x03	; 3
     b92:	8c 93       	st	X, r24
     b94:	87 e0       	ldi	r24, 0x07	; 7
     b96:	44 0f       	add	r20, r20
     b98:	55 1f       	adc	r21, r21
     b9a:	66 1f       	adc	r22, r22
     b9c:	77 1f       	adc	r23, r23
     b9e:	8a 95       	dec	r24
     ba0:	d1 f7       	brne	.-12     	; 0xb96 <__unpack_f+0xd4>
     ba2:	70 64       	ori	r23, 0x40	; 64
     ba4:	14 96       	adiw	r26, 0x04	; 4
     ba6:	4d 93       	st	X+, r20
     ba8:	5d 93       	st	X+, r21
     baa:	6d 93       	st	X+, r22
     bac:	7c 93       	st	X, r23
     bae:	17 97       	sbiw	r26, 0x07	; 7
     bb0:	08 95       	ret

00000bb2 <__fpcmp_parts_f>:
     bb2:	1f 93       	push	r17
     bb4:	dc 01       	movw	r26, r24
     bb6:	fb 01       	movw	r30, r22
     bb8:	9c 91       	ld	r25, X
     bba:	92 30       	cpi	r25, 0x02	; 2
     bbc:	08 f4       	brcc	.+2      	; 0xbc0 <__fpcmp_parts_f+0xe>
     bbe:	47 c0       	rjmp	.+142    	; 0xc4e <__fpcmp_parts_f+0x9c>
     bc0:	80 81       	ld	r24, Z
     bc2:	82 30       	cpi	r24, 0x02	; 2
     bc4:	08 f4       	brcc	.+2      	; 0xbc8 <__fpcmp_parts_f+0x16>
     bc6:	43 c0       	rjmp	.+134    	; 0xc4e <__fpcmp_parts_f+0x9c>
     bc8:	94 30       	cpi	r25, 0x04	; 4
     bca:	51 f4       	brne	.+20     	; 0xbe0 <__fpcmp_parts_f+0x2e>
     bcc:	11 96       	adiw	r26, 0x01	; 1
     bce:	1c 91       	ld	r17, X
     bd0:	84 30       	cpi	r24, 0x04	; 4
     bd2:	99 f5       	brne	.+102    	; 0xc3a <__fpcmp_parts_f+0x88>
     bd4:	81 81       	ldd	r24, Z+1	; 0x01
     bd6:	68 2f       	mov	r22, r24
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	61 1b       	sub	r22, r17
     bdc:	71 09       	sbc	r23, r1
     bde:	3f c0       	rjmp	.+126    	; 0xc5e <__fpcmp_parts_f+0xac>
     be0:	84 30       	cpi	r24, 0x04	; 4
     be2:	21 f0       	breq	.+8      	; 0xbec <__fpcmp_parts_f+0x3a>
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	31 f4       	brne	.+12     	; 0xbf4 <__fpcmp_parts_f+0x42>
     be8:	82 30       	cpi	r24, 0x02	; 2
     bea:	b9 f1       	breq	.+110    	; 0xc5a <__fpcmp_parts_f+0xa8>
     bec:	81 81       	ldd	r24, Z+1	; 0x01
     bee:	88 23       	and	r24, r24
     bf0:	89 f1       	breq	.+98     	; 0xc54 <__fpcmp_parts_f+0xa2>
     bf2:	2d c0       	rjmp	.+90     	; 0xc4e <__fpcmp_parts_f+0x9c>
     bf4:	11 96       	adiw	r26, 0x01	; 1
     bf6:	1c 91       	ld	r17, X
     bf8:	11 97       	sbiw	r26, 0x01	; 1
     bfa:	82 30       	cpi	r24, 0x02	; 2
     bfc:	f1 f0       	breq	.+60     	; 0xc3a <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	18 17       	cp	r17, r24
     c02:	d9 f4       	brne	.+54     	; 0xc3a <__fpcmp_parts_f+0x88>
     c04:	12 96       	adiw	r26, 0x02	; 2
     c06:	2d 91       	ld	r18, X+
     c08:	3c 91       	ld	r19, X
     c0a:	13 97       	sbiw	r26, 0x03	; 3
     c0c:	82 81       	ldd	r24, Z+2	; 0x02
     c0e:	93 81       	ldd	r25, Z+3	; 0x03
     c10:	82 17       	cp	r24, r18
     c12:	93 07       	cpc	r25, r19
     c14:	94 f0       	brlt	.+36     	; 0xc3a <__fpcmp_parts_f+0x88>
     c16:	28 17       	cp	r18, r24
     c18:	39 07       	cpc	r19, r25
     c1a:	bc f0       	brlt	.+46     	; 0xc4a <__fpcmp_parts_f+0x98>
     c1c:	14 96       	adiw	r26, 0x04	; 4
     c1e:	8d 91       	ld	r24, X+
     c20:	9d 91       	ld	r25, X+
     c22:	0d 90       	ld	r0, X+
     c24:	bc 91       	ld	r27, X
     c26:	a0 2d       	mov	r26, r0
     c28:	24 81       	ldd	r18, Z+4	; 0x04
     c2a:	35 81       	ldd	r19, Z+5	; 0x05
     c2c:	46 81       	ldd	r20, Z+6	; 0x06
     c2e:	57 81       	ldd	r21, Z+7	; 0x07
     c30:	28 17       	cp	r18, r24
     c32:	39 07       	cpc	r19, r25
     c34:	4a 07       	cpc	r20, r26
     c36:	5b 07       	cpc	r21, r27
     c38:	18 f4       	brcc	.+6      	; 0xc40 <__fpcmp_parts_f+0x8e>
     c3a:	11 23       	and	r17, r17
     c3c:	41 f0       	breq	.+16     	; 0xc4e <__fpcmp_parts_f+0x9c>
     c3e:	0a c0       	rjmp	.+20     	; 0xc54 <__fpcmp_parts_f+0xa2>
     c40:	82 17       	cp	r24, r18
     c42:	93 07       	cpc	r25, r19
     c44:	a4 07       	cpc	r26, r20
     c46:	b5 07       	cpc	r27, r21
     c48:	40 f4       	brcc	.+16     	; 0xc5a <__fpcmp_parts_f+0xa8>
     c4a:	11 23       	and	r17, r17
     c4c:	19 f0       	breq	.+6      	; 0xc54 <__fpcmp_parts_f+0xa2>
     c4e:	61 e0       	ldi	r22, 0x01	; 1
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__fpcmp_parts_f+0xac>
     c54:	6f ef       	ldi	r22, 0xFF	; 255
     c56:	7f ef       	ldi	r23, 0xFF	; 255
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <__fpcmp_parts_f+0xac>
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	cb 01       	movw	r24, r22
     c60:	1f 91       	pop	r17
     c62:	08 95       	ret

00000c64 <__vector_10>:
//
//	if (t0_isr)
//		t0_isr();
//}

void TIMER0_COMP_vect() {
     c64:	df 93       	push	r29
     c66:	cf 93       	push	r28
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
	if (t0_isr)
     c6c:	80 91 85 00 	lds	r24, 0x0085
     c70:	90 91 86 00 	lds	r25, 0x0086
     c74:	00 97       	sbiw	r24, 0x00	; 0
     c76:	29 f0       	breq	.+10     	; 0xc82 <__vector_10+0x1e>
		t0_isr();
     c78:	e0 91 85 00 	lds	r30, 0x0085
     c7c:	f0 91 86 00 	lds	r31, 0x0086
     c80:	09 95       	icall
}
     c82:	cf 91       	pop	r28
     c84:	df 91       	pop	r29
     c86:	08 95       	ret

00000c88 <__vector_4>:
void TIMER2_COMP_vect() {
     c88:	df 93       	push	r29
     c8a:	cf 93       	push	r28
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
	if (t2_isr)
     c90:	80 91 87 00 	lds	r24, 0x0087
     c94:	90 91 88 00 	lds	r25, 0x0088
     c98:	00 97       	sbiw	r24, 0x00	; 0
     c9a:	29 f0       	breq	.+10     	; 0xca6 <__vector_4+0x1e>
		t2_isr();
     c9c:	e0 91 87 00 	lds	r30, 0x0087
     ca0:	f0 91 88 00 	lds	r31, 0x0088
     ca4:	09 95       	icall
}
     ca6:	cf 91       	pop	r28
     ca8:	df 91       	pop	r29
     caa:	08 95       	ret

00000cac <DIO_init_port_output>:
 *      Author: mh-sh
 */

#include "DIO.h"

void DIO_init_port_output(enum_port_base_t port_base, u8 port_mask) {
     cac:	df 93       	push	r29
     cae:	cf 93       	push	r28
     cb0:	00 d0       	rcall	.+0      	; 0xcb2 <DIO_init_port_output+0x6>
     cb2:	cd b7       	in	r28, 0x3d	; 61
     cb4:	de b7       	in	r29, 0x3e	; 62
     cb6:	89 83       	std	Y+1, r24	; 0x01
     cb8:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + DDR) |= port_mask;
     cba:	89 81       	ldd	r24, Y+1	; 0x01
     cbc:	88 2f       	mov	r24, r24
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	dc 01       	movw	r26, r24
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
     cc6:	88 2f       	mov	r24, r24
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	01 96       	adiw	r24, 0x01	; 1
     ccc:	fc 01       	movw	r30, r24
     cce:	90 81       	ld	r25, Z
     cd0:	8a 81       	ldd	r24, Y+2	; 0x02
     cd2:	89 2b       	or	r24, r25
     cd4:	8c 93       	st	X, r24
}
     cd6:	0f 90       	pop	r0
     cd8:	0f 90       	pop	r0
     cda:	cf 91       	pop	r28
     cdc:	df 91       	pop	r29
     cde:	08 95       	ret

00000ce0 <DIO_init_port_input>:
void DIO_init_port_input(enum_port_base_t port_base, u8 port_mask) {
     ce0:	df 93       	push	r29
     ce2:	cf 93       	push	r28
     ce4:	00 d0       	rcall	.+0      	; 0xce6 <DIO_init_port_input+0x6>
     ce6:	cd b7       	in	r28, 0x3d	; 61
     ce8:	de b7       	in	r29, 0x3e	; 62
     cea:	89 83       	std	Y+1, r24	; 0x01
     cec:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + DDR) &= ~port_mask;
     cee:	89 81       	ldd	r24, Y+1	; 0x01
     cf0:	88 2f       	mov	r24, r24
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	01 96       	adiw	r24, 0x01	; 1
     cf6:	dc 01       	movw	r26, r24
     cf8:	89 81       	ldd	r24, Y+1	; 0x01
     cfa:	88 2f       	mov	r24, r24
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	01 96       	adiw	r24, 0x01	; 1
     d00:	fc 01       	movw	r30, r24
     d02:	80 81       	ld	r24, Z
     d04:	98 2f       	mov	r25, r24
     d06:	8a 81       	ldd	r24, Y+2	; 0x02
     d08:	80 95       	com	r24
     d0a:	89 23       	and	r24, r25
     d0c:	8c 93       	st	X, r24
}
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	cf 91       	pop	r28
     d14:	df 91       	pop	r29
     d16:	08 95       	ret

00000d18 <DIO_write_port>:

void DIO_write_port(enum_port_base_t port_base, u8 port_mask, u8 data) {
     d18:	df 93       	push	r29
     d1a:	cf 93       	push	r28
     d1c:	00 d0       	rcall	.+0      	; 0xd1e <DIO_write_port+0x6>
     d1e:	0f 92       	push	r0
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	6a 83       	std	Y+2, r22	; 0x02
     d28:	4b 83       	std	Y+3, r20	; 0x03
	*(volatile u8*) (port_base + PORT) &= ~(port_mask);
     d2a:	89 81       	ldd	r24, Y+1	; 0x01
     d2c:	88 2f       	mov	r24, r24
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	02 96       	adiw	r24, 0x02	; 2
     d32:	dc 01       	movw	r26, r24
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	88 2f       	mov	r24, r24
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	02 96       	adiw	r24, 0x02	; 2
     d3c:	fc 01       	movw	r30, r24
     d3e:	80 81       	ld	r24, Z
     d40:	98 2f       	mov	r25, r24
     d42:	8a 81       	ldd	r24, Y+2	; 0x02
     d44:	80 95       	com	r24
     d46:	89 23       	and	r24, r25
     d48:	8c 93       	st	X, r24
	*(volatile u8*) (port_base + PORT) |= data & (port_mask);
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
     d4c:	88 2f       	mov	r24, r24
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	02 96       	adiw	r24, 0x02	; 2
     d52:	dc 01       	movw	r26, r24
     d54:	89 81       	ldd	r24, Y+1	; 0x01
     d56:	88 2f       	mov	r24, r24
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	02 96       	adiw	r24, 0x02	; 2
     d5c:	fc 01       	movw	r30, r24
     d5e:	20 81       	ld	r18, Z
     d60:	9b 81       	ldd	r25, Y+3	; 0x03
     d62:	8a 81       	ldd	r24, Y+2	; 0x02
     d64:	89 23       	and	r24, r25
     d66:	82 2b       	or	r24, r18
     d68:	8c 93       	st	X, r24
}
     d6a:	0f 90       	pop	r0
     d6c:	0f 90       	pop	r0
     d6e:	0f 90       	pop	r0
     d70:	cf 91       	pop	r28
     d72:	df 91       	pop	r29
     d74:	08 95       	ret

00000d76 <DIO_set_port>:
void DIO_write_pin(enum_port_base_t port_base, u8 pin_no, bool_t data) {
	*(volatile u8*) (port_base + PORT) &= ~(1 << pin_no);
	*(volatile u8*) (port_base + PORT) |= data << pin_no;
}

void DIO_set_port(enum_port_base_t port_base, u8 port_mask) {
     d76:	df 93       	push	r29
     d78:	cf 93       	push	r28
     d7a:	00 d0       	rcall	.+0      	; 0xd7c <DIO_set_port+0x6>
     d7c:	cd b7       	in	r28, 0x3d	; 61
     d7e:	de b7       	in	r29, 0x3e	; 62
     d80:	89 83       	std	Y+1, r24	; 0x01
     d82:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) |= port_mask;
     d84:	89 81       	ldd	r24, Y+1	; 0x01
     d86:	88 2f       	mov	r24, r24
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	02 96       	adiw	r24, 0x02	; 2
     d8c:	dc 01       	movw	r26, r24
     d8e:	89 81       	ldd	r24, Y+1	; 0x01
     d90:	88 2f       	mov	r24, r24
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	02 96       	adiw	r24, 0x02	; 2
     d96:	fc 01       	movw	r30, r24
     d98:	90 81       	ld	r25, Z
     d9a:	8a 81       	ldd	r24, Y+2	; 0x02
     d9c:	89 2b       	or	r24, r25
     d9e:	8c 93       	st	X, r24
}
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	cf 91       	pop	r28
     da6:	df 91       	pop	r29
     da8:	08 95       	ret

00000daa <DIO_clear_port>:
void DIO_clear_port(enum_port_base_t port_base, u8 port_mask) {
     daa:	df 93       	push	r29
     dac:	cf 93       	push	r28
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <DIO_clear_port+0x6>
     db0:	cd b7       	in	r28, 0x3d	; 61
     db2:	de b7       	in	r29, 0x3e	; 62
     db4:	89 83       	std	Y+1, r24	; 0x01
     db6:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) &= ~port_mask;
     db8:	89 81       	ldd	r24, Y+1	; 0x01
     dba:	88 2f       	mov	r24, r24
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	02 96       	adiw	r24, 0x02	; 2
     dc0:	dc 01       	movw	r26, r24
     dc2:	89 81       	ldd	r24, Y+1	; 0x01
     dc4:	88 2f       	mov	r24, r24
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	02 96       	adiw	r24, 0x02	; 2
     dca:	fc 01       	movw	r30, r24
     dcc:	80 81       	ld	r24, Z
     dce:	98 2f       	mov	r25, r24
     dd0:	8a 81       	ldd	r24, Y+2	; 0x02
     dd2:	80 95       	com	r24
     dd4:	89 23       	and	r24, r25
     dd6:	8c 93       	st	X, r24
}
     dd8:	0f 90       	pop	r0
     dda:	0f 90       	pop	r0
     ddc:	cf 91       	pop	r28
     dde:	df 91       	pop	r29
     de0:	08 95       	ret

00000de2 <DIO_set_pin>:
void DIO_set_pin(enum_port_base_t port_base, u8 pin_no) {
     de2:	df 93       	push	r29
     de4:	cf 93       	push	r28
     de6:	00 d0       	rcall	.+0      	; 0xde8 <DIO_set_pin+0x6>
     de8:	cd b7       	in	r28, 0x3d	; 61
     dea:	de b7       	in	r29, 0x3e	; 62
     dec:	89 83       	std	Y+1, r24	; 0x01
     dee:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) |= 1 << pin_no;
     df0:	89 81       	ldd	r24, Y+1	; 0x01
     df2:	88 2f       	mov	r24, r24
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	02 96       	adiw	r24, 0x02	; 2
     df8:	dc 01       	movw	r26, r24
     dfa:	89 81       	ldd	r24, Y+1	; 0x01
     dfc:	88 2f       	mov	r24, r24
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	02 96       	adiw	r24, 0x02	; 2
     e02:	fc 01       	movw	r30, r24
     e04:	80 81       	ld	r24, Z
     e06:	48 2f       	mov	r20, r24
     e08:	8a 81       	ldd	r24, Y+2	; 0x02
     e0a:	28 2f       	mov	r18, r24
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	02 2e       	mov	r0, r18
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <DIO_set_pin+0x38>
     e16:	88 0f       	add	r24, r24
     e18:	99 1f       	adc	r25, r25
     e1a:	0a 94       	dec	r0
     e1c:	e2 f7       	brpl	.-8      	; 0xe16 <DIO_set_pin+0x34>
     e1e:	84 2b       	or	r24, r20
     e20:	8c 93       	st	X, r24
}
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	cf 91       	pop	r28
     e28:	df 91       	pop	r29
     e2a:	08 95       	ret

00000e2c <DIO_clear_pin>:
void DIO_clear_pin(enum_port_base_t port_base, u8 pin_no) {
     e2c:	df 93       	push	r29
     e2e:	cf 93       	push	r28
     e30:	00 d0       	rcall	.+0      	; 0xe32 <DIO_clear_pin+0x6>
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	89 83       	std	Y+1, r24	; 0x01
     e38:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile u8*) (port_base + PORT) &= ~(1 << pin_no);
     e3a:	89 81       	ldd	r24, Y+1	; 0x01
     e3c:	88 2f       	mov	r24, r24
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	02 96       	adiw	r24, 0x02	; 2
     e42:	dc 01       	movw	r26, r24
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	88 2f       	mov	r24, r24
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 96       	adiw	r24, 0x02	; 2
     e4c:	fc 01       	movw	r30, r24
     e4e:	80 81       	ld	r24, Z
     e50:	48 2f       	mov	r20, r24
     e52:	8a 81       	ldd	r24, Y+2	; 0x02
     e54:	28 2f       	mov	r18, r24
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	02 2e       	mov	r0, r18
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <DIO_clear_pin+0x38>
     e60:	88 0f       	add	r24, r24
     e62:	99 1f       	adc	r25, r25
     e64:	0a 94       	dec	r0
     e66:	e2 f7       	brpl	.-8      	; 0xe60 <DIO_clear_pin+0x34>
     e68:	80 95       	com	r24
     e6a:	84 23       	and	r24, r20
     e6c:	8c 93       	st	X, r24
}
     e6e:	0f 90       	pop	r0
     e70:	0f 90       	pop	r0
     e72:	cf 91       	pop	r28
     e74:	df 91       	pop	r29
     e76:	08 95       	ret

00000e78 <DIO_read_port>:

u8 DIO_read_port(enum_port_base_t port_base, u8 port_mask) {
     e78:	df 93       	push	r29
     e7a:	cf 93       	push	r28
     e7c:	00 d0       	rcall	.+0      	; 0xe7e <DIO_read_port+0x6>
     e7e:	cd b7       	in	r28, 0x3d	; 61
     e80:	de b7       	in	r29, 0x3e	; 62
     e82:	89 83       	std	Y+1, r24	; 0x01
     e84:	6a 83       	std	Y+2, r22	; 0x02
	return ((*(volatile u8*) (port_base + PIN)) & (port_mask));
     e86:	89 81       	ldd	r24, Y+1	; 0x01
     e88:	88 2f       	mov	r24, r24
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	fc 01       	movw	r30, r24
     e8e:	90 81       	ld	r25, Z
     e90:	8a 81       	ldd	r24, Y+2	; 0x02
     e92:	89 23       	and	r24, r25
}
     e94:	0f 90       	pop	r0
     e96:	0f 90       	pop	r0
     e98:	cf 91       	pop	r28
     e9a:	df 91       	pop	r29
     e9c:	08 95       	ret

00000e9e <keypad_init>:
 */
#include "keypad.h"
static u8 chars[4][4] = { { 7, 8, 9, '/' }, { 4, 5, 6, '*' }, { 1, 2, 3, '-' },
		{ 'O', 0, '=', '+' } };
static u8 last_click = 0;
void keypad_init(gcfg_keypad_t * keypad) {
     e9e:	df 93       	push	r29
     ea0:	cf 93       	push	r28
     ea2:	00 d0       	rcall	.+0      	; 0xea4 <keypad_init+0x6>
     ea4:	cd b7       	in	r28, 0x3d	; 61
     ea6:	de b7       	in	r29, 0x3e	; 62
     ea8:	9a 83       	std	Y+2, r25	; 0x02
     eaa:	89 83       	std	Y+1, r24	; 0x01

	DIO_init_port_input(keypad->n4Port_left, 0xF0);
     eac:	e9 81       	ldd	r30, Y+1	; 0x01
     eae:	fa 81       	ldd	r31, Y+2	; 0x02
     eb0:	80 81       	ld	r24, Z
     eb2:	60 ef       	ldi	r22, 0xF0	; 240
     eb4:	15 df       	rcall	.-470    	; 0xce0 <DIO_init_port_input>
     eb6:	e9 81       	ldd	r30, Y+1	; 0x01
	DIO_set_port(keypad->n4Port_left, 0xF0);
     eb8:	fa 81       	ldd	r31, Y+2	; 0x02
     eba:	80 81       	ld	r24, Z
     ebc:	60 ef       	ldi	r22, 0xF0	; 240
     ebe:	5b df       	rcall	.-330    	; 0xd76 <DIO_set_port>
     ec0:	e9 81       	ldd	r30, Y+1	; 0x01
     ec2:	fa 81       	ldd	r31, Y+2	; 0x02

	DIO_init_port_input(keypad->n4Port_bot, 0xF);
     ec4:	81 81       	ldd	r24, Z+1	; 0x01
     ec6:	6f e0       	ldi	r22, 0x0F	; 15
     ec8:	0b df       	rcall	.-490    	; 0xce0 <DIO_init_port_input>
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
     ece:	cf 91       	pop	r28
}
     ed0:	df 91       	pop	r29
     ed2:	08 95       	ret

00000ed4 <read_input>:
static void read_input(gcfg_keypad_t * keypad) {
     ed4:	df 93       	push	r29
     ed6:	cf 93       	push	r28
     ed8:	00 d0       	rcall	.+0      	; 0xeda <read_input+0x6>
     eda:	00 d0       	rcall	.+0      	; 0xedc <read_input+0x8>
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
     ee0:	9c 83       	std	Y+4, r25	; 0x04
     ee2:	8b 83       	std	Y+3, r24	; 0x03
	u8 temp = 0;
     ee4:	1a 82       	std	Y+2, r1	; 0x02
//	DIO_clear_port(keypad->n4Port_left, 0xF0);

	for (u8 i = 4; i < 8; i++) {
     ee6:	84 e0       	ldi	r24, 0x04	; 4
     ee8:	89 83       	std	Y+1, r24	; 0x01
     eea:	13 c0       	rjmp	.+38     	; 0xf12 <read_input+0x3e>
		DIO_clear_port(keypad->n4Port_left, 0xF0);
     eec:	eb 81       	ldd	r30, Y+3	; 0x03
     eee:	fc 81       	ldd	r31, Y+4	; 0x04
     ef0:	80 81       	ld	r24, Z
     ef2:	60 ef       	ldi	r22, 0xF0	; 240
     ef4:	5a df       	rcall	.-332    	; 0xdaa <DIO_clear_port>
     ef6:	eb 81       	ldd	r30, Y+3	; 0x03
//		DIO_set_pin(keypad->n4Port_left, i);
		if (DIO_read_port(keypad->n4Port_bot, 0xF)) {
     ef8:	fc 81       	ldd	r31, Y+4	; 0x04
     efa:	81 81       	ldd	r24, Z+1	; 0x01
     efc:	6f e0       	ldi	r22, 0x0F	; 15
     efe:	bc df       	rcall	.-136    	; 0xe78 <DIO_read_port>
     f00:	88 23       	and	r24, r24
     f02:	21 f0       	breq	.+8      	; 0xf0c <read_input+0x38>
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	83 50       	subi	r24, 0x03	; 3
			temp = i - 3;
     f08:	8a 83       	std	Y+2, r24	; 0x02
     f0a:	06 c0       	rjmp	.+12     	; 0xf18 <read_input+0x44>
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	8f 5f       	subi	r24, 0xFF	; 255
}
static void read_input(gcfg_keypad_t * keypad) {
	u8 temp = 0;
//	DIO_clear_port(keypad->n4Port_left, 0xF0);

	for (u8 i = 4; i < 8; i++) {
     f10:	89 83       	std	Y+1, r24	; 0x01
     f12:	89 81       	ldd	r24, Y+1	; 0x01
     f14:	88 30       	cpi	r24, 0x08	; 8
     f16:	50 f3       	brcs	.-44     	; 0xeec <read_input+0x18>
     f18:	8a 81       	ldd	r24, Y+2	; 0x02
     f1a:	80 93 82 00 	sts	0x0082, r24
//		if (DIO_read_pin(keypad->n4Port_bot, i)) {
//			last_click = (i + 1) * temp;
//			break;
//		}
//	}
	last_click = temp;
     f1e:	eb 81       	ldd	r30, Y+3	; 0x03
     f20:	fc 81       	ldd	r31, Y+4	; 0x04

	DIO_set_port(keypad->n4Port_left, 0xF0);
     f22:	80 81       	ld	r24, Z
     f24:	60 ef       	ldi	r22, 0xF0	; 240
     f26:	27 df       	rcall	.-434    	; 0xd76 <DIO_set_port>
     f28:	0f 90       	pop	r0
     f2a:	0f 90       	pop	r0
     f2c:	0f 90       	pop	r0
}
     f2e:	0f 90       	pop	r0
     f30:	cf 91       	pop	r28
     f32:	df 91       	pop	r29
     f34:	08 95       	ret

00000f36 <keypad_dispatch>:
void keypad_dispatch(gcfg_keypad_t * keypad) {
     f36:	df 93       	push	r29
     f38:	cf 93       	push	r28
     f3a:	00 d0       	rcall	.+0      	; 0xf3c <keypad_dispatch+0x6>
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62
     f40:	9a 83       	std	Y+2, r25	; 0x02
     f42:	89 83       	std	Y+1, r24	; 0x01
	if (DIO_read_port(keypad->n4Port_bot, 0xF)) {
     f44:	e9 81       	ldd	r30, Y+1	; 0x01
     f46:	fa 81       	ldd	r31, Y+2	; 0x02
     f48:	81 81       	ldd	r24, Z+1	; 0x01
     f4a:	6f e0       	ldi	r22, 0x0F	; 15
     f4c:	95 df       	rcall	.-214    	; 0xe78 <DIO_read_port>
     f4e:	88 23       	and	r24, r24
     f50:	19 f0       	breq	.+6      	; 0xf58 <keypad_dispatch+0x22>
     f52:	89 81       	ldd	r24, Y+1	; 0x01
		read_input(keypad);
     f54:	9a 81       	ldd	r25, Y+2	; 0x02
     f56:	be df       	rcall	.-132    	; 0xed4 <read_input>
     f58:	0f 90       	pop	r0
     f5a:	0f 90       	pop	r0
	}
}
     f5c:	cf 91       	pop	r28
     f5e:	df 91       	pop	r29
     f60:	08 95       	ret

00000f62 <keypad_get_key>:
u8 keypad_get_key(gcfg_keypad_t * keypad) {
     f62:	df 93       	push	r29
     f64:	cf 93       	push	r28
     f66:	00 d0       	rcall	.+0      	; 0xf68 <keypad_get_key+0x6>
     f68:	0f 92       	push	r0
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	9b 83       	std	Y+3, r25	; 0x03
     f70:	8a 83       	std	Y+2, r24	; 0x02
	u8 temp = last_click;
     f72:	80 91 82 00 	lds	r24, 0x0082
     f76:	89 83       	std	Y+1, r24	; 0x01
	last_click = 0;
     f78:	10 92 82 00 	sts	0x0082, r1
	return temp;
     f7c:	89 81       	ldd	r24, Y+1	; 0x01
}
     f7e:	0f 90       	pop	r0
     f80:	0f 90       	pop	r0
     f82:	0f 90       	pop	r0
     f84:	cf 91       	pop	r28
     f86:	df 91       	pop	r29
     f88:	08 95       	ret

00000f8a <lcd_init>:
 *      Author: mh-sh
 */

#include "lcd.h"

void lcd_init(gcfg_lcd_t * lcd) {
     f8a:	df 93       	push	r29
     f8c:	cf 93       	push	r28
     f8e:	cd b7       	in	r28, 0x3d	; 61
     f90:	de b7       	in	r29, 0x3e	; 62
     f92:	e2 97       	sbiw	r28, 0x32	; 50
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	f8 94       	cli
     f98:	de bf       	out	0x3e, r29	; 62
     f9a:	0f be       	out	0x3f, r0	; 63
     f9c:	cd bf       	out	0x3d, r28	; 61
     f9e:	9a ab       	std	Y+50, r25	; 0x32
     fa0:	89 ab       	std	Y+49, r24	; 0x31

	if (lcd->nbit == n4BIT_MODE) {
     fa2:	e9 a9       	ldd	r30, Y+49	; 0x31
     fa4:	fa a9       	ldd	r31, Y+50	; 0x32
     fa6:	80 81       	ld	r24, Z
     fa8:	81 30       	cpi	r24, 0x01	; 1
     faa:	a1 f5       	brne	.+104    	; 0x1014 <lcd_init+0x8a>
		DIO_init_port_output(lcd->controlPort,
     fac:	e9 a9       	ldd	r30, Y+49	; 0x31
     fae:	fa a9       	ldd	r31, Y+50	; 0x32
     fb0:	52 81       	ldd	r21, Z+2	; 0x02
     fb2:	e9 a9       	ldd	r30, Y+49	; 0x31
     fb4:	fa a9       	ldd	r31, Y+50	; 0x32
     fb6:	85 81       	ldd	r24, Z+5	; 0x05
     fb8:	28 2f       	mov	r18, r24
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <lcd_init+0x3c>
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	2a 95       	dec	r18
     fc8:	e2 f7       	brpl	.-8      	; 0xfc2 <lcd_init+0x38>
     fca:	48 2f       	mov	r20, r24
     fcc:	e9 a9       	ldd	r30, Y+49	; 0x31
     fce:	fa a9       	ldd	r31, Y+50	; 0x32
     fd0:	83 81       	ldd	r24, Z+3	; 0x03
     fd2:	28 2f       	mov	r18, r24
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <lcd_init+0x56>
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	2a 95       	dec	r18
     fe2:	e2 f7       	brpl	.-8      	; 0xfdc <lcd_init+0x52>
     fe4:	48 2b       	or	r20, r24
     fe6:	e9 a9       	ldd	r30, Y+49	; 0x31
     fe8:	fa a9       	ldd	r31, Y+50	; 0x32
     fea:	84 81       	ldd	r24, Z+4	; 0x04
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <lcd_init+0x70>
     ff6:	88 0f       	add	r24, r24
     ff8:	99 1f       	adc	r25, r25
     ffa:	2a 95       	dec	r18
     ffc:	e2 f7       	brpl	.-8      	; 0xff6 <lcd_init+0x6c>
     ffe:	84 2b       	or	r24, r20
    1000:	98 2f       	mov	r25, r24
    1002:	85 2f       	mov	r24, r21
    1004:	69 2f       	mov	r22, r25
    1006:	52 de       	rcall	.-860    	; 0xcac <DIO_init_port_output>
    1008:	e9 a9       	ldd	r30, Y+49	; 0x31
				(1 << lcd->EN) | (1 << lcd->RS) | (1 << lcd->RW));
		DIO_init_port_output(lcd->dataPort, 0xF0);
    100a:	fa a9       	ldd	r31, Y+50	; 0x32
    100c:	81 81       	ldd	r24, Z+1	; 0x01
    100e:	60 ef       	ldi	r22, 0xF0	; 240
    1010:	4d de       	rcall	.-870    	; 0xcac <DIO_init_port_output>
    1012:	0f c0       	rjmp	.+30     	; 0x1032 <lcd_init+0xa8>
    1014:	e9 a9       	ldd	r30, Y+49	; 0x31
    1016:	fa a9       	ldd	r31, Y+50	; 0x32
	} else if (lcd->nbit == n8BIT_MODE) {
    1018:	80 81       	ld	r24, Z
    101a:	82 30       	cpi	r24, 0x02	; 2
    101c:	51 f4       	brne	.+20     	; 0x1032 <lcd_init+0xa8>
    101e:	e9 a9       	ldd	r30, Y+49	; 0x31
    1020:	fa a9       	ldd	r31, Y+50	; 0x32
		DIO_init_port_output(lcd->controlPort, 0xFF);
    1022:	82 81       	ldd	r24, Z+2	; 0x02
    1024:	6f ef       	ldi	r22, 0xFF	; 255
    1026:	42 de       	rcall	.-892    	; 0xcac <DIO_init_port_output>
    1028:	e9 a9       	ldd	r30, Y+49	; 0x31
    102a:	fa a9       	ldd	r31, Y+50	; 0x32
    102c:	81 81       	ldd	r24, Z+1	; 0x01
		DIO_init_port_output(lcd->dataPort, 0xFF);
    102e:	6f ef       	ldi	r22, 0xFF	; 255
    1030:	3d de       	rcall	.-902    	; 0xcac <DIO_init_port_output>
    1032:	e9 a9       	ldd	r30, Y+49	; 0x31
    1034:	fa a9       	ldd	r31, Y+50	; 0x32
    1036:	82 81       	ldd	r24, Z+2	; 0x02
    1038:	e9 a9       	ldd	r30, Y+49	; 0x31
	} else {
		// todo error
	}
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    103a:	fa a9       	ldd	r31, Y+50	; 0x32
    103c:	95 81       	ldd	r25, Z+5	; 0x05
    103e:	69 2f       	mov	r22, r25
    1040:	f5 de       	rcall	.-534    	; 0xe2c <DIO_clear_pin>
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	aa ef       	ldi	r26, 0xFA	; 250
    1048:	b4 e4       	ldi	r27, 0x44	; 68
    104a:	8d a7       	std	Y+45, r24	; 0x2d
    104c:	9e a7       	std	Y+46, r25	; 0x2e
    104e:	af a7       	std	Y+47, r26	; 0x2f
    1050:	b8 ab       	std	Y+48, r27	; 0x30
    1052:	6d a5       	ldd	r22, Y+45	; 0x2d
    1054:	7e a5       	ldd	r23, Y+46	; 0x2e
    1056:	8f a5       	ldd	r24, Y+47	; 0x2f
    1058:	98 a9       	ldd	r25, Y+48	; 0x30
    105a:	2b ea       	ldi	r18, 0xAB	; 171
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    105c:	3a ea       	ldi	r19, 0xAA	; 170
    105e:	4a ea       	ldi	r20, 0xAA	; 170
    1060:	5e e3       	ldi	r21, 0x3E	; 62
    1062:	e0 d9       	rcall	.-3136   	; 0x424 <__mulsf3>
    1064:	dc 01       	movw	r26, r24
    1066:	cb 01       	movw	r24, r22
    1068:	89 a7       	std	Y+41, r24	; 0x29
    106a:	9a a7       	std	Y+42, r25	; 0x2a
    106c:	ab a7       	std	Y+43, r26	; 0x2b
    106e:	bc a7       	std	Y+44, r27	; 0x2c
    1070:	69 a5       	ldd	r22, Y+41	; 0x29
    1072:	7a a5       	ldd	r23, Y+42	; 0x2a
    1074:	8b a5       	ldd	r24, Y+43	; 0x2b
    1076:	9c a5       	ldd	r25, Y+44	; 0x2c
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
	if (__tmp < 1.0)
    107c:	40 e8       	ldi	r20, 0x80	; 128
    107e:	5f e3       	ldi	r21, 0x3F	; 63
    1080:	cb db       	rcall	.-2154   	; 0x818 <__ltsf2>
    1082:	88 23       	and	r24, r24
    1084:	1c f4       	brge	.+6      	; 0x108c <lcd_init+0x102>
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	88 a7       	std	Y+40, r24	; 0x28
    108a:	8b c0       	rjmp	.+278    	; 0x11a2 <lcd_init+0x218>
    108c:	69 a5       	ldd	r22, Y+41	; 0x29
    108e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1090:	8b a5       	ldd	r24, Y+43	; 0x2b
    1092:	9c a5       	ldd	r25, Y+44	; 0x2c
		__ticks = 1;
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	4f e7       	ldi	r20, 0x7F	; 127
	else if (__tmp > 255)
    109a:	53 e4       	ldi	r21, 0x43	; 67
    109c:	63 db       	rcall	.-2362   	; 0x764 <__gtsf2>
    109e:	18 16       	cp	r1, r24
    10a0:	0c f0       	brlt	.+2      	; 0x10a4 <lcd_init+0x11a>
    10a2:	76 c0       	rjmp	.+236    	; 0x1190 <lcd_init+0x206>
    10a4:	6d a5       	ldd	r22, Y+45	; 0x2d
    10a6:	7e a5       	ldd	r23, Y+46	; 0x2e
    10a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    10aa:	98 a9       	ldd	r25, Y+48	; 0x30
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	4a e7       	ldi	r20, 0x7A	; 122
    10b2:	54 e4       	ldi	r21, 0x44	; 68
	{
		_delay_ms(__us / 1000.0);
    10b4:	ae da       	rcall	.-2724   	; 0x612 <__divsf3>
    10b6:	dc 01       	movw	r26, r24
    10b8:	cb 01       	movw	r24, r22
    10ba:	8c a3       	std	Y+36, r24	; 0x24
    10bc:	9d a3       	std	Y+37, r25	; 0x25
    10be:	ae a3       	std	Y+38, r26	; 0x26
    10c0:	bf a3       	std	Y+39, r27	; 0x27
    10c2:	6c a1       	ldd	r22, Y+36	; 0x24
    10c4:	7d a1       	ldd	r23, Y+37	; 0x25
    10c6:	8e a1       	ldd	r24, Y+38	; 0x26
    10c8:	9f a1       	ldd	r25, Y+39	; 0x27
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	4a e7       	ldi	r20, 0x7A	; 122
    10d0:	53 e4       	ldi	r21, 0x43	; 67
    10d2:	a8 d9       	rcall	.-3248   	; 0x424 <__mulsf3>
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10d4:	dc 01       	movw	r26, r24
    10d6:	cb 01       	movw	r24, r22
    10d8:	88 a3       	std	Y+32, r24	; 0x20
    10da:	99 a3       	std	Y+33, r25	; 0x21
    10dc:	aa a3       	std	Y+34, r26	; 0x22
    10de:	bb a3       	std	Y+35, r27	; 0x23
    10e0:	68 a1       	ldd	r22, Y+32	; 0x20
    10e2:	79 a1       	ldd	r23, Y+33	; 0x21
    10e4:	8a a1       	ldd	r24, Y+34	; 0x22
    10e6:	9b a1       	ldd	r25, Y+35	; 0x23
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e8       	ldi	r20, 0x80	; 128
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	93 db       	rcall	.-2266   	; 0x818 <__ltsf2>
    10f2:	88 23       	and	r24, r24
	if (__tmp < 1.0)
    10f4:	2c f4       	brge	.+10     	; 0x1100 <lcd_init+0x176>
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	9f 8f       	std	Y+31, r25	; 0x1f
    10fc:	8e 8f       	std	Y+30, r24	; 0x1e
    10fe:	3d c0       	rjmp	.+122    	; 0x117a <lcd_init+0x1f0>
    1100:	68 a1       	ldd	r22, Y+32	; 0x20
    1102:	79 a1       	ldd	r23, Y+33	; 0x21
    1104:	8a a1       	ldd	r24, Y+34	; 0x22
    1106:	9b a1       	ldd	r25, Y+35	; 0x23
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	3f ef       	ldi	r19, 0xFF	; 255
		__ticks = 1;
    110c:	4f e7       	ldi	r20, 0x7F	; 127
    110e:	57 e4       	ldi	r21, 0x47	; 71
    1110:	29 db       	rcall	.-2478   	; 0x764 <__gtsf2>
    1112:	18 16       	cp	r1, r24
    1114:	44 f5       	brge	.+80     	; 0x1166 <lcd_init+0x1dc>
	else if (__tmp > 65535)
    1116:	6c a1       	ldd	r22, Y+36	; 0x24
    1118:	7d a1       	ldd	r23, Y+37	; 0x25
    111a:	8e a1       	ldd	r24, Y+38	; 0x26
    111c:	9f a1       	ldd	r25, Y+39	; 0x27
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	40 e2       	ldi	r20, 0x20	; 32
    1124:	51 e4       	ldi	r21, 0x41	; 65
    1126:	7e d9       	rcall	.-3332   	; 0x424 <__mulsf3>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	bc 01       	movw	r22, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    112e:	cd 01       	movw	r24, r26
    1130:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	9f 8f       	std	Y+31, r25	; 0x1f
    113a:	8e 8f       	std	Y+30, r24	; 0x1e
    113c:	0f c0       	rjmp	.+30     	; 0x115c <lcd_init+0x1d2>
    113e:	89 e1       	ldi	r24, 0x19	; 25
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	9d 8f       	std	Y+29, r25	; 0x1d
    1144:	8c 8f       	std	Y+28, r24	; 0x1c
    1146:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1148:	9d 8d       	ldd	r25, Y+29	; 0x1d
    114a:	01 97       	sbiw	r24, 0x01	; 1
    114c:	f1 f7       	brne	.-4      	; 0x114a <lcd_init+0x1c0>
    114e:	9d 8f       	std	Y+29, r25	; 0x1d
    1150:	8c 8f       	std	Y+28, r24	; 0x1c
    1152:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1154:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	9f 8f       	std	Y+31, r25	; 0x1f
    115a:	8e 8f       	std	Y+30, r24	; 0x1e
    115c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    115e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	69 f7       	brne	.-38     	; 0x113e <lcd_init+0x1b4>
    1164:	24 c0       	rjmp	.+72     	; 0x11ae <lcd_init+0x224>
    1166:	68 a1       	ldd	r22, Y+32	; 0x20
    1168:	79 a1       	ldd	r23, Y+33	; 0x21
    116a:	8a a1       	ldd	r24, Y+34	; 0x22
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    116c:	9b a1       	ldd	r25, Y+35	; 0x23
    116e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1172:	dc 01       	movw	r26, r24
    1174:	cb 01       	movw	r24, r22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1176:	9f 8f       	std	Y+31, r25	; 0x1f
    1178:	8e 8f       	std	Y+30, r24	; 0x1e
    117a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    117c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    117e:	9b 8f       	std	Y+27, r25	; 0x1b
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1180:	8a 8f       	std	Y+26, r24	; 0x1a
    1182:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1184:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	f1 f7       	brne	.-4      	; 0x1186 <lcd_init+0x1fc>
    118a:	9b 8f       	std	Y+27, r25	; 0x1b
    118c:	8a 8f       	std	Y+26, r24	; 0x1a
    118e:	0f c0       	rjmp	.+30     	; 0x11ae <lcd_init+0x224>
    1190:	69 a5       	ldd	r22, Y+41	; 0x29
    1192:	7a a5       	ldd	r23, Y+42	; 0x2a
    1194:	8b a5       	ldd	r24, Y+43	; 0x2b
    1196:	9c a5       	ldd	r25, Y+44	; 0x2c
    1198:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    119c:	dc 01       	movw	r26, r24
    119e:	cb 01       	movw	r24, r22
    11a0:	88 a7       	std	Y+40, r24	; 0x28
    11a2:	88 a5       	ldd	r24, Y+40	; 0x28
    11a4:	89 8f       	std	Y+25, r24	; 0x19
    11a6:	89 8d       	ldd	r24, Y+25	; 0x19
    11a8:	8a 95       	dec	r24
    11aa:	f1 f7       	brne	.-4      	; 0x11a8 <lcd_init+0x21e>
    11ac:	89 8f       	std	Y+25, r24	; 0x19
    11ae:	e9 a9       	ldd	r30, Y+49	; 0x31
    11b0:	fa a9       	ldd	r31, Y+50	; 0x32
    11b2:	80 81       	ld	r24, Z
    11b4:	81 30       	cpi	r24, 0x01	; 1
    11b6:	69 f4       	brne	.+26     	; 0x11d2 <lcd_init+0x248>
    11b8:	89 a9       	ldd	r24, Y+49	; 0x31
    11ba:	9a a9       	ldd	r25, Y+50	; 0x32
    11bc:	63 e3       	ldi	r22, 0x33	; 51
    11be:	dd d0       	rcall	.+442    	; 0x137a <lcd_send_command>
    11c0:	89 a9       	ldd	r24, Y+49	; 0x31
    11c2:	9a a9       	ldd	r25, Y+50	; 0x32
    11c4:	62 e3       	ldi	r22, 0x32	; 50
    11c6:	d9 d0       	rcall	.+434    	; 0x137a <lcd_send_command>
	_delay_us(2000);
	if (lcd->nbit == n4BIT_MODE) {
    11c8:	89 a9       	ldd	r24, Y+49	; 0x31
    11ca:	9a a9       	ldd	r25, Y+50	; 0x32
    11cc:	6c e2       	ldi	r22, 0x2C	; 44
    11ce:	d5 d0       	rcall	.+426    	; 0x137a <lcd_send_command>
    11d0:	09 c0       	rjmp	.+18     	; 0x11e4 <lcd_init+0x25a>

		lcd_send_command(lcd, 0x33); //vodoo
    11d2:	e9 a9       	ldd	r30, Y+49	; 0x31
    11d4:	fa a9       	ldd	r31, Y+50	; 0x32
    11d6:	80 81       	ld	r24, Z
    11d8:	82 30       	cpi	r24, 0x02	; 2
    11da:	21 f4       	brne	.+8      	; 0x11e4 <lcd_init+0x25a>
		lcd_send_command(lcd, 0x32); //vodoo
    11dc:	89 a9       	ldd	r24, Y+49	; 0x31
    11de:	9a a9       	ldd	r25, Y+50	; 0x32
    11e0:	6c e3       	ldi	r22, 0x3C	; 60
    11e2:	cb d0       	rcall	.+406    	; 0x137a <lcd_send_command>
    11e4:	89 a9       	ldd	r24, Y+49	; 0x31
		lcd_send_command(lcd, 0x2C); //2 line , 5*11, 4bit
    11e6:	9a a9       	ldd	r25, Y+50	; 0x32
    11e8:	6e e0       	ldi	r22, 0x0E	; 14
    11ea:	c7 d0       	rcall	.+398    	; 0x137a <lcd_send_command>
    11ec:	89 a9       	ldd	r24, Y+49	; 0x31
    11ee:	9a a9       	ldd	r25, Y+50	; 0x32
    11f0:	66 e0       	ldi	r22, 0x06	; 6
	} else if (lcd->nbit == n8BIT_MODE) {
    11f2:	c3 d0       	rcall	.+390    	; 0x137a <lcd_send_command>
    11f4:	89 a9       	ldd	r24, Y+49	; 0x31
    11f6:	9a a9       	ldd	r25, Y+50	; 0x32
    11f8:	61 e0       	ldi	r22, 0x01	; 1
    11fa:	bf d0       	rcall	.+382    	; 0x137a <lcd_send_command>
		lcd_send_command(lcd, 0x3C); //2 line , 5*11, 8bit
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	aa ef       	ldi	r26, 0xFA	; 250
    1202:	b4 e4       	ldi	r27, 0x44	; 68
    1204:	8d 8b       	std	Y+21, r24	; 0x15
	}

	lcd_send_command(lcd, 0x0E); //cursor on
    1206:	9e 8b       	std	Y+22, r25	; 0x16
    1208:	af 8b       	std	Y+23, r26	; 0x17
    120a:	b8 8f       	std	Y+24, r27	; 0x18
    120c:	6d 89       	ldd	r22, Y+21	; 0x15
    120e:	7e 89       	ldd	r23, Y+22	; 0x16
	lcd_send_command(lcd, 0x06); //shift right
    1210:	8f 89       	ldd	r24, Y+23	; 0x17
    1212:	98 8d       	ldd	r25, Y+24	; 0x18
    1214:	2b ea       	ldi	r18, 0xAB	; 171
    1216:	3a ea       	ldi	r19, 0xAA	; 170
    1218:	4a ea       	ldi	r20, 0xAA	; 170
    121a:	5e e3       	ldi	r21, 0x3E	; 62
    121c:	03 d9       	rcall	.-3578   	; 0x424 <__mulsf3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	89 8b       	std	Y+17, r24	; 0x11
    1224:	9a 8b       	std	Y+18, r25	; 0x12
    1226:	ab 8b       	std	Y+19, r26	; 0x13
    1228:	bc 8b       	std	Y+20, r27	; 0x14
    122a:	69 89       	ldd	r22, Y+17	; 0x11
    122c:	7a 89       	ldd	r23, Y+18	; 0x12
    122e:	8b 89       	ldd	r24, Y+19	; 0x13
    1230:	9c 89       	ldd	r25, Y+20	; 0x14
    1232:	20 e0       	ldi	r18, 0x00	; 0
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	ee da       	rcall	.-2596   	; 0x818 <__ltsf2>
    123c:	88 23       	and	r24, r24
    123e:	1c f4       	brge	.+6      	; 0x1246 <lcd_init+0x2bc>
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	88 8b       	std	Y+16, r24	; 0x10
    1244:	8b c0       	rjmp	.+278    	; 0x135c <lcd_init+0x3d2>
    1246:	69 89       	ldd	r22, Y+17	; 0x11
    1248:	7a 89       	ldd	r23, Y+18	; 0x12
    124a:	8b 89       	ldd	r24, Y+19	; 0x13
    124c:	9c 89       	ldd	r25, Y+20	; 0x14
    124e:	20 e0       	ldi	r18, 0x00	; 0
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	4f e7       	ldi	r20, 0x7F	; 127
	if (__tmp < 1.0)
    1254:	53 e4       	ldi	r21, 0x43	; 67
    1256:	86 da       	rcall	.-2804   	; 0x764 <__gtsf2>
    1258:	18 16       	cp	r1, r24
    125a:	0c f0       	brlt	.+2      	; 0x125e <lcd_init+0x2d4>
    125c:	76 c0       	rjmp	.+236    	; 0x134a <lcd_init+0x3c0>
    125e:	6d 89       	ldd	r22, Y+21	; 0x15
    1260:	7e 89       	ldd	r23, Y+22	; 0x16
    1262:	8f 89       	ldd	r24, Y+23	; 0x17
    1264:	98 8d       	ldd	r25, Y+24	; 0x18
    1266:	20 e0       	ldi	r18, 0x00	; 0
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	4a e7       	ldi	r20, 0x7A	; 122
		__ticks = 1;
    126c:	54 e4       	ldi	r21, 0x44	; 68
    126e:	d1 d9       	rcall	.-3166   	; 0x612 <__divsf3>
    1270:	dc 01       	movw	r26, r24
	else if (__tmp > 255)
    1272:	cb 01       	movw	r24, r22
    1274:	8c 87       	std	Y+12, r24	; 0x0c
    1276:	9d 87       	std	Y+13, r25	; 0x0d
    1278:	ae 87       	std	Y+14, r26	; 0x0e
    127a:	bf 87       	std	Y+15, r27	; 0x0f
    127c:	6c 85       	ldd	r22, Y+12	; 0x0c
    127e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1280:	8e 85       	ldd	r24, Y+14	; 0x0e
    1282:	9f 85       	ldd	r25, Y+15	; 0x0f
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	4a e7       	ldi	r20, 0x7A	; 122
    128a:	53 e4       	ldi	r21, 0x43	; 67
	{
		_delay_ms(__us / 1000.0);
    128c:	cb d8       	rcall	.-3690   	; 0x424 <__mulsf3>
    128e:	dc 01       	movw	r26, r24
    1290:	cb 01       	movw	r24, r22
    1292:	88 87       	std	Y+8, r24	; 0x08
    1294:	99 87       	std	Y+9, r25	; 0x09
    1296:	aa 87       	std	Y+10, r26	; 0x0a
    1298:	bb 87       	std	Y+11, r27	; 0x0b
    129a:	68 85       	ldd	r22, Y+8	; 0x08
    129c:	79 85       	ldd	r23, Y+9	; 0x09
    129e:	8a 85       	ldd	r24, Y+10	; 0x0a
    12a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    12a2:	20 e0       	ldi	r18, 0x00	; 0
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	40 e8       	ldi	r20, 0x80	; 128
    12a8:	5f e3       	ldi	r21, 0x3F	; 63
    12aa:	b6 da       	rcall	.-2708   	; 0x818 <__ltsf2>
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12ac:	88 23       	and	r24, r24
    12ae:	2c f4       	brge	.+10     	; 0x12ba <lcd_init+0x330>
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	9f 83       	std	Y+7, r25	; 0x07
    12b6:	8e 83       	std	Y+6, r24	; 0x06
    12b8:	3d c0       	rjmp	.+122    	; 0x1334 <lcd_init+0x3aa>
    12ba:	68 85       	ldd	r22, Y+8	; 0x08
    12bc:	79 85       	ldd	r23, Y+9	; 0x09
    12be:	8a 85       	ldd	r24, Y+10	; 0x0a
    12c0:	9b 85       	ldd	r25, Y+11	; 0x0b
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	3f ef       	ldi	r19, 0xFF	; 255
    12c6:	4f e7       	ldi	r20, 0x7F	; 127
    12c8:	57 e4       	ldi	r21, 0x47	; 71
    12ca:	4c da       	rcall	.-2920   	; 0x764 <__gtsf2>
	if (__tmp < 1.0)
    12cc:	18 16       	cp	r1, r24
    12ce:	44 f5       	brge	.+80     	; 0x1320 <lcd_init+0x396>
    12d0:	6c 85       	ldd	r22, Y+12	; 0x0c
    12d2:	7d 85       	ldd	r23, Y+13	; 0x0d
    12d4:	8e 85       	ldd	r24, Y+14	; 0x0e
    12d6:	9f 85       	ldd	r25, Y+15	; 0x0f
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	40 e2       	ldi	r20, 0x20	; 32
    12de:	51 e4       	ldi	r21, 0x41	; 65
    12e0:	a1 d8       	rcall	.-3774   	; 0x424 <__mulsf3>
    12e2:	dc 01       	movw	r26, r24
		__ticks = 1;
    12e4:	cb 01       	movw	r24, r22
    12e6:	bc 01       	movw	r22, r24
    12e8:	cd 01       	movw	r24, r26
    12ea:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
	else if (__tmp > 65535)
    12ee:	dc 01       	movw	r26, r24
    12f0:	cb 01       	movw	r24, r22
    12f2:	9f 83       	std	Y+7, r25	; 0x07
    12f4:	8e 83       	std	Y+6, r24	; 0x06
    12f6:	0f c0       	rjmp	.+30     	; 0x1316 <lcd_init+0x38c>
    12f8:	89 e1       	ldi	r24, 0x19	; 25
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	9d 83       	std	Y+5, r25	; 0x05
    12fe:	8c 83       	std	Y+4, r24	; 0x04
    1300:	8c 81       	ldd	r24, Y+4	; 0x04
    1302:	9d 81       	ldd	r25, Y+5	; 0x05
    1304:	01 97       	sbiw	r24, 0x01	; 1
    1306:	f1 f7       	brne	.-4      	; 0x1304 <lcd_init+0x37a>
    1308:	9d 83       	std	Y+5, r25	; 0x05
    130a:	8c 83       	std	Y+4, r24	; 0x04
    130c:	8e 81       	ldd	r24, Y+6	; 0x06
    130e:	9f 81       	ldd	r25, Y+7	; 0x07
    1310:	01 97       	sbiw	r24, 0x01	; 1
    1312:	9f 83       	std	Y+7, r25	; 0x07
    1314:	8e 83       	std	Y+6, r24	; 0x06
    1316:	8e 81       	ldd	r24, Y+6	; 0x06
    1318:	9f 81       	ldd	r25, Y+7	; 0x07
    131a:	00 97       	sbiw	r24, 0x00	; 0
    131c:	69 f7       	brne	.-38     	; 0x12f8 <lcd_init+0x36e>
    131e:	24 c0       	rjmp	.+72     	; 0x1368 <lcd_init+0x3de>
    1320:	68 85       	ldd	r22, Y+8	; 0x08
    1322:	79 85       	ldd	r23, Y+9	; 0x09
    1324:	8a 85       	ldd	r24, Y+10	; 0x0a
    1326:	9b 85       	ldd	r25, Y+11	; 0x0b
    1328:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    132c:	dc 01       	movw	r26, r24
    132e:	cb 01       	movw	r24, r22
    1330:	9f 83       	std	Y+7, r25	; 0x07
    1332:	8e 83       	std	Y+6, r24	; 0x06
    1334:	8e 81       	ldd	r24, Y+6	; 0x06
    1336:	9f 81       	ldd	r25, Y+7	; 0x07
    1338:	9b 83       	std	Y+3, r25	; 0x03
    133a:	8a 83       	std	Y+2, r24	; 0x02
    133c:	8a 81       	ldd	r24, Y+2	; 0x02
    133e:	9b 81       	ldd	r25, Y+3	; 0x03
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	f1 f7       	brne	.-4      	; 0x1340 <lcd_init+0x3b6>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1344:	9b 83       	std	Y+3, r25	; 0x03
    1346:	8a 83       	std	Y+2, r24	; 0x02
    1348:	0f c0       	rjmp	.+30     	; 0x1368 <lcd_init+0x3de>
    134a:	69 89       	ldd	r22, Y+17	; 0x11
    134c:	7a 89       	ldd	r23, Y+18	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    134e:	8b 89       	ldd	r24, Y+19	; 0x13
    1350:	9c 89       	ldd	r25, Y+20	; 0x14
    1352:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1356:	dc 01       	movw	r26, r24
    1358:	cb 01       	movw	r24, r22
    135a:	88 8b       	std	Y+16, r24	; 0x10
    135c:	88 89       	ldd	r24, Y+16	; 0x10
    135e:	89 83       	std	Y+1, r24	; 0x01
    1360:	89 81       	ldd	r24, Y+1	; 0x01
    1362:	8a 95       	dec	r24
    1364:	f1 f7       	brne	.-4      	; 0x1362 <lcd_init+0x3d8>
    1366:	89 83       	std	Y+1, r24	; 0x01
    1368:	e2 96       	adiw	r28, 0x32	; 50
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	0f be       	out	0x3f, r0	; 63
    1372:	cd bf       	out	0x3d, r28	; 61
    1374:	cf 91       	pop	r28
    1376:	df 91       	pop	r29
    1378:	08 95       	ret

0000137a <lcd_send_command>:
	lcd_send_command(lcd, 0x01); //clear
	_delay_us(2000);

}
void lcd_send_command(gcfg_lcd_t * lcd, u8 cmd) {
    137a:	0f 93       	push	r16
    137c:	1f 93       	push	r17
    137e:	df 93       	push	r29
    1380:	cf 93       	push	r28
    1382:	cd b7       	in	r28, 0x3d	; 61
    1384:	de b7       	in	r29, 0x3e	; 62
    1386:	c3 56       	subi	r28, 0x63	; 99
    1388:	d0 40       	sbci	r29, 0x00	; 0
    138a:	0f b6       	in	r0, 0x3f	; 63
    138c:	f8 94       	cli
    138e:	de bf       	out	0x3e, r29	; 62
    1390:	0f be       	out	0x3f, r0	; 63
    1392:	cd bf       	out	0x3d, r28	; 61
    1394:	fe 01       	movw	r30, r28
    1396:	ef 59       	subi	r30, 0x9F	; 159
    1398:	ff 4f       	sbci	r31, 0xFF	; 255
    139a:	91 83       	std	Z+1, r25	; 0x01
    139c:	80 83       	st	Z, r24
    139e:	fe 01       	movw	r30, r28
    13a0:	ed 59       	subi	r30, 0x9D	; 157
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	60 83       	st	Z, r22
	DIO_clear_pin(lcd->controlPort, (lcd->RS));
    13a6:	fe 01       	movw	r30, r28
    13a8:	ef 59       	subi	r30, 0x9F	; 159
    13aa:	ff 4f       	sbci	r31, 0xFF	; 255
    13ac:	01 90       	ld	r0, Z+
    13ae:	f0 81       	ld	r31, Z
    13b0:	e0 2d       	mov	r30, r0
    13b2:	82 81       	ldd	r24, Z+2	; 0x02
    13b4:	fe 01       	movw	r30, r28
    13b6:	ef 59       	subi	r30, 0x9F	; 159
    13b8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ba:	01 90       	ld	r0, Z+
    13bc:	f0 81       	ld	r31, Z
    13be:	e0 2d       	mov	r30, r0
    13c0:	93 81       	ldd	r25, Z+3	; 0x03
    13c2:	69 2f       	mov	r22, r25
    13c4:	33 dd       	rcall	.-1434   	; 0xe2c <DIO_clear_pin>
    13c6:	fe 01       	movw	r30, r28
	DIO_clear_pin(lcd->controlPort, (lcd->RW));
    13c8:	ef 59       	subi	r30, 0x9F	; 159
    13ca:	ff 4f       	sbci	r31, 0xFF	; 255
    13cc:	01 90       	ld	r0, Z+
    13ce:	f0 81       	ld	r31, Z
    13d0:	e0 2d       	mov	r30, r0
    13d2:	82 81       	ldd	r24, Z+2	; 0x02
    13d4:	fe 01       	movw	r30, r28
    13d6:	ef 59       	subi	r30, 0x9F	; 159
    13d8:	ff 4f       	sbci	r31, 0xFF	; 255
    13da:	01 90       	ld	r0, Z+
    13dc:	f0 81       	ld	r31, Z
    13de:	e0 2d       	mov	r30, r0
    13e0:	94 81       	ldd	r25, Z+4	; 0x04
    13e2:	69 2f       	mov	r22, r25
    13e4:	23 dd       	rcall	.-1466   	; 0xe2c <DIO_clear_pin>
    13e6:	fe 01       	movw	r30, r28
    13e8:	ef 59       	subi	r30, 0x9F	; 159

	if (lcd->nbit == n4BIT_MODE) {
    13ea:	ff 4f       	sbci	r31, 0xFF	; 255
    13ec:	01 90       	ld	r0, Z+
    13ee:	f0 81       	ld	r31, Z
    13f0:	e0 2d       	mov	r30, r0
    13f2:	80 81       	ld	r24, Z
    13f4:	81 30       	cpi	r24, 0x01	; 1
    13f6:	09 f0       	breq	.+2      	; 0x13fa <lcd_send_command+0x80>
    13f8:	48 c2       	rjmp	.+1168   	; 0x188a <lcd_send_command+0x510>
    13fa:	fe 01       	movw	r30, r28
    13fc:	ef 59       	subi	r30, 0x9F	; 159
		DIO_write_port(lcd->dataPort, 0xF0, (cmd & 0xF0));
    13fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1400:	01 90       	ld	r0, Z+
    1402:	f0 81       	ld	r31, Z
    1404:	e0 2d       	mov	r30, r0
    1406:	21 81       	ldd	r18, Z+1	; 0x01
    1408:	fe 01       	movw	r30, r28
    140a:	ed 59       	subi	r30, 0x9D	; 157
    140c:	ff 4f       	sbci	r31, 0xFF	; 255
    140e:	80 81       	ld	r24, Z
    1410:	98 2f       	mov	r25, r24
    1412:	90 7f       	andi	r25, 0xF0	; 240
    1414:	82 2f       	mov	r24, r18
    1416:	60 ef       	ldi	r22, 0xF0	; 240
    1418:	49 2f       	mov	r20, r25
    141a:	7e dc       	rcall	.-1796   	; 0xd18 <DIO_write_port>
    141c:	fe 01       	movw	r30, r28
    141e:	ef 59       	subi	r30, 0x9F	; 159
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
		DIO_set_pin(lcd->controlPort, (lcd->EN));
    1422:	01 90       	ld	r0, Z+
    1424:	f0 81       	ld	r31, Z
    1426:	e0 2d       	mov	r30, r0
    1428:	82 81       	ldd	r24, Z+2	; 0x02
    142a:	fe 01       	movw	r30, r28
    142c:	ef 59       	subi	r30, 0x9F	; 159
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	01 90       	ld	r0, Z+
    1432:	f0 81       	ld	r31, Z
    1434:	e0 2d       	mov	r30, r0
    1436:	95 81       	ldd	r25, Z+5	; 0x05
    1438:	69 2f       	mov	r22, r25
    143a:	d3 dc       	rcall	.-1626   	; 0xde2 <DIO_set_pin>
    143c:	fe 01       	movw	r30, r28
    143e:	e3 5a       	subi	r30, 0xA3	; 163
    1440:	ff 4f       	sbci	r31, 0xFF	; 255
    1442:	80 e0       	ldi	r24, 0x00	; 0
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	a0 e8       	ldi	r26, 0x80	; 128
    1448:	bf e3       	ldi	r27, 0x3F	; 63
    144a:	80 83       	st	Z, r24
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	a2 83       	std	Z+2, r26	; 0x02
    1450:	b3 83       	std	Z+3, r27	; 0x03
    1452:	8e 01       	movw	r16, r28
    1454:	07 5a       	subi	r16, 0xA7	; 167
    1456:	1f 4f       	sbci	r17, 0xFF	; 255
    1458:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    145a:	e3 5a       	subi	r30, 0xA3	; 163
    145c:	ff 4f       	sbci	r31, 0xFF	; 255
    145e:	60 81       	ld	r22, Z
    1460:	71 81       	ldd	r23, Z+1	; 0x01
    1462:	82 81       	ldd	r24, Z+2	; 0x02
    1464:	93 81       	ldd	r25, Z+3	; 0x03
    1466:	2b ea       	ldi	r18, 0xAB	; 171
    1468:	3a ea       	ldi	r19, 0xAA	; 170
    146a:	4a ea       	ldi	r20, 0xAA	; 170
    146c:	5e e3       	ldi	r21, 0x3E	; 62
    146e:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1472:	dc 01       	movw	r26, r24
    1474:	cb 01       	movw	r24, r22
    1476:	f8 01       	movw	r30, r16
    1478:	80 83       	st	Z, r24
    147a:	91 83       	std	Z+1, r25	; 0x01
    147c:	a2 83       	std	Z+2, r26	; 0x02
    147e:	b3 83       	std	Z+3, r27	; 0x03
    1480:	fe 01       	movw	r30, r28
    1482:	e7 5a       	subi	r30, 0xA7	; 167
    1484:	ff 4f       	sbci	r31, 0xFF	; 255
    1486:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    1488:	71 81       	ldd	r23, Z+1	; 0x01
    148a:	82 81       	ldd	r24, Z+2	; 0x02
    148c:	93 81       	ldd	r25, Z+3	; 0x03
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	40 e8       	ldi	r20, 0x80	; 128
    1494:	5f e3       	ldi	r21, 0x3F	; 63
    1496:	c0 d9       	rcall	.-3200   	; 0x818 <__ltsf2>
    1498:	88 23       	and	r24, r24
    149a:	34 f4       	brge	.+12     	; 0x14a8 <lcd_send_command+0x12e>
    149c:	fe 01       	movw	r30, r28
    149e:	e8 5a       	subi	r30, 0xA8	; 168
    14a0:	ff 4f       	sbci	r31, 0xFF	; 255
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	80 83       	st	Z, r24
		__ticks = 1;
    14a6:	dc c0       	rjmp	.+440    	; 0x1660 <lcd_send_command+0x2e6>
    14a8:	fe 01       	movw	r30, r28
    14aa:	e7 5a       	subi	r30, 0xA7	; 167
    14ac:	ff 4f       	sbci	r31, 0xFF	; 255
    14ae:	60 81       	ld	r22, Z
    14b0:	71 81       	ldd	r23, Z+1	; 0x01
	else if (__tmp > 255)
    14b2:	82 81       	ldd	r24, Z+2	; 0x02
    14b4:	93 81       	ldd	r25, Z+3	; 0x03
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	4f e7       	ldi	r20, 0x7F	; 127
    14bc:	53 e4       	ldi	r21, 0x43	; 67
    14be:	52 d9       	rcall	.-3420   	; 0x764 <__gtsf2>
    14c0:	18 16       	cp	r1, r24
    14c2:	0c f0       	brlt	.+2      	; 0x14c6 <lcd_send_command+0x14c>
    14c4:	bd c0       	rjmp	.+378    	; 0x1640 <lcd_send_command+0x2c6>
    14c6:	fe 01       	movw	r30, r28
    14c8:	e3 5a       	subi	r30, 0xA3	; 163
    14ca:	ff 4f       	sbci	r31, 0xFF	; 255
    14cc:	60 81       	ld	r22, Z
    14ce:	71 81       	ldd	r23, Z+1	; 0x01
    14d0:	82 81       	ldd	r24, Z+2	; 0x02
	{
		_delay_ms(__us / 1000.0);
    14d2:	93 81       	ldd	r25, Z+3	; 0x03
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	4a e7       	ldi	r20, 0x7A	; 122
    14da:	54 e4       	ldi	r21, 0x44	; 68
    14dc:	9a d8       	rcall	.-3788   	; 0x612 <__divsf3>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	fe 01       	movw	r30, r28
    14e4:	ec 5a       	subi	r30, 0xAC	; 172
    14e6:	ff 4f       	sbci	r31, 0xFF	; 255
    14e8:	80 83       	st	Z, r24
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	a2 83       	std	Z+2, r26	; 0x02
    14ee:	b3 83       	std	Z+3, r27	; 0x03
    14f0:	8e 01       	movw	r16, r28
    14f2:	00 5b       	subi	r16, 0xB0	; 176
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
    14f6:	fe 01       	movw	r30, r28
    14f8:	ec 5a       	subi	r30, 0xAC	; 172
    14fa:	ff 4f       	sbci	r31, 0xFF	; 255
    14fc:	60 81       	ld	r22, Z
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14fe:	71 81       	ldd	r23, Z+1	; 0x01
    1500:	82 81       	ldd	r24, Z+2	; 0x02
    1502:	93 81       	ldd	r25, Z+3	; 0x03
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	4a e7       	ldi	r20, 0x7A	; 122
    150a:	53 e4       	ldi	r21, 0x43	; 67
    150c:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	f8 01       	movw	r30, r16
    1516:	80 83       	st	Z, r24
    1518:	91 83       	std	Z+1, r25	; 0x01
    151a:	a2 83       	std	Z+2, r26	; 0x02
    151c:	b3 83       	std	Z+3, r27	; 0x03
    151e:	fe 01       	movw	r30, r28
    1520:	e0 5b       	subi	r30, 0xB0	; 176
    1522:	ff 4f       	sbci	r31, 0xFF	; 255
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	82 81       	ldd	r24, Z+2	; 0x02
    152a:	93 81       	ldd	r25, Z+3	; 0x03
	if (__tmp < 1.0)
    152c:	20 e0       	ldi	r18, 0x00	; 0
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	40 e8       	ldi	r20, 0x80	; 128
    1532:	5f e3       	ldi	r21, 0x3F	; 63
    1534:	71 d9       	rcall	.-3358   	; 0x818 <__ltsf2>
    1536:	88 23       	and	r24, r24
    1538:	44 f4       	brge	.+16     	; 0x154a <lcd_send_command+0x1d0>
    153a:	fe 01       	movw	r30, r28
    153c:	e2 5b       	subi	r30, 0xB2	; 178
    153e:	ff 4f       	sbci	r31, 0xFF	; 255
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	91 83       	std	Z+1, r25	; 0x01
    1546:	80 83       	st	Z, r24
    1548:	63 c0       	rjmp	.+198    	; 0x1610 <lcd_send_command+0x296>
		__ticks = 1;
    154a:	fe 01       	movw	r30, r28
    154c:	e0 5b       	subi	r30, 0xB0	; 176
    154e:	ff 4f       	sbci	r31, 0xFF	; 255
    1550:	60 81       	ld	r22, Z
    1552:	71 81       	ldd	r23, Z+1	; 0x01
    1554:	82 81       	ldd	r24, Z+2	; 0x02
    1556:	93 81       	ldd	r25, Z+3	; 0x03
    1558:	20 e0       	ldi	r18, 0x00	; 0
	else if (__tmp > 65535)
    155a:	3f ef       	ldi	r19, 0xFF	; 255
    155c:	4f e7       	ldi	r20, 0x7F	; 127
    155e:	57 e4       	ldi	r21, 0x47	; 71
    1560:	01 d9       	rcall	.-3582   	; 0x764 <__gtsf2>
    1562:	18 16       	cp	r1, r24
    1564:	0c f0       	brlt	.+2      	; 0x1568 <lcd_send_command+0x1ee>
    1566:	43 c0       	rjmp	.+134    	; 0x15ee <lcd_send_command+0x274>
    1568:	fe 01       	movw	r30, r28
    156a:	ec 5a       	subi	r30, 0xAC	; 172
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	60 81       	ld	r22, Z
    1570:	71 81       	ldd	r23, Z+1	; 0x01
    1572:	82 81       	ldd	r24, Z+2	; 0x02
    1574:	93 81       	ldd	r25, Z+3	; 0x03
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    157a:	40 e2       	ldi	r20, 0x20	; 32
    157c:	51 e4       	ldi	r21, 0x41	; 65
    157e:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1582:	dc 01       	movw	r26, r24
    1584:	cb 01       	movw	r24, r22
    1586:	8e 01       	movw	r16, r28
    1588:	02 5b       	subi	r16, 0xB2	; 178
    158a:	1f 4f       	sbci	r17, 0xFF	; 255
    158c:	bc 01       	movw	r22, r24
    158e:	cd 01       	movw	r24, r26
    1590:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1594:	dc 01       	movw	r26, r24
    1596:	cb 01       	movw	r24, r22
    1598:	f8 01       	movw	r30, r16
    159a:	91 83       	std	Z+1, r25	; 0x01
    159c:	80 83       	st	Z, r24
    159e:	1f c0       	rjmp	.+62     	; 0x15de <lcd_send_command+0x264>
    15a0:	fe 01       	movw	r30, r28
    15a2:	e4 5b       	subi	r30, 0xB4	; 180
    15a4:	ff 4f       	sbci	r31, 0xFF	; 255
    15a6:	89 e1       	ldi	r24, 0x19	; 25
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	91 83       	std	Z+1, r25	; 0x01
    15ac:	80 83       	st	Z, r24
    15ae:	fe 01       	movw	r30, r28
    15b0:	e4 5b       	subi	r30, 0xB4	; 180
    15b2:	ff 4f       	sbci	r31, 0xFF	; 255
    15b4:	80 81       	ld	r24, Z
    15b6:	91 81       	ldd	r25, Z+1	; 0x01
    15b8:	01 97       	sbiw	r24, 0x01	; 1
    15ba:	f1 f7       	brne	.-4      	; 0x15b8 <lcd_send_command+0x23e>
    15bc:	fe 01       	movw	r30, r28
    15be:	e4 5b       	subi	r30, 0xB4	; 180
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15c0:	ff 4f       	sbci	r31, 0xFF	; 255
    15c2:	91 83       	std	Z+1, r25	; 0x01
    15c4:	80 83       	st	Z, r24
    15c6:	de 01       	movw	r26, r28
    15c8:	a2 5b       	subi	r26, 0xB2	; 178
    15ca:	bf 4f       	sbci	r27, 0xFF	; 255
    15cc:	fe 01       	movw	r30, r28
    15ce:	e2 5b       	subi	r30, 0xB2	; 178
    15d0:	ff 4f       	sbci	r31, 0xFF	; 255
    15d2:	80 81       	ld	r24, Z
    15d4:	91 81       	ldd	r25, Z+1	; 0x01
    15d6:	01 97       	sbiw	r24, 0x01	; 1
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15d8:	11 96       	adiw	r26, 0x01	; 1
    15da:	9c 93       	st	X, r25
    15dc:	8e 93       	st	-X, r24
    15de:	fe 01       	movw	r30, r28
    15e0:	e2 5b       	subi	r30, 0xB2	; 178
    15e2:	ff 4f       	sbci	r31, 0xFF	; 255
    15e4:	80 81       	ld	r24, Z
    15e6:	91 81       	ldd	r25, Z+1	; 0x01
    15e8:	00 97       	sbiw	r24, 0x00	; 0
    15ea:	d1 f6       	brne	.-76     	; 0x15a0 <lcd_send_command+0x226>
    15ec:	4b c0       	rjmp	.+150    	; 0x1684 <lcd_send_command+0x30a>
    15ee:	8e 01       	movw	r16, r28
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15f0:	02 5b       	subi	r16, 0xB2	; 178
    15f2:	1f 4f       	sbci	r17, 0xFF	; 255
    15f4:	fe 01       	movw	r30, r28
    15f6:	e0 5b       	subi	r30, 0xB0	; 176
    15f8:	ff 4f       	sbci	r31, 0xFF	; 255
    15fa:	60 81       	ld	r22, Z
    15fc:	71 81       	ldd	r23, Z+1	; 0x01
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1606:	dc 01       	movw	r26, r24
    1608:	cb 01       	movw	r24, r22
    160a:	f8 01       	movw	r30, r16
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	80 83       	st	Z, r24
    1610:	de 01       	movw	r26, r28
    1612:	a6 5b       	subi	r26, 0xB6	; 182
    1614:	bf 4f       	sbci	r27, 0xFF	; 255
    1616:	fe 01       	movw	r30, r28
    1618:	e2 5b       	subi	r30, 0xB2	; 178
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	80 81       	ld	r24, Z
    161e:	91 81       	ldd	r25, Z+1	; 0x01
    1620:	11 96       	adiw	r26, 0x01	; 1
    1622:	9c 93       	st	X, r25
    1624:	8e 93       	st	-X, r24
    1626:	fe 01       	movw	r30, r28
    1628:	e6 5b       	subi	r30, 0xB6	; 182
    162a:	ff 4f       	sbci	r31, 0xFF	; 255
    162c:	80 81       	ld	r24, Z
    162e:	91 81       	ldd	r25, Z+1	; 0x01
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	f1 f7       	brne	.-4      	; 0x1630 <lcd_send_command+0x2b6>
    1634:	fe 01       	movw	r30, r28
    1636:	e6 5b       	subi	r30, 0xB6	; 182
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	91 83       	std	Z+1, r25	; 0x01
    163c:	80 83       	st	Z, r24
    163e:	22 c0       	rjmp	.+68     	; 0x1684 <lcd_send_command+0x30a>
    1640:	8e 01       	movw	r16, r28
    1642:	08 5a       	subi	r16, 0xA8	; 168
    1644:	1f 4f       	sbci	r17, 0xFF	; 255
    1646:	fe 01       	movw	r30, r28
    1648:	e7 5a       	subi	r30, 0xA7	; 167
    164a:	ff 4f       	sbci	r31, 0xFF	; 255
    164c:	60 81       	ld	r22, Z
    164e:	71 81       	ldd	r23, Z+1	; 0x01
    1650:	82 81       	ldd	r24, Z+2	; 0x02
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1652:	93 81       	ldd	r25, Z+3	; 0x03
    1654:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1658:	dc 01       	movw	r26, r24
    165a:	cb 01       	movw	r24, r22
    165c:	f8 01       	movw	r30, r16
    165e:	80 83       	st	Z, r24
    1660:	de 01       	movw	r26, r28
    1662:	a7 5b       	subi	r26, 0xB7	; 183
    1664:	bf 4f       	sbci	r27, 0xFF	; 255
    1666:	fe 01       	movw	r30, r28
    1668:	e8 5a       	subi	r30, 0xA8	; 168
    166a:	ff 4f       	sbci	r31, 0xFF	; 255
    166c:	80 81       	ld	r24, Z
    166e:	8c 93       	st	X, r24
    1670:	fe 01       	movw	r30, r28
    1672:	e7 5b       	subi	r30, 0xB7	; 183
    1674:	ff 4f       	sbci	r31, 0xFF	; 255
    1676:	80 81       	ld	r24, Z
    1678:	8a 95       	dec	r24
    167a:	f1 f7       	brne	.-4      	; 0x1678 <lcd_send_command+0x2fe>
    167c:	fe 01       	movw	r30, r28
    167e:	e7 5b       	subi	r30, 0xB7	; 183
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1682:	80 83       	st	Z, r24
    1684:	fe 01       	movw	r30, r28
    1686:	ef 59       	subi	r30, 0x9F	; 159
    1688:	ff 4f       	sbci	r31, 0xFF	; 255
    168a:	01 90       	ld	r0, Z+
    168c:	f0 81       	ld	r31, Z
    168e:	e0 2d       	mov	r30, r0
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	fe 01       	movw	r30, r28
    1694:	ef 59       	subi	r30, 0x9F	; 159
		_delay_us(1);
		DIO_clear_pin(lcd->controlPort, (lcd->EN));
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	01 90       	ld	r0, Z+
    169a:	f0 81       	ld	r31, Z
    169c:	e0 2d       	mov	r30, r0
    169e:	95 81       	ldd	r25, Z+5	; 0x05
    16a0:	69 2f       	mov	r22, r25
    16a2:	c4 db       	rcall	.-2168   	; 0xe2c <DIO_clear_pin>
    16a4:	fe 01       	movw	r30, r28
    16a6:	eb 5b       	subi	r30, 0xBB	; 187
    16a8:	ff 4f       	sbci	r31, 0xFF	; 255
    16aa:	80 e0       	ldi	r24, 0x00	; 0
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	a8 ec       	ldi	r26, 0xC8	; 200
    16b0:	b2 e4       	ldi	r27, 0x42	; 66
    16b2:	80 83       	st	Z, r24
    16b4:	91 83       	std	Z+1, r25	; 0x01
    16b6:	a2 83       	std	Z+2, r26	; 0x02
    16b8:	b3 83       	std	Z+3, r27	; 0x03
    16ba:	8e 01       	movw	r16, r28
    16bc:	0f 5b       	subi	r16, 0xBF	; 191
    16be:	1f 4f       	sbci	r17, 0xFF	; 255
    16c0:	fe 01       	movw	r30, r28
    16c2:	eb 5b       	subi	r30, 0xBB	; 187
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	60 81       	ld	r22, Z
    16c8:	71 81       	ldd	r23, Z+1	; 0x01
    16ca:	82 81       	ldd	r24, Z+2	; 0x02
    16cc:	93 81       	ldd	r25, Z+3	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    16ce:	2b ea       	ldi	r18, 0xAB	; 171
    16d0:	3a ea       	ldi	r19, 0xAA	; 170
    16d2:	4a ea       	ldi	r20, 0xAA	; 170
    16d4:	5e e3       	ldi	r21, 0x3E	; 62
    16d6:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	f8 01       	movw	r30, r16
    16e0:	80 83       	st	Z, r24
    16e2:	91 83       	std	Z+1, r25	; 0x01
    16e4:	a2 83       	std	Z+2, r26	; 0x02
    16e6:	b3 83       	std	Z+3, r27	; 0x03
    16e8:	fe 01       	movw	r30, r28
    16ea:	ef 5b       	subi	r30, 0xBF	; 191
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	60 81       	ld	r22, Z
    16f0:	71 81       	ldd	r23, Z+1	; 0x01
    16f2:	82 81       	ldd	r24, Z+2	; 0x02
    16f4:	93 81       	ldd	r25, Z+3	; 0x03
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	40 e8       	ldi	r20, 0x80	; 128
	if (__tmp < 1.0)
    16fc:	5f e3       	ldi	r21, 0x3F	; 63
    16fe:	8c d8       	rcall	.-3816   	; 0x818 <__ltsf2>
    1700:	88 23       	and	r24, r24
    1702:	34 f4       	brge	.+12     	; 0x1710 <lcd_send_command+0x396>
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	fe 01       	movw	r30, r28
    1708:	e0 5c       	subi	r30, 0xC0	; 192
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	80 83       	st	Z, r24
    170e:	9b c0       	rjmp	.+310    	; 0x1846 <lcd_send_command+0x4cc>
    1710:	fe 01       	movw	r30, r28
    1712:	ef 5b       	subi	r30, 0xBF	; 191
    1714:	ff 4f       	sbci	r31, 0xFF	; 255
    1716:	60 81       	ld	r22, Z
    1718:	71 81       	ldd	r23, Z+1	; 0x01
		__ticks = 1;
    171a:	82 81       	ldd	r24, Z+2	; 0x02
    171c:	93 81       	ldd	r25, Z+3	; 0x03
    171e:	20 e0       	ldi	r18, 0x00	; 0
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	4f e7       	ldi	r20, 0x7F	; 127
    1724:	53 e4       	ldi	r21, 0x43	; 67
	else if (__tmp > 255)
    1726:	1e d8       	rcall	.-4036   	; 0x764 <__gtsf2>
    1728:	18 16       	cp	r1, r24
    172a:	0c f0       	brlt	.+2      	; 0x172e <lcd_send_command+0x3b4>
    172c:	7d c0       	rjmp	.+250    	; 0x1828 <lcd_send_command+0x4ae>
    172e:	fe 01       	movw	r30, r28
    1730:	eb 5b       	subi	r30, 0xBB	; 187
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	60 81       	ld	r22, Z
    1736:	71 81       	ldd	r23, Z+1	; 0x01
    1738:	82 81       	ldd	r24, Z+2	; 0x02
    173a:	93 81       	ldd	r25, Z+3	; 0x03
    173c:	20 e0       	ldi	r18, 0x00	; 0
    173e:	30 e0       	ldi	r19, 0x00	; 0
    1740:	4a e7       	ldi	r20, 0x7A	; 122
    1742:	54 e4       	ldi	r21, 0x44	; 68
    1744:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
	{
		_delay_ms(__us / 1000.0);
    1748:	dc 01       	movw	r26, r24
    174a:	cb 01       	movw	r24, r22
    174c:	8c af       	std	Y+60, r24	; 0x3c
    174e:	9d af       	std	Y+61, r25	; 0x3d
    1750:	ae af       	std	Y+62, r26	; 0x3e
    1752:	bf af       	std	Y+63, r27	; 0x3f
    1754:	6c ad       	ldd	r22, Y+60	; 0x3c
    1756:	7d ad       	ldd	r23, Y+61	; 0x3d
    1758:	8e ad       	ldd	r24, Y+62	; 0x3e
    175a:	9f ad       	ldd	r25, Y+63	; 0x3f
    175c:	20 e0       	ldi	r18, 0x00	; 0
    175e:	30 e0       	ldi	r19, 0x00	; 0
    1760:	4a e7       	ldi	r20, 0x7A	; 122
    1762:	53 e4       	ldi	r21, 0x43	; 67
    1764:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1768:	dc 01       	movw	r26, r24
    176a:	cb 01       	movw	r24, r22
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    176c:	88 af       	std	Y+56, r24	; 0x38
    176e:	99 af       	std	Y+57, r25	; 0x39
    1770:	aa af       	std	Y+58, r26	; 0x3a
    1772:	bb af       	std	Y+59, r27	; 0x3b
    1774:	68 ad       	ldd	r22, Y+56	; 0x38
    1776:	79 ad       	ldd	r23, Y+57	; 0x39
    1778:	8a ad       	ldd	r24, Y+58	; 0x3a
    177a:	9b ad       	ldd	r25, Y+59	; 0x3b
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e8       	ldi	r20, 0x80	; 128
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	49 d8       	rcall	.-3950   	; 0x818 <__ltsf2>
    1786:	88 23       	and	r24, r24
    1788:	2c f4       	brge	.+10     	; 0x1794 <lcd_send_command+0x41a>
    178a:	81 e0       	ldi	r24, 0x01	; 1
	if (__tmp < 1.0)
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	9f ab       	std	Y+55, r25	; 0x37
    1790:	8e ab       	std	Y+54, r24	; 0x36
    1792:	3f c0       	rjmp	.+126    	; 0x1812 <lcd_send_command+0x498>
    1794:	68 ad       	ldd	r22, Y+56	; 0x38
    1796:	79 ad       	ldd	r23, Y+57	; 0x39
    1798:	8a ad       	ldd	r24, Y+58	; 0x3a
    179a:	9b ad       	ldd	r25, Y+59	; 0x3b
    179c:	20 e0       	ldi	r18, 0x00	; 0
    179e:	3f ef       	ldi	r19, 0xFF	; 255
    17a0:	4f e7       	ldi	r20, 0x7F	; 127
    17a2:	57 e4       	ldi	r21, 0x47	; 71
		__ticks = 1;
    17a4:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    17a8:	18 16       	cp	r1, r24
    17aa:	4c f5       	brge	.+82     	; 0x17fe <lcd_send_command+0x484>
    17ac:	6c ad       	ldd	r22, Y+60	; 0x3c
	else if (__tmp > 65535)
    17ae:	7d ad       	ldd	r23, Y+61	; 0x3d
    17b0:	8e ad       	ldd	r24, Y+62	; 0x3e
    17b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	40 e2       	ldi	r20, 0x20	; 32
    17ba:	51 e4       	ldi	r21, 0x41	; 65
    17bc:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    17c0:	dc 01       	movw	r26, r24
    17c2:	cb 01       	movw	r24, r22
    17c4:	bc 01       	movw	r22, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17c6:	cd 01       	movw	r24, r26
    17c8:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    17cc:	dc 01       	movw	r26, r24
    17ce:	cb 01       	movw	r24, r22
    17d0:	9f ab       	std	Y+55, r25	; 0x37
    17d2:	8e ab       	std	Y+54, r24	; 0x36
    17d4:	0f c0       	rjmp	.+30     	; 0x17f4 <lcd_send_command+0x47a>
    17d6:	89 e1       	ldi	r24, 0x19	; 25
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	9d ab       	std	Y+53, r25	; 0x35
    17dc:	8c ab       	std	Y+52, r24	; 0x34
    17de:	8c a9       	ldd	r24, Y+52	; 0x34
    17e0:	9d a9       	ldd	r25, Y+53	; 0x35
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	f1 f7       	brne	.-4      	; 0x17e2 <lcd_send_command+0x468>
    17e6:	9d ab       	std	Y+53, r25	; 0x35
    17e8:	8c ab       	std	Y+52, r24	; 0x34
    17ea:	8e a9       	ldd	r24, Y+54	; 0x36
    17ec:	9f a9       	ldd	r25, Y+55	; 0x37
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	9f ab       	std	Y+55, r25	; 0x37
    17f2:	8e ab       	std	Y+54, r24	; 0x36
    17f4:	8e a9       	ldd	r24, Y+54	; 0x36
    17f6:	9f a9       	ldd	r25, Y+55	; 0x37
    17f8:	00 97       	sbiw	r24, 0x00	; 0
    17fa:	69 f7       	brne	.-38     	; 0x17d6 <lcd_send_command+0x45c>
    17fc:	2d c0       	rjmp	.+90     	; 0x1858 <lcd_send_command+0x4de>
    17fe:	68 ad       	ldd	r22, Y+56	; 0x38
    1800:	79 ad       	ldd	r23, Y+57	; 0x39
    1802:	8a ad       	ldd	r24, Y+58	; 0x3a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1804:	9b ad       	ldd	r25, Y+59	; 0x3b
    1806:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    180e:	9f ab       	std	Y+55, r25	; 0x37
    1810:	8e ab       	std	Y+54, r24	; 0x36
    1812:	8e a9       	ldd	r24, Y+54	; 0x36
    1814:	9f a9       	ldd	r25, Y+55	; 0x37
    1816:	9b ab       	std	Y+51, r25	; 0x33
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1818:	8a ab       	std	Y+50, r24	; 0x32
    181a:	8a a9       	ldd	r24, Y+50	; 0x32
    181c:	9b a9       	ldd	r25, Y+51	; 0x33
    181e:	01 97       	sbiw	r24, 0x01	; 1
    1820:	f1 f7       	brne	.-4      	; 0x181e <lcd_send_command+0x4a4>
    1822:	9b ab       	std	Y+51, r25	; 0x33
    1824:	8a ab       	std	Y+50, r24	; 0x32
    1826:	18 c0       	rjmp	.+48     	; 0x1858 <lcd_send_command+0x4de>
    1828:	fe 01       	movw	r30, r28
    182a:	ef 5b       	subi	r30, 0xBF	; 191
    182c:	ff 4f       	sbci	r31, 0xFF	; 255
    182e:	60 81       	ld	r22, Z
    1830:	71 81       	ldd	r23, Z+1	; 0x01
    1832:	82 81       	ldd	r24, Z+2	; 0x02
    1834:	93 81       	ldd	r25, Z+3	; 0x03
    1836:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	fe 01       	movw	r30, r28
    1840:	e0 5c       	subi	r30, 0xC0	; 192
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	80 83       	st	Z, r24
    1846:	fe 01       	movw	r30, r28
    1848:	e0 5c       	subi	r30, 0xC0	; 192
    184a:	ff 4f       	sbci	r31, 0xFF	; 255
    184c:	80 81       	ld	r24, Z
    184e:	89 ab       	std	Y+49, r24	; 0x31
    1850:	89 a9       	ldd	r24, Y+49	; 0x31
    1852:	8a 95       	dec	r24
    1854:	f1 f7       	brne	.-4      	; 0x1852 <lcd_send_command+0x4d8>
    1856:	89 ab       	std	Y+49, r24	; 0x31
    1858:	fe 01       	movw	r30, r28
    185a:	ef 59       	subi	r30, 0x9F	; 159
    185c:	ff 4f       	sbci	r31, 0xFF	; 255
    185e:	01 90       	ld	r0, Z+
    1860:	f0 81       	ld	r31, Z
    1862:	e0 2d       	mov	r30, r0
    1864:	21 81       	ldd	r18, Z+1	; 0x01
    1866:	fe 01       	movw	r30, r28
    1868:	ed 59       	subi	r30, 0x9D	; 157
    186a:	ff 4f       	sbci	r31, 0xFF	; 255
    186c:	80 81       	ld	r24, Z
    186e:	88 2f       	mov	r24, r24
    1870:	90 e0       	ldi	r25, 0x00	; 0
		_delay_us(100);
		DIO_write_port(lcd->dataPort, 0xF0, (cmd & 0xF) << 4);
    1872:	82 95       	swap	r24
    1874:	92 95       	swap	r25
    1876:	90 7f       	andi	r25, 0xF0	; 240
    1878:	98 27       	eor	r25, r24
    187a:	80 7f       	andi	r24, 0xF0	; 240
    187c:	98 27       	eor	r25, r24
    187e:	98 2f       	mov	r25, r24
    1880:	82 2f       	mov	r24, r18
    1882:	60 ef       	ldi	r22, 0xF0	; 240
    1884:	49 2f       	mov	r20, r25
    1886:	48 da       	rcall	.-2928   	; 0xd18 <DIO_write_port>
    1888:	16 c0       	rjmp	.+44     	; 0x18b6 <lcd_send_command+0x53c>
    188a:	fe 01       	movw	r30, r28
    188c:	ef 59       	subi	r30, 0x9F	; 159
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	01 90       	ld	r0, Z+
    1892:	f0 81       	ld	r31, Z
    1894:	e0 2d       	mov	r30, r0
    1896:	80 81       	ld	r24, Z
    1898:	82 30       	cpi	r24, 0x02	; 2
    189a:	69 f4       	brne	.+26     	; 0x18b6 <lcd_send_command+0x53c>
    189c:	fe 01       	movw	r30, r28
    189e:	ef 59       	subi	r30, 0x9F	; 159
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	01 90       	ld	r0, Z+
    18a4:	f0 81       	ld	r31, Z
	} else if (lcd->nbit == n8BIT_MODE) {
    18a6:	e0 2d       	mov	r30, r0
    18a8:	81 81       	ldd	r24, Z+1	; 0x01
    18aa:	fe 01       	movw	r30, r28
    18ac:	ed 59       	subi	r30, 0x9D	; 157
    18ae:	ff 4f       	sbci	r31, 0xFF	; 255
    18b0:	6f ef       	ldi	r22, 0xFF	; 255
    18b2:	40 81       	ld	r20, Z
    18b4:	31 da       	rcall	.-2974   	; 0xd18 <DIO_write_port>
    18b6:	fe 01       	movw	r30, r28
		DIO_write_port(lcd->dataPort, 0xFF, cmd);
    18b8:	ef 59       	subi	r30, 0x9F	; 159
    18ba:	ff 4f       	sbci	r31, 0xFF	; 255
    18bc:	01 90       	ld	r0, Z+
    18be:	f0 81       	ld	r31, Z
    18c0:	e0 2d       	mov	r30, r0
    18c2:	82 81       	ldd	r24, Z+2	; 0x02
    18c4:	fe 01       	movw	r30, r28
    18c6:	ef 59       	subi	r30, 0x9F	; 159
    18c8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ca:	01 90       	ld	r0, Z+
    18cc:	f0 81       	ld	r31, Z
    18ce:	e0 2d       	mov	r30, r0
    18d0:	95 81       	ldd	r25, Z+5	; 0x05
    18d2:	69 2f       	mov	r22, r25
	} else {
		// todo error
	}
	DIO_set_pin(lcd->controlPort, (lcd->EN));
    18d4:	86 da       	rcall	.-2804   	; 0xde2 <DIO_set_pin>
    18d6:	80 e0       	ldi	r24, 0x00	; 0
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	a0 e8       	ldi	r26, 0x80	; 128
    18dc:	bf e3       	ldi	r27, 0x3F	; 63
    18de:	8d a7       	std	Y+45, r24	; 0x2d
    18e0:	9e a7       	std	Y+46, r25	; 0x2e
    18e2:	af a7       	std	Y+47, r26	; 0x2f
    18e4:	b8 ab       	std	Y+48, r27	; 0x30
    18e6:	6d a5       	ldd	r22, Y+45	; 0x2d
    18e8:	7e a5       	ldd	r23, Y+46	; 0x2e
    18ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    18ec:	98 a9       	ldd	r25, Y+48	; 0x30
    18ee:	2b ea       	ldi	r18, 0xAB	; 171
    18f0:	3a ea       	ldi	r19, 0xAA	; 170
    18f2:	4a ea       	ldi	r20, 0xAA	; 170
    18f4:	5e e3       	ldi	r21, 0x3E	; 62
    18f6:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	89 a7       	std	Y+41, r24	; 0x29
    1900:	9a a7       	std	Y+42, r25	; 0x2a
    1902:	ab a7       	std	Y+43, r26	; 0x2b
    1904:	bc a7       	std	Y+44, r27	; 0x2c
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1906:	69 a5       	ldd	r22, Y+41	; 0x29
    1908:	7a a5       	ldd	r23, Y+42	; 0x2a
    190a:	8b a5       	ldd	r24, Y+43	; 0x2b
    190c:	9c a5       	ldd	r25, Y+44	; 0x2c
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	40 e8       	ldi	r20, 0x80	; 128
    1914:	5f e3       	ldi	r21, 0x3F	; 63
    1916:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    191a:	88 23       	and	r24, r24
    191c:	1c f4       	brge	.+6      	; 0x1924 <lcd_send_command+0x5aa>
    191e:	81 e0       	ldi	r24, 0x01	; 1
    1920:	88 a7       	std	Y+40, r24	; 0x28
    1922:	91 c0       	rjmp	.+290    	; 0x1a46 <lcd_send_command+0x6cc>
    1924:	69 a5       	ldd	r22, Y+41	; 0x29
	if (__tmp < 1.0)
    1926:	7a a5       	ldd	r23, Y+42	; 0x2a
    1928:	8b a5       	ldd	r24, Y+43	; 0x2b
    192a:	9c a5       	ldd	r25, Y+44	; 0x2c
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	4f e7       	ldi	r20, 0x7F	; 127
    1932:	53 e4       	ldi	r21, 0x43	; 67
    1934:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1938:	18 16       	cp	r1, r24
    193a:	0c f0       	brlt	.+2      	; 0x193e <lcd_send_command+0x5c4>
    193c:	7b c0       	rjmp	.+246    	; 0x1a34 <lcd_send_command+0x6ba>
		__ticks = 1;
    193e:	6d a5       	ldd	r22, Y+45	; 0x2d
    1940:	7e a5       	ldd	r23, Y+46	; 0x2e
    1942:	8f a5       	ldd	r24, Y+47	; 0x2f
	else if (__tmp > 255)
    1944:	98 a9       	ldd	r25, Y+48	; 0x30
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	4a e7       	ldi	r20, 0x7A	; 122
    194c:	54 e4       	ldi	r21, 0x44	; 68
    194e:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	8c a3       	std	Y+36, r24	; 0x24
    1958:	9d a3       	std	Y+37, r25	; 0x25
    195a:	ae a3       	std	Y+38, r26	; 0x26
    195c:	bf a3       	std	Y+39, r27	; 0x27
	{
		_delay_ms(__us / 1000.0);
    195e:	6c a1       	ldd	r22, Y+36	; 0x24
    1960:	7d a1       	ldd	r23, Y+37	; 0x25
    1962:	8e a1       	ldd	r24, Y+38	; 0x26
    1964:	9f a1       	ldd	r25, Y+39	; 0x27
    1966:	20 e0       	ldi	r18, 0x00	; 0
    1968:	30 e0       	ldi	r19, 0x00	; 0
    196a:	4a e7       	ldi	r20, 0x7A	; 122
    196c:	53 e4       	ldi	r21, 0x43	; 67
    196e:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1972:	dc 01       	movw	r26, r24
    1974:	cb 01       	movw	r24, r22
    1976:	88 a3       	std	Y+32, r24	; 0x20
    1978:	99 a3       	std	Y+33, r25	; 0x21
    197a:	aa a3       	std	Y+34, r26	; 0x22
    197c:	bb a3       	std	Y+35, r27	; 0x23
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    197e:	68 a1       	ldd	r22, Y+32	; 0x20
    1980:	79 a1       	ldd	r23, Y+33	; 0x21
    1982:	8a a1       	ldd	r24, Y+34	; 0x22
    1984:	9b a1       	ldd	r25, Y+35	; 0x23
    1986:	20 e0       	ldi	r18, 0x00	; 0
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	40 e8       	ldi	r20, 0x80	; 128
    198c:	5f e3       	ldi	r21, 0x3F	; 63
    198e:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1992:	88 23       	and	r24, r24
    1994:	2c f4       	brge	.+10     	; 0x19a0 <lcd_send_command+0x626>
    1996:	81 e0       	ldi	r24, 0x01	; 1
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	9f 8f       	std	Y+31, r25	; 0x1f
    199c:	8e 8f       	std	Y+30, r24	; 0x1e
	if (__tmp < 1.0)
    199e:	3f c0       	rjmp	.+126    	; 0x1a1e <lcd_send_command+0x6a4>
    19a0:	68 a1       	ldd	r22, Y+32	; 0x20
    19a2:	79 a1       	ldd	r23, Y+33	; 0x21
    19a4:	8a a1       	ldd	r24, Y+34	; 0x22
    19a6:	9b a1       	ldd	r25, Y+35	; 0x23
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	3f ef       	ldi	r19, 0xFF	; 255
    19ac:	4f e7       	ldi	r20, 0x7F	; 127
    19ae:	57 e4       	ldi	r21, 0x47	; 71
    19b0:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    19b4:	18 16       	cp	r1, r24
		__ticks = 1;
    19b6:	4c f5       	brge	.+82     	; 0x1a0a <lcd_send_command+0x690>
    19b8:	6c a1       	ldd	r22, Y+36	; 0x24
    19ba:	7d a1       	ldd	r23, Y+37	; 0x25
    19bc:	8e a1       	ldd	r24, Y+38	; 0x26
    19be:	9f a1       	ldd	r25, Y+39	; 0x27
	else if (__tmp > 65535)
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	40 e2       	ldi	r20, 0x20	; 32
    19c6:	51 e4       	ldi	r21, 0x41	; 65
    19c8:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    19cc:	dc 01       	movw	r26, r24
    19ce:	cb 01       	movw	r24, r22
    19d0:	bc 01       	movw	r22, r24
    19d2:	cd 01       	movw	r24, r26
    19d4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19d8:	dc 01       	movw	r26, r24
    19da:	cb 01       	movw	r24, r22
    19dc:	9f 8f       	std	Y+31, r25	; 0x1f
    19de:	8e 8f       	std	Y+30, r24	; 0x1e
    19e0:	0f c0       	rjmp	.+30     	; 0x1a00 <lcd_send_command+0x686>
    19e2:	89 e1       	ldi	r24, 0x19	; 25
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	9d 8f       	std	Y+29, r25	; 0x1d
    19e8:	8c 8f       	std	Y+28, r24	; 0x1c
    19ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
    19ec:	9d 8d       	ldd	r25, Y+29	; 0x1d
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	f1 f7       	brne	.-4      	; 0x19ee <lcd_send_command+0x674>
    19f2:	9d 8f       	std	Y+29, r25	; 0x1d
    19f4:	8c 8f       	std	Y+28, r24	; 0x1c
    19f6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19f8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19fa:	01 97       	sbiw	r24, 0x01	; 1
    19fc:	9f 8f       	std	Y+31, r25	; 0x1f
    19fe:	8e 8f       	std	Y+30, r24	; 0x1e
    1a00:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a02:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a04:	00 97       	sbiw	r24, 0x00	; 0
    1a06:	69 f7       	brne	.-38     	; 0x19e2 <lcd_send_command+0x668>
    1a08:	24 c0       	rjmp	.+72     	; 0x1a52 <lcd_send_command+0x6d8>
    1a0a:	68 a1       	ldd	r22, Y+32	; 0x20
    1a0c:	79 a1       	ldd	r23, Y+33	; 0x21
    1a0e:	8a a1       	ldd	r24, Y+34	; 0x22
    1a10:	9b a1       	ldd	r25, Y+35	; 0x23
    1a12:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	9f 8f       	std	Y+31, r25	; 0x1f
    1a1c:	8e 8f       	std	Y+30, r24	; 0x1e
    1a1e:	8e 8d       	ldd	r24, Y+30	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a20:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a22:	9b 8f       	std	Y+27, r25	; 0x1b
    1a24:	8a 8f       	std	Y+26, r24	; 0x1a
    1a26:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1a28:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1a2a:	01 97       	sbiw	r24, 0x01	; 1
    1a2c:	f1 f7       	brne	.-4      	; 0x1a2a <lcd_send_command+0x6b0>
    1a2e:	9b 8f       	std	Y+27, r25	; 0x1b
    1a30:	8a 8f       	std	Y+26, r24	; 0x1a
    1a32:	0f c0       	rjmp	.+30     	; 0x1a52 <lcd_send_command+0x6d8>
    1a34:	69 a5       	ldd	r22, Y+41	; 0x29
    1a36:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a38:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a3a:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a3c:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1a40:	dc 01       	movw	r26, r24
    1a42:	cb 01       	movw	r24, r22
    1a44:	88 a7       	std	Y+40, r24	; 0x28
    1a46:	88 a5       	ldd	r24, Y+40	; 0x28
    1a48:	89 8f       	std	Y+25, r24	; 0x19
    1a4a:	89 8d       	ldd	r24, Y+25	; 0x19
    1a4c:	8a 95       	dec	r24
    1a4e:	f1 f7       	brne	.-4      	; 0x1a4c <lcd_send_command+0x6d2>
    1a50:	89 8f       	std	Y+25, r24	; 0x19
    1a52:	fe 01       	movw	r30, r28
    1a54:	ef 59       	subi	r30, 0x9F	; 159
    1a56:	ff 4f       	sbci	r31, 0xFF	; 255
    1a58:	01 90       	ld	r0, Z+
    1a5a:	f0 81       	ld	r31, Z
    1a5c:	e0 2d       	mov	r30, r0
    1a5e:	82 81       	ldd	r24, Z+2	; 0x02
    1a60:	fe 01       	movw	r30, r28
    1a62:	ef 59       	subi	r30, 0x9F	; 159
    1a64:	ff 4f       	sbci	r31, 0xFF	; 255
    1a66:	01 90       	ld	r0, Z+
    1a68:	f0 81       	ld	r31, Z
    1a6a:	e0 2d       	mov	r30, r0
    1a6c:	95 81       	ldd	r25, Z+5	; 0x05
    1a6e:	69 2f       	mov	r22, r25
    1a70:	dd d9       	rcall	.-3142   	; 0xe2c <DIO_clear_pin>
	_delay_us(1);
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    1a72:	80 e0       	ldi	r24, 0x00	; 0
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	a8 ec       	ldi	r26, 0xC8	; 200
    1a78:	b2 e4       	ldi	r27, 0x42	; 66
    1a7a:	8d 8b       	std	Y+21, r24	; 0x15
    1a7c:	9e 8b       	std	Y+22, r25	; 0x16
    1a7e:	af 8b       	std	Y+23, r26	; 0x17
    1a80:	b8 8f       	std	Y+24, r27	; 0x18
    1a82:	6d 89       	ldd	r22, Y+21	; 0x15
    1a84:	7e 89       	ldd	r23, Y+22	; 0x16
    1a86:	8f 89       	ldd	r24, Y+23	; 0x17
    1a88:	98 8d       	ldd	r25, Y+24	; 0x18
    1a8a:	2b ea       	ldi	r18, 0xAB	; 171
    1a8c:	3a ea       	ldi	r19, 0xAA	; 170
    1a8e:	4a ea       	ldi	r20, 0xAA	; 170
    1a90:	5e e3       	ldi	r21, 0x3E	; 62
    1a92:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1a96:	dc 01       	movw	r26, r24
    1a98:	cb 01       	movw	r24, r22
    1a9a:	89 8b       	std	Y+17, r24	; 0x11
    1a9c:	9a 8b       	std	Y+18, r25	; 0x12
    1a9e:	ab 8b       	std	Y+19, r26	; 0x13
    1aa0:	bc 8b       	std	Y+20, r27	; 0x14
    1aa2:	69 89       	ldd	r22, Y+17	; 0x11
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1aa4:	7a 89       	ldd	r23, Y+18	; 0x12
    1aa6:	8b 89       	ldd	r24, Y+19	; 0x13
    1aa8:	9c 89       	ldd	r25, Y+20	; 0x14
    1aaa:	20 e0       	ldi	r18, 0x00	; 0
    1aac:	30 e0       	ldi	r19, 0x00	; 0
    1aae:	40 e8       	ldi	r20, 0x80	; 128
    1ab0:	5f e3       	ldi	r21, 0x3F	; 63
    1ab2:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1ab6:	88 23       	and	r24, r24
    1ab8:	1c f4       	brge	.+6      	; 0x1ac0 <lcd_send_command+0x746>
    1aba:	81 e0       	ldi	r24, 0x01	; 1
    1abc:	88 8b       	std	Y+16, r24	; 0x10
    1abe:	91 c0       	rjmp	.+290    	; 0x1be2 <lcd_send_command+0x868>
    1ac0:	69 89       	ldd	r22, Y+17	; 0x11
    1ac2:	7a 89       	ldd	r23, Y+18	; 0x12
	if (__tmp < 1.0)
    1ac4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ac6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	4f e7       	ldi	r20, 0x7F	; 127
    1ace:	53 e4       	ldi	r21, 0x43	; 67
    1ad0:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1ad4:	18 16       	cp	r1, r24
    1ad6:	0c f0       	brlt	.+2      	; 0x1ada <lcd_send_command+0x760>
    1ad8:	7b c0       	rjmp	.+246    	; 0x1bd0 <lcd_send_command+0x856>
    1ada:	6d 89       	ldd	r22, Y+21	; 0x15
		__ticks = 1;
    1adc:	7e 89       	ldd	r23, Y+22	; 0x16
    1ade:	8f 89       	ldd	r24, Y+23	; 0x17
    1ae0:	98 8d       	ldd	r25, Y+24	; 0x18
	else if (__tmp > 255)
    1ae2:	20 e0       	ldi	r18, 0x00	; 0
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	4a e7       	ldi	r20, 0x7A	; 122
    1ae8:	54 e4       	ldi	r21, 0x44	; 68
    1aea:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    1aee:	dc 01       	movw	r26, r24
    1af0:	cb 01       	movw	r24, r22
    1af2:	8c 87       	std	Y+12, r24	; 0x0c
    1af4:	9d 87       	std	Y+13, r25	; 0x0d
    1af6:	ae 87       	std	Y+14, r26	; 0x0e
    1af8:	bf 87       	std	Y+15, r27	; 0x0f
    1afa:	6c 85       	ldd	r22, Y+12	; 0x0c
	{
		_delay_ms(__us / 1000.0);
    1afc:	7d 85       	ldd	r23, Y+13	; 0x0d
    1afe:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b00:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b02:	20 e0       	ldi	r18, 0x00	; 0
    1b04:	30 e0       	ldi	r19, 0x00	; 0
    1b06:	4a e7       	ldi	r20, 0x7A	; 122
    1b08:	53 e4       	ldi	r21, 0x43	; 67
    1b0a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1b0e:	dc 01       	movw	r26, r24
    1b10:	cb 01       	movw	r24, r22
    1b12:	88 87       	std	Y+8, r24	; 0x08
    1b14:	99 87       	std	Y+9, r25	; 0x09
    1b16:	aa 87       	std	Y+10, r26	; 0x0a
    1b18:	bb 87       	std	Y+11, r27	; 0x0b
    1b1a:	68 85       	ldd	r22, Y+8	; 0x08
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b1c:	79 85       	ldd	r23, Y+9	; 0x09
    1b1e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b20:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	40 e8       	ldi	r20, 0x80	; 128
    1b28:	5f e3       	ldi	r21, 0x3F	; 63
    1b2a:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1b2e:	88 23       	and	r24, r24
    1b30:	2c f4       	brge	.+10     	; 0x1b3c <lcd_send_command+0x7c2>
    1b32:	81 e0       	ldi	r24, 0x01	; 1
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	9f 83       	std	Y+7, r25	; 0x07
    1b38:	8e 83       	std	Y+6, r24	; 0x06
    1b3a:	3f c0       	rjmp	.+126    	; 0x1bba <lcd_send_command+0x840>
	if (__tmp < 1.0)
    1b3c:	68 85       	ldd	r22, Y+8	; 0x08
    1b3e:	79 85       	ldd	r23, Y+9	; 0x09
    1b40:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b42:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	3f ef       	ldi	r19, 0xFF	; 255
    1b48:	4f e7       	ldi	r20, 0x7F	; 127
    1b4a:	57 e4       	ldi	r21, 0x47	; 71
    1b4c:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1b50:	18 16       	cp	r1, r24
    1b52:	4c f5       	brge	.+82     	; 0x1ba6 <lcd_send_command+0x82c>
		__ticks = 1;
    1b54:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b56:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b58:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b5a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b5c:	20 e0       	ldi	r18, 0x00	; 0
	else if (__tmp > 65535)
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	40 e2       	ldi	r20, 0x20	; 32
    1b62:	51 e4       	ldi	r21, 0x41	; 65
    1b64:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1b68:	dc 01       	movw	r26, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	bc 01       	movw	r22, r24
    1b6e:	cd 01       	movw	r24, r26
    1b70:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1b74:	dc 01       	movw	r26, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b76:	cb 01       	movw	r24, r22
    1b78:	9f 83       	std	Y+7, r25	; 0x07
    1b7a:	8e 83       	std	Y+6, r24	; 0x06
    1b7c:	0f c0       	rjmp	.+30     	; 0x1b9c <lcd_send_command+0x822>
    1b7e:	89 e1       	ldi	r24, 0x19	; 25
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	9d 83       	std	Y+5, r25	; 0x05
    1b84:	8c 83       	std	Y+4, r24	; 0x04
    1b86:	8c 81       	ldd	r24, Y+4	; 0x04
    1b88:	9d 81       	ldd	r25, Y+5	; 0x05
    1b8a:	01 97       	sbiw	r24, 0x01	; 1
    1b8c:	f1 f7       	brne	.-4      	; 0x1b8a <lcd_send_command+0x810>
    1b8e:	9d 83       	std	Y+5, r25	; 0x05
    1b90:	8c 83       	std	Y+4, r24	; 0x04
    1b92:	8e 81       	ldd	r24, Y+6	; 0x06
    1b94:	9f 81       	ldd	r25, Y+7	; 0x07
    1b96:	01 97       	sbiw	r24, 0x01	; 1
    1b98:	9f 83       	std	Y+7, r25	; 0x07
    1b9a:	8e 83       	std	Y+6, r24	; 0x06
    1b9c:	8e 81       	ldd	r24, Y+6	; 0x06
    1b9e:	9f 81       	ldd	r25, Y+7	; 0x07
    1ba0:	00 97       	sbiw	r24, 0x00	; 0
    1ba2:	69 f7       	brne	.-38     	; 0x1b7e <lcd_send_command+0x804>
    1ba4:	24 c0       	rjmp	.+72     	; 0x1bee <lcd_send_command+0x874>
    1ba6:	68 85       	ldd	r22, Y+8	; 0x08
    1ba8:	79 85       	ldd	r23, Y+9	; 0x09
    1baa:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bac:	9b 85       	ldd	r25, Y+11	; 0x0b
    1bae:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1bb2:	dc 01       	movw	r26, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	9f 83       	std	Y+7, r25	; 0x07
    1bb8:	8e 83       	std	Y+6, r24	; 0x06
    1bba:	8e 81       	ldd	r24, Y+6	; 0x06
    1bbc:	9f 81       	ldd	r25, Y+7	; 0x07
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bbe:	9b 83       	std	Y+3, r25	; 0x03
    1bc0:	8a 83       	std	Y+2, r24	; 0x02
    1bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc4:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc6:	01 97       	sbiw	r24, 0x01	; 1
    1bc8:	f1 f7       	brne	.-4      	; 0x1bc6 <lcd_send_command+0x84c>
    1bca:	9b 83       	std	Y+3, r25	; 0x03
    1bcc:	8a 83       	std	Y+2, r24	; 0x02
    1bce:	0f c0       	rjmp	.+30     	; 0x1bee <lcd_send_command+0x874>
    1bd0:	69 89       	ldd	r22, Y+17	; 0x11
    1bd2:	7a 89       	ldd	r23, Y+18	; 0x12
    1bd4:	8b 89       	ldd	r24, Y+19	; 0x13
    1bd6:	9c 89       	ldd	r25, Y+20	; 0x14
    1bd8:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1bdc:	dc 01       	movw	r26, r24
    1bde:	cb 01       	movw	r24, r22
    1be0:	88 8b       	std	Y+16, r24	; 0x10
    1be2:	88 89       	ldd	r24, Y+16	; 0x10
    1be4:	89 83       	std	Y+1, r24	; 0x01
    1be6:	89 81       	ldd	r24, Y+1	; 0x01
    1be8:	8a 95       	dec	r24
    1bea:	f1 f7       	brne	.-4      	; 0x1be8 <lcd_send_command+0x86e>
    1bec:	89 83       	std	Y+1, r24	; 0x01
    1bee:	cd 59       	subi	r28, 0x9D	; 157
    1bf0:	df 4f       	sbci	r29, 0xFF	; 255
    1bf2:	0f b6       	in	r0, 0x3f	; 63
    1bf4:	f8 94       	cli
    1bf6:	de bf       	out	0x3e, r29	; 62
    1bf8:	0f be       	out	0x3f, r0	; 63
    1bfa:	cd bf       	out	0x3d, r28	; 61
    1bfc:	cf 91       	pop	r28
    1bfe:	df 91       	pop	r29
    1c00:	1f 91       	pop	r17
    1c02:	0f 91       	pop	r16
    1c04:	08 95       	ret

00001c06 <lcd_send_data>:
	_delay_us(100);
}
void lcd_send_data(gcfg_lcd_t * lcd, u8 data) {
    1c06:	0f 93       	push	r16
    1c08:	1f 93       	push	r17
    1c0a:	df 93       	push	r29
    1c0c:	cf 93       	push	r28
    1c0e:	cd b7       	in	r28, 0x3d	; 61
    1c10:	de b7       	in	r29, 0x3e	; 62
    1c12:	c3 56       	subi	r28, 0x63	; 99
    1c14:	d0 40       	sbci	r29, 0x00	; 0
    1c16:	0f b6       	in	r0, 0x3f	; 63
    1c18:	f8 94       	cli
    1c1a:	de bf       	out	0x3e, r29	; 62
    1c1c:	0f be       	out	0x3f, r0	; 63
    1c1e:	cd bf       	out	0x3d, r28	; 61
    1c20:	fe 01       	movw	r30, r28
    1c22:	ef 59       	subi	r30, 0x9F	; 159
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	91 83       	std	Z+1, r25	; 0x01
    1c28:	80 83       	st	Z, r24
    1c2a:	fe 01       	movw	r30, r28
    1c2c:	ed 59       	subi	r30, 0x9D	; 157
    1c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c30:	60 83       	st	Z, r22
	DIO_set_pin(lcd->controlPort, (lcd->RS));
    1c32:	fe 01       	movw	r30, r28
    1c34:	ef 59       	subi	r30, 0x9F	; 159
    1c36:	ff 4f       	sbci	r31, 0xFF	; 255
    1c38:	01 90       	ld	r0, Z+
    1c3a:	f0 81       	ld	r31, Z
    1c3c:	e0 2d       	mov	r30, r0
    1c3e:	82 81       	ldd	r24, Z+2	; 0x02
    1c40:	fe 01       	movw	r30, r28
    1c42:	ef 59       	subi	r30, 0x9F	; 159
    1c44:	ff 4f       	sbci	r31, 0xFF	; 255
    1c46:	01 90       	ld	r0, Z+
    1c48:	f0 81       	ld	r31, Z
    1c4a:	e0 2d       	mov	r30, r0
    1c4c:	93 81       	ldd	r25, Z+3	; 0x03
    1c4e:	69 2f       	mov	r22, r25
    1c50:	c8 d8       	rcall	.-3696   	; 0xde2 <DIO_set_pin>
    1c52:	fe 01       	movw	r30, r28
	DIO_clear_pin(lcd->controlPort, (lcd->RW));
    1c54:	ef 59       	subi	r30, 0x9F	; 159
    1c56:	ff 4f       	sbci	r31, 0xFF	; 255
    1c58:	01 90       	ld	r0, Z+
    1c5a:	f0 81       	ld	r31, Z
    1c5c:	e0 2d       	mov	r30, r0
    1c5e:	82 81       	ldd	r24, Z+2	; 0x02
    1c60:	fe 01       	movw	r30, r28
    1c62:	ef 59       	subi	r30, 0x9F	; 159
    1c64:	ff 4f       	sbci	r31, 0xFF	; 255
    1c66:	01 90       	ld	r0, Z+
    1c68:	f0 81       	ld	r31, Z
    1c6a:	e0 2d       	mov	r30, r0
    1c6c:	94 81       	ldd	r25, Z+4	; 0x04
    1c6e:	69 2f       	mov	r22, r25
    1c70:	dd d8       	rcall	.-3654   	; 0xe2c <DIO_clear_pin>
    1c72:	fe 01       	movw	r30, r28
    1c74:	ef 59       	subi	r30, 0x9F	; 159

	if (lcd->nbit == n4BIT_MODE) {
    1c76:	ff 4f       	sbci	r31, 0xFF	; 255
    1c78:	01 90       	ld	r0, Z+
    1c7a:	f0 81       	ld	r31, Z
    1c7c:	e0 2d       	mov	r30, r0
    1c7e:	80 81       	ld	r24, Z
    1c80:	81 30       	cpi	r24, 0x01	; 1
    1c82:	09 f0       	breq	.+2      	; 0x1c86 <lcd_send_data+0x80>
    1c84:	52 c2       	rjmp	.+1188   	; 0x212a <lcd_send_data+0x524>
    1c86:	fe 01       	movw	r30, r28
    1c88:	ef 59       	subi	r30, 0x9F	; 159
		DIO_write_port(lcd->dataPort, 0xF0, (data & 0xF0));
    1c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8c:	01 90       	ld	r0, Z+
    1c8e:	f0 81       	ld	r31, Z
    1c90:	e0 2d       	mov	r30, r0
    1c92:	21 81       	ldd	r18, Z+1	; 0x01
    1c94:	fe 01       	movw	r30, r28
    1c96:	ed 59       	subi	r30, 0x9D	; 157
    1c98:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9a:	80 81       	ld	r24, Z
    1c9c:	98 2f       	mov	r25, r24
    1c9e:	90 7f       	andi	r25, 0xF0	; 240
    1ca0:	82 2f       	mov	r24, r18
    1ca2:	60 ef       	ldi	r22, 0xF0	; 240
    1ca4:	49 2f       	mov	r20, r25
    1ca6:	38 d8       	rcall	.-3984   	; 0xd18 <DIO_write_port>
    1ca8:	fe 01       	movw	r30, r28
    1caa:	ef 59       	subi	r30, 0x9F	; 159
    1cac:	ff 4f       	sbci	r31, 0xFF	; 255
		DIO_set_pin(lcd->controlPort, (lcd->EN));
    1cae:	01 90       	ld	r0, Z+
    1cb0:	f0 81       	ld	r31, Z
    1cb2:	e0 2d       	mov	r30, r0
    1cb4:	82 81       	ldd	r24, Z+2	; 0x02
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	ef 59       	subi	r30, 0x9F	; 159
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	01 90       	ld	r0, Z+
    1cbe:	f0 81       	ld	r31, Z
    1cc0:	e0 2d       	mov	r30, r0
    1cc2:	95 81       	ldd	r25, Z+5	; 0x05
    1cc4:	69 2f       	mov	r22, r25
    1cc6:	8d d8       	rcall	.-3814   	; 0xde2 <DIO_set_pin>
    1cc8:	fe 01       	movw	r30, r28
    1cca:	e3 5a       	subi	r30, 0xA3	; 163
    1ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cce:	80 e0       	ldi	r24, 0x00	; 0
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	a0 e8       	ldi	r26, 0x80	; 128
    1cd4:	bf e3       	ldi	r27, 0x3F	; 63
    1cd6:	80 83       	st	Z, r24
    1cd8:	91 83       	std	Z+1, r25	; 0x01
    1cda:	a2 83       	std	Z+2, r26	; 0x02
    1cdc:	b3 83       	std	Z+3, r27	; 0x03
    1cde:	8e 01       	movw	r16, r28
    1ce0:	07 5a       	subi	r16, 0xA7	; 167
    1ce2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ce4:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1ce6:	e3 5a       	subi	r30, 0xA3	; 163
    1ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cea:	60 81       	ld	r22, Z
    1cec:	71 81       	ldd	r23, Z+1	; 0x01
    1cee:	82 81       	ldd	r24, Z+2	; 0x02
    1cf0:	93 81       	ldd	r25, Z+3	; 0x03
    1cf2:	2b ea       	ldi	r18, 0xAB	; 171
    1cf4:	3a ea       	ldi	r19, 0xAA	; 170
    1cf6:	4a ea       	ldi	r20, 0xAA	; 170
    1cf8:	5e e3       	ldi	r21, 0x3E	; 62
    1cfa:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1cfe:	dc 01       	movw	r26, r24
    1d00:	cb 01       	movw	r24, r22
    1d02:	f8 01       	movw	r30, r16
    1d04:	80 83       	st	Z, r24
    1d06:	91 83       	std	Z+1, r25	; 0x01
    1d08:	a2 83       	std	Z+2, r26	; 0x02
    1d0a:	b3 83       	std	Z+3, r27	; 0x03
    1d0c:	fe 01       	movw	r30, r28
    1d0e:	e7 5a       	subi	r30, 0xA7	; 167
    1d10:	ff 4f       	sbci	r31, 0xFF	; 255
    1d12:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    1d14:	71 81       	ldd	r23, Z+1	; 0x01
    1d16:	82 81       	ldd	r24, Z+2	; 0x02
    1d18:	93 81       	ldd	r25, Z+3	; 0x03
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	40 e8       	ldi	r20, 0x80	; 128
    1d20:	5f e3       	ldi	r21, 0x3F	; 63
    1d22:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1d26:	88 23       	and	r24, r24
    1d28:	34 f4       	brge	.+12     	; 0x1d36 <lcd_send_data+0x130>
    1d2a:	fe 01       	movw	r30, r28
    1d2c:	e8 5a       	subi	r30, 0xA8	; 168
    1d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d30:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    1d32:	80 83       	st	Z, r24
    1d34:	e0 c0       	rjmp	.+448    	; 0x1ef6 <lcd_send_data+0x2f0>
    1d36:	fe 01       	movw	r30, r28
    1d38:	e7 5a       	subi	r30, 0xA7	; 167
    1d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3c:	60 81       	ld	r22, Z
	else if (__tmp > 255)
    1d3e:	71 81       	ldd	r23, Z+1	; 0x01
    1d40:	82 81       	ldd	r24, Z+2	; 0x02
    1d42:	93 81       	ldd	r25, Z+3	; 0x03
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	30 e0       	ldi	r19, 0x00	; 0
    1d48:	4f e7       	ldi	r20, 0x7F	; 127
    1d4a:	53 e4       	ldi	r21, 0x43	; 67
    1d4c:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1d50:	18 16       	cp	r1, r24
    1d52:	0c f0       	brlt	.+2      	; 0x1d56 <lcd_send_data+0x150>
    1d54:	c0 c0       	rjmp	.+384    	; 0x1ed6 <lcd_send_data+0x2d0>
    1d56:	fe 01       	movw	r30, r28
    1d58:	e3 5a       	subi	r30, 0xA3	; 163
    1d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5c:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
    1d5e:	71 81       	ldd	r23, Z+1	; 0x01
    1d60:	82 81       	ldd	r24, Z+2	; 0x02
    1d62:	93 81       	ldd	r25, Z+3	; 0x03
    1d64:	20 e0       	ldi	r18, 0x00	; 0
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	4a e7       	ldi	r20, 0x7A	; 122
    1d6a:	54 e4       	ldi	r21, 0x44	; 68
    1d6c:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    1d70:	dc 01       	movw	r26, r24
    1d72:	cb 01       	movw	r24, r22
    1d74:	fe 01       	movw	r30, r28
    1d76:	ec 5a       	subi	r30, 0xAC	; 172
    1d78:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7a:	80 83       	st	Z, r24
    1d7c:	91 83       	std	Z+1, r25	; 0x01
    1d7e:	a2 83       	std	Z+2, r26	; 0x02
    1d80:	b3 83       	std	Z+3, r27	; 0x03
    1d82:	8e 01       	movw	r16, r28
    1d84:	00 5b       	subi	r16, 0xB0	; 176
    1d86:	1f 4f       	sbci	r17, 0xFF	; 255
    1d88:	fe 01       	movw	r30, r28
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d8a:	ec 5a       	subi	r30, 0xAC	; 172
    1d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8e:	60 81       	ld	r22, Z
    1d90:	71 81       	ldd	r23, Z+1	; 0x01
    1d92:	82 81       	ldd	r24, Z+2	; 0x02
    1d94:	93 81       	ldd	r25, Z+3	; 0x03
    1d96:	20 e0       	ldi	r18, 0x00	; 0
    1d98:	30 e0       	ldi	r19, 0x00	; 0
    1d9a:	4a e7       	ldi	r20, 0x7A	; 122
    1d9c:	53 e4       	ldi	r21, 0x43	; 67
    1d9e:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1da2:	dc 01       	movw	r26, r24
    1da4:	cb 01       	movw	r24, r22
    1da6:	f8 01       	movw	r30, r16
    1da8:	80 83       	st	Z, r24
    1daa:	91 83       	std	Z+1, r25	; 0x01
    1dac:	a2 83       	std	Z+2, r26	; 0x02
    1dae:	b3 83       	std	Z+3, r27	; 0x03
    1db0:	fe 01       	movw	r30, r28
    1db2:	e0 5b       	subi	r30, 0xB0	; 176
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    1db8:	71 81       	ldd	r23, Z+1	; 0x01
    1dba:	82 81       	ldd	r24, Z+2	; 0x02
    1dbc:	93 81       	ldd	r25, Z+3	; 0x03
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	40 e8       	ldi	r20, 0x80	; 128
    1dc4:	5f e3       	ldi	r21, 0x3F	; 63
    1dc6:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1dca:	88 23       	and	r24, r24
    1dcc:	44 f4       	brge	.+16     	; 0x1dde <lcd_send_data+0x1d8>
    1dce:	fe 01       	movw	r30, r28
    1dd0:	e2 5b       	subi	r30, 0xB2	; 178
    1dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd4:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	91 83       	std	Z+1, r25	; 0x01
    1dda:	80 83       	st	Z, r24
    1ddc:	64 c0       	rjmp	.+200    	; 0x1ea6 <lcd_send_data+0x2a0>
    1dde:	fe 01       	movw	r30, r28
    1de0:	e0 5b       	subi	r30, 0xB0	; 176
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	60 81       	ld	r22, Z
	else if (__tmp > 65535)
    1de6:	71 81       	ldd	r23, Z+1	; 0x01
    1de8:	82 81       	ldd	r24, Z+2	; 0x02
    1dea:	93 81       	ldd	r25, Z+3	; 0x03
    1dec:	20 e0       	ldi	r18, 0x00	; 0
    1dee:	3f ef       	ldi	r19, 0xFF	; 255
    1df0:	4f e7       	ldi	r20, 0x7F	; 127
    1df2:	57 e4       	ldi	r21, 0x47	; 71
    1df4:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1df8:	18 16       	cp	r1, r24
    1dfa:	0c f0       	brlt	.+2      	; 0x1dfe <lcd_send_data+0x1f8>
    1dfc:	43 c0       	rjmp	.+134    	; 0x1e84 <lcd_send_data+0x27e>
    1dfe:	fe 01       	movw	r30, r28
    1e00:	ec 5a       	subi	r30, 0xAC	; 172
    1e02:	ff 4f       	sbci	r31, 0xFF	; 255
    1e04:	60 81       	ld	r22, Z
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e06:	71 81       	ldd	r23, Z+1	; 0x01
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	40 e2       	ldi	r20, 0x20	; 32
    1e12:	51 e4       	ldi	r21, 0x41	; 65
    1e14:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1e18:	dc 01       	movw	r26, r24
    1e1a:	cb 01       	movw	r24, r22
    1e1c:	8e 01       	movw	r16, r28
    1e1e:	02 5b       	subi	r16, 0xB2	; 178
    1e20:	1f 4f       	sbci	r17, 0xFF	; 255
    1e22:	bc 01       	movw	r22, r24
    1e24:	cd 01       	movw	r24, r26
    1e26:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1e2a:	dc 01       	movw	r26, r24
    1e2c:	cb 01       	movw	r24, r22
    1e2e:	f8 01       	movw	r30, r16
    1e30:	91 83       	std	Z+1, r25	; 0x01
    1e32:	80 83       	st	Z, r24
    1e34:	1f c0       	rjmp	.+62     	; 0x1e74 <lcd_send_data+0x26e>
    1e36:	fe 01       	movw	r30, r28
    1e38:	e4 5b       	subi	r30, 0xB4	; 180
    1e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3c:	89 e1       	ldi	r24, 0x19	; 25
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	91 83       	std	Z+1, r25	; 0x01
    1e42:	80 83       	st	Z, r24
    1e44:	fe 01       	movw	r30, r28
    1e46:	e4 5b       	subi	r30, 0xB4	; 180
    1e48:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4a:	80 81       	ld	r24, Z
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e4c:	91 81       	ldd	r25, Z+1	; 0x01
    1e4e:	01 97       	sbiw	r24, 0x01	; 1
    1e50:	f1 f7       	brne	.-4      	; 0x1e4e <lcd_send_data+0x248>
    1e52:	fe 01       	movw	r30, r28
    1e54:	e4 5b       	subi	r30, 0xB4	; 180
    1e56:	ff 4f       	sbci	r31, 0xFF	; 255
    1e58:	91 83       	std	Z+1, r25	; 0x01
    1e5a:	80 83       	st	Z, r24
    1e5c:	de 01       	movw	r26, r28
    1e5e:	a2 5b       	subi	r26, 0xB2	; 178
    1e60:	bf 4f       	sbci	r27, 0xFF	; 255
    1e62:	fe 01       	movw	r30, r28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e64:	e2 5b       	subi	r30, 0xB2	; 178
    1e66:	ff 4f       	sbci	r31, 0xFF	; 255
    1e68:	80 81       	ld	r24, Z
    1e6a:	91 81       	ldd	r25, Z+1	; 0x01
    1e6c:	01 97       	sbiw	r24, 0x01	; 1
    1e6e:	11 96       	adiw	r26, 0x01	; 1
    1e70:	9c 93       	st	X, r25
    1e72:	8e 93       	st	-X, r24
    1e74:	fe 01       	movw	r30, r28
    1e76:	e2 5b       	subi	r30, 0xB2	; 178
    1e78:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7a:	80 81       	ld	r24, Z
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e7c:	91 81       	ldd	r25, Z+1	; 0x01
    1e7e:	00 97       	sbiw	r24, 0x00	; 0
    1e80:	d1 f6       	brne	.-76     	; 0x1e36 <lcd_send_data+0x230>
    1e82:	4b c0       	rjmp	.+150    	; 0x1f1a <lcd_send_data+0x314>
    1e84:	8e 01       	movw	r16, r28
    1e86:	02 5b       	subi	r16, 0xB2	; 178
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	fe 01       	movw	r30, r28
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e8c:	e0 5b       	subi	r30, 0xB0	; 176
    1e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e90:	60 81       	ld	r22, Z
    1e92:	71 81       	ldd	r23, Z+1	; 0x01
    1e94:	82 81       	ldd	r24, Z+2	; 0x02
    1e96:	93 81       	ldd	r25, Z+3	; 0x03
    1e98:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1e9c:	dc 01       	movw	r26, r24
    1e9e:	cb 01       	movw	r24, r22
    1ea0:	f8 01       	movw	r30, r16
    1ea2:	91 83       	std	Z+1, r25	; 0x01
    1ea4:	80 83       	st	Z, r24
    1ea6:	de 01       	movw	r26, r28
    1ea8:	a6 5b       	subi	r26, 0xB6	; 182
    1eaa:	bf 4f       	sbci	r27, 0xFF	; 255
    1eac:	fe 01       	movw	r30, r28
    1eae:	e2 5b       	subi	r30, 0xB2	; 178
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	80 81       	ld	r24, Z
    1eb4:	91 81       	ldd	r25, Z+1	; 0x01
    1eb6:	11 96       	adiw	r26, 0x01	; 1
    1eb8:	9c 93       	st	X, r25
    1eba:	8e 93       	st	-X, r24
    1ebc:	fe 01       	movw	r30, r28
    1ebe:	e6 5b       	subi	r30, 0xB6	; 182
    1ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec2:	80 81       	ld	r24, Z
    1ec4:	91 81       	ldd	r25, Z+1	; 0x01
    1ec6:	01 97       	sbiw	r24, 0x01	; 1
    1ec8:	f1 f7       	brne	.-4      	; 0x1ec6 <lcd_send_data+0x2c0>
    1eca:	fe 01       	movw	r30, r28
    1ecc:	e6 5b       	subi	r30, 0xB6	; 182
    1ece:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed0:	91 83       	std	Z+1, r25	; 0x01
    1ed2:	80 83       	st	Z, r24
    1ed4:	22 c0       	rjmp	.+68     	; 0x1f1a <lcd_send_data+0x314>
    1ed6:	8e 01       	movw	r16, r28
    1ed8:	08 5a       	subi	r16, 0xA8	; 168
    1eda:	1f 4f       	sbci	r17, 0xFF	; 255
    1edc:	fe 01       	movw	r30, r28
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1ede:	e7 5a       	subi	r30, 0xA7	; 167
    1ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee2:	60 81       	ld	r22, Z
    1ee4:	71 81       	ldd	r23, Z+1	; 0x01
    1ee6:	82 81       	ldd	r24, Z+2	; 0x02
    1ee8:	93 81       	ldd	r25, Z+3	; 0x03
    1eea:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1eee:	dc 01       	movw	r26, r24
    1ef0:	cb 01       	movw	r24, r22
    1ef2:	f8 01       	movw	r30, r16
    1ef4:	80 83       	st	Z, r24
    1ef6:	de 01       	movw	r26, r28
    1ef8:	a7 5b       	subi	r26, 0xB7	; 183
    1efa:	bf 4f       	sbci	r27, 0xFF	; 255
    1efc:	fe 01       	movw	r30, r28
    1efe:	e8 5a       	subi	r30, 0xA8	; 168
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	8c 93       	st	X, r24
    1f06:	fe 01       	movw	r30, r28
    1f08:	e7 5b       	subi	r30, 0xB7	; 183
    1f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0c:	80 81       	ld	r24, Z
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1f0e:	8a 95       	dec	r24
    1f10:	f1 f7       	brne	.-4      	; 0x1f0e <lcd_send_data+0x308>
    1f12:	fe 01       	movw	r30, r28
    1f14:	e7 5b       	subi	r30, 0xB7	; 183
    1f16:	ff 4f       	sbci	r31, 0xFF	; 255
    1f18:	80 83       	st	Z, r24
    1f1a:	fe 01       	movw	r30, r28
    1f1c:	ef 59       	subi	r30, 0x9F	; 159
    1f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f20:	01 90       	ld	r0, Z+
		_delay_us(1);
		DIO_clear_pin(lcd->controlPort, (lcd->EN));
    1f22:	f0 81       	ld	r31, Z
    1f24:	e0 2d       	mov	r30, r0
    1f26:	82 81       	ldd	r24, Z+2	; 0x02
    1f28:	fe 01       	movw	r30, r28
    1f2a:	ef 59       	subi	r30, 0x9F	; 159
    1f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2e:	01 90       	ld	r0, Z+
    1f30:	f0 81       	ld	r31, Z
    1f32:	e0 2d       	mov	r30, r0
    1f34:	95 81       	ldd	r25, Z+5	; 0x05
    1f36:	69 2f       	mov	r22, r25
    1f38:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_clear_pin>
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	eb 5b       	subi	r30, 0xBB	; 187
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	80 e0       	ldi	r24, 0x00	; 0
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	a8 ec       	ldi	r26, 0xC8	; 200
    1f48:	b2 e4       	ldi	r27, 0x42	; 66
    1f4a:	80 83       	st	Z, r24
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	a2 83       	std	Z+2, r26	; 0x02
    1f50:	b3 83       	std	Z+3, r27	; 0x03
    1f52:	8e 01       	movw	r16, r28
    1f54:	0f 5b       	subi	r16, 0xBF	; 191
    1f56:	1f 4f       	sbci	r17, 0xFF	; 255
    1f58:	fe 01       	movw	r30, r28
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1f5a:	eb 5b       	subi	r30, 0xBB	; 187
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	60 81       	ld	r22, Z
    1f60:	71 81       	ldd	r23, Z+1	; 0x01
    1f62:	82 81       	ldd	r24, Z+2	; 0x02
    1f64:	93 81       	ldd	r25, Z+3	; 0x03
    1f66:	2b ea       	ldi	r18, 0xAB	; 171
    1f68:	3a ea       	ldi	r19, 0xAA	; 170
    1f6a:	4a ea       	ldi	r20, 0xAA	; 170
    1f6c:	5e e3       	ldi	r21, 0x3E	; 62
    1f6e:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1f72:	dc 01       	movw	r26, r24
    1f74:	cb 01       	movw	r24, r22
    1f76:	f8 01       	movw	r30, r16
    1f78:	80 83       	st	Z, r24
    1f7a:	91 83       	std	Z+1, r25	; 0x01
    1f7c:	a2 83       	std	Z+2, r26	; 0x02
    1f7e:	b3 83       	std	Z+3, r27	; 0x03
    1f80:	fe 01       	movw	r30, r28
    1f82:	ef 5b       	subi	r30, 0xBF	; 191
    1f84:	ff 4f       	sbci	r31, 0xFF	; 255
    1f86:	60 81       	ld	r22, Z
	if (__tmp < 1.0)
    1f88:	71 81       	ldd	r23, Z+1	; 0x01
    1f8a:	82 81       	ldd	r24, Z+2	; 0x02
    1f8c:	93 81       	ldd	r25, Z+3	; 0x03
    1f8e:	20 e0       	ldi	r18, 0x00	; 0
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	40 e8       	ldi	r20, 0x80	; 128
    1f94:	5f e3       	ldi	r21, 0x3F	; 63
    1f96:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1f9a:	88 23       	and	r24, r24
    1f9c:	34 f4       	brge	.+12     	; 0x1faa <lcd_send_data+0x3a4>
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	e0 5c       	subi	r30, 0xC0	; 192
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
		__ticks = 1;
    1fa6:	80 83       	st	Z, r24
    1fa8:	9d c0       	rjmp	.+314    	; 0x20e4 <lcd_send_data+0x4de>
    1faa:	fe 01       	movw	r30, r28
    1fac:	ef 5b       	subi	r30, 0xBF	; 191
    1fae:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb0:	60 81       	ld	r22, Z
	else if (__tmp > 255)
    1fb2:	71 81       	ldd	r23, Z+1	; 0x01
    1fb4:	82 81       	ldd	r24, Z+2	; 0x02
    1fb6:	93 81       	ldd	r25, Z+3	; 0x03
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	4f e7       	ldi	r20, 0x7F	; 127
    1fbe:	53 e4       	ldi	r21, 0x43	; 67
    1fc0:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1fc4:	18 16       	cp	r1, r24
    1fc6:	0c f0       	brlt	.+2      	; 0x1fca <lcd_send_data+0x3c4>
    1fc8:	7e c0       	rjmp	.+252    	; 0x20c6 <lcd_send_data+0x4c0>
    1fca:	fe 01       	movw	r30, r28
    1fcc:	eb 5b       	subi	r30, 0xBB	; 187
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
    1fd2:	71 81       	ldd	r23, Z+1	; 0x01
    1fd4:	82 81       	ldd	r24, Z+2	; 0x02
    1fd6:	93 81       	ldd	r25, Z+3	; 0x03
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	4a e7       	ldi	r20, 0x7A	; 122
    1fde:	54 e4       	ldi	r21, 0x44	; 68
    1fe0:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    1fe4:	dc 01       	movw	r26, r24
    1fe6:	cb 01       	movw	r24, r22
    1fe8:	8c af       	std	Y+60, r24	; 0x3c
    1fea:	9d af       	std	Y+61, r25	; 0x3d
    1fec:	ae af       	std	Y+62, r26	; 0x3e
    1fee:	bf af       	std	Y+63, r27	; 0x3f
    1ff0:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ff2:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ff4:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ff6:	9f ad       	ldd	r25, Y+63	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ff8:	20 e0       	ldi	r18, 0x00	; 0
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	4a e7       	ldi	r20, 0x7A	; 122
    1ffe:	53 e4       	ldi	r21, 0x43	; 67
    2000:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    2004:	dc 01       	movw	r26, r24
    2006:	cb 01       	movw	r24, r22
    2008:	88 af       	std	Y+56, r24	; 0x38
    200a:	99 af       	std	Y+57, r25	; 0x39
    200c:	aa af       	std	Y+58, r26	; 0x3a
    200e:	bb af       	std	Y+59, r27	; 0x3b
    2010:	68 ad       	ldd	r22, Y+56	; 0x38
    2012:	79 ad       	ldd	r23, Y+57	; 0x39
    2014:	8a ad       	ldd	r24, Y+58	; 0x3a
    2016:	9b ad       	ldd	r25, Y+59	; 0x3b
	if (__tmp < 1.0)
    2018:	20 e0       	ldi	r18, 0x00	; 0
    201a:	30 e0       	ldi	r19, 0x00	; 0
    201c:	40 e8       	ldi	r20, 0x80	; 128
    201e:	5f e3       	ldi	r21, 0x3F	; 63
    2020:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    2024:	88 23       	and	r24, r24
    2026:	2c f4       	brge	.+10     	; 0x2032 <lcd_send_data+0x42c>
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	9f ab       	std	Y+55, r25	; 0x37
    202e:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
    2030:	3f c0       	rjmp	.+126    	; 0x20b0 <lcd_send_data+0x4aa>
    2032:	68 ad       	ldd	r22, Y+56	; 0x38
    2034:	79 ad       	ldd	r23, Y+57	; 0x39
    2036:	8a ad       	ldd	r24, Y+58	; 0x3a
    2038:	9b ad       	ldd	r25, Y+59	; 0x3b
	else if (__tmp > 65535)
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	3f ef       	ldi	r19, 0xFF	; 255
    203e:	4f e7       	ldi	r20, 0x7F	; 127
    2040:	57 e4       	ldi	r21, 0x47	; 71
    2042:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    2046:	18 16       	cp	r1, r24
    2048:	4c f5       	brge	.+82     	; 0x209c <lcd_send_data+0x496>
    204a:	6c ad       	ldd	r22, Y+60	; 0x3c
    204c:	7d ad       	ldd	r23, Y+61	; 0x3d
    204e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2050:	9f ad       	ldd	r25, Y+63	; 0x3f
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	40 e2       	ldi	r20, 0x20	; 32
    2058:	51 e4       	ldi	r21, 0x41	; 65
    205a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    205e:	dc 01       	movw	r26, r24
    2060:	cb 01       	movw	r24, r22
    2062:	bc 01       	movw	r22, r24
    2064:	cd 01       	movw	r24, r26
    2066:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    206a:	dc 01       	movw	r26, r24
    206c:	cb 01       	movw	r24, r22
    206e:	9f ab       	std	Y+55, r25	; 0x37
    2070:	8e ab       	std	Y+54, r24	; 0x36
    2072:	0f c0       	rjmp	.+30     	; 0x2092 <lcd_send_data+0x48c>
    2074:	89 e1       	ldi	r24, 0x19	; 25
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	9d ab       	std	Y+53, r25	; 0x35
    207a:	8c ab       	std	Y+52, r24	; 0x34
    207c:	8c a9       	ldd	r24, Y+52	; 0x34
    207e:	9d a9       	ldd	r25, Y+53	; 0x35
    2080:	01 97       	sbiw	r24, 0x01	; 1
    2082:	f1 f7       	brne	.-4      	; 0x2080 <lcd_send_data+0x47a>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2084:	9d ab       	std	Y+53, r25	; 0x35
    2086:	8c ab       	std	Y+52, r24	; 0x34
    2088:	8e a9       	ldd	r24, Y+54	; 0x36
    208a:	9f a9       	ldd	r25, Y+55	; 0x37
    208c:	01 97       	sbiw	r24, 0x01	; 1
    208e:	9f ab       	std	Y+55, r25	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2090:	8e ab       	std	Y+54, r24	; 0x36
    2092:	8e a9       	ldd	r24, Y+54	; 0x36
    2094:	9f a9       	ldd	r25, Y+55	; 0x37
    2096:	00 97       	sbiw	r24, 0x00	; 0
    2098:	69 f7       	brne	.-38     	; 0x2074 <lcd_send_data+0x46e>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    209a:	2d c0       	rjmp	.+90     	; 0x20f6 <lcd_send_data+0x4f0>
    209c:	68 ad       	ldd	r22, Y+56	; 0x38
    209e:	79 ad       	ldd	r23, Y+57	; 0x39
    20a0:	8a ad       	ldd	r24, Y+58	; 0x3a
    20a2:	9b ad       	ldd	r25, Y+59	; 0x3b
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20a4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    20a8:	dc 01       	movw	r26, r24
    20aa:	cb 01       	movw	r24, r22
    20ac:	9f ab       	std	Y+55, r25	; 0x37
    20ae:	8e ab       	std	Y+54, r24	; 0x36
    20b0:	8e a9       	ldd	r24, Y+54	; 0x36
    20b2:	9f a9       	ldd	r25, Y+55	; 0x37
    20b4:	9b ab       	std	Y+51, r25	; 0x33
    20b6:	8a ab       	std	Y+50, r24	; 0x32
    20b8:	8a a9       	ldd	r24, Y+50	; 0x32
    20ba:	9b a9       	ldd	r25, Y+51	; 0x33
    20bc:	01 97       	sbiw	r24, 0x01	; 1
    20be:	f1 f7       	brne	.-4      	; 0x20bc <lcd_send_data+0x4b6>
    20c0:	9b ab       	std	Y+51, r25	; 0x33
    20c2:	8a ab       	std	Y+50, r24	; 0x32
    20c4:	18 c0       	rjmp	.+48     	; 0x20f6 <lcd_send_data+0x4f0>
    20c6:	fe 01       	movw	r30, r28
    20c8:	ef 5b       	subi	r30, 0xBF	; 191
    20ca:	ff 4f       	sbci	r31, 0xFF	; 255
    20cc:	60 81       	ld	r22, Z
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    20ce:	71 81       	ldd	r23, Z+1	; 0x01
    20d0:	82 81       	ldd	r24, Z+2	; 0x02
    20d2:	93 81       	ldd	r25, Z+3	; 0x03
    20d4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	fe 01       	movw	r30, r28
    20de:	e0 5c       	subi	r30, 0xC0	; 192
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	80 83       	st	Z, r24
    20e4:	fe 01       	movw	r30, r28
    20e6:	e0 5c       	subi	r30, 0xC0	; 192
    20e8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ea:	80 81       	ld	r24, Z
    20ec:	89 ab       	std	Y+49, r24	; 0x31
    20ee:	89 a9       	ldd	r24, Y+49	; 0x31
    20f0:	8a 95       	dec	r24
    20f2:	f1 f7       	brne	.-4      	; 0x20f0 <lcd_send_data+0x4ea>
    20f4:	89 ab       	std	Y+49, r24	; 0x31
    20f6:	fe 01       	movw	r30, r28
    20f8:	ef 59       	subi	r30, 0x9F	; 159
    20fa:	ff 4f       	sbci	r31, 0xFF	; 255
    20fc:	01 90       	ld	r0, Z+
		_delay_us(100);
		DIO_write_port(lcd->dataPort, 0xF0, (data & 0xF) << 4);
    20fe:	f0 81       	ld	r31, Z
    2100:	e0 2d       	mov	r30, r0
    2102:	21 81       	ldd	r18, Z+1	; 0x01
    2104:	fe 01       	movw	r30, r28
    2106:	ed 59       	subi	r30, 0x9D	; 157
    2108:	ff 4f       	sbci	r31, 0xFF	; 255
    210a:	80 81       	ld	r24, Z
    210c:	88 2f       	mov	r24, r24
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	82 95       	swap	r24
    2112:	92 95       	swap	r25
    2114:	90 7f       	andi	r25, 0xF0	; 240
    2116:	98 27       	eor	r25, r24
    2118:	80 7f       	andi	r24, 0xF0	; 240
    211a:	98 27       	eor	r25, r24
    211c:	98 2f       	mov	r25, r24
    211e:	82 2f       	mov	r24, r18
    2120:	60 ef       	ldi	r22, 0xF0	; 240
    2122:	49 2f       	mov	r20, r25
    2124:	0e 94 8c 06 	call	0xd18	; 0xd18 <DIO_write_port>
    2128:	17 c0       	rjmp	.+46     	; 0x2158 <lcd_send_data+0x552>
    212a:	fe 01       	movw	r30, r28
    212c:	ef 59       	subi	r30, 0x9F	; 159
    212e:	ff 4f       	sbci	r31, 0xFF	; 255
    2130:	01 90       	ld	r0, Z+
	} else if (lcd->nbit == n8BIT_MODE) {
    2132:	f0 81       	ld	r31, Z
    2134:	e0 2d       	mov	r30, r0
    2136:	80 81       	ld	r24, Z
    2138:	82 30       	cpi	r24, 0x02	; 2
    213a:	71 f4       	brne	.+28     	; 0x2158 <lcd_send_data+0x552>
    213c:	fe 01       	movw	r30, r28
    213e:	ef 59       	subi	r30, 0x9F	; 159
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	01 90       	ld	r0, Z+
		DIO_write_port(lcd->dataPort, 0xFF, data);
    2144:	f0 81       	ld	r31, Z
    2146:	e0 2d       	mov	r30, r0
    2148:	81 81       	ldd	r24, Z+1	; 0x01
    214a:	fe 01       	movw	r30, r28
    214c:	ed 59       	subi	r30, 0x9D	; 157
    214e:	ff 4f       	sbci	r31, 0xFF	; 255
    2150:	6f ef       	ldi	r22, 0xFF	; 255
    2152:	40 81       	ld	r20, Z
    2154:	0e 94 8c 06 	call	0xd18	; 0xd18 <DIO_write_port>
    2158:	fe 01       	movw	r30, r28
    215a:	ef 59       	subi	r30, 0x9F	; 159
    215c:	ff 4f       	sbci	r31, 0xFF	; 255
    215e:	01 90       	ld	r0, Z+
	} else {
		// todo error
	}
	DIO_set_pin(lcd->controlPort, (lcd->EN));
    2160:	f0 81       	ld	r31, Z
    2162:	e0 2d       	mov	r30, r0
    2164:	82 81       	ldd	r24, Z+2	; 0x02
    2166:	fe 01       	movw	r30, r28
    2168:	ef 59       	subi	r30, 0x9F	; 159
    216a:	ff 4f       	sbci	r31, 0xFF	; 255
    216c:	01 90       	ld	r0, Z+
    216e:	f0 81       	ld	r31, Z
    2170:	e0 2d       	mov	r30, r0
    2172:	95 81       	ldd	r25, Z+5	; 0x05
    2174:	69 2f       	mov	r22, r25
    2176:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_set_pin>
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	a0 e8       	ldi	r26, 0x80	; 128
    2180:	bf e3       	ldi	r27, 0x3F	; 63
    2182:	8d a7       	std	Y+45, r24	; 0x2d
    2184:	9e a7       	std	Y+46, r25	; 0x2e
    2186:	af a7       	std	Y+47, r26	; 0x2f
    2188:	b8 ab       	std	Y+48, r27	; 0x30
    218a:	6d a5       	ldd	r22, Y+45	; 0x2d
    218c:	7e a5       	ldd	r23, Y+46	; 0x2e
    218e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2190:	98 a9       	ldd	r25, Y+48	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2192:	2b ea       	ldi	r18, 0xAB	; 171
    2194:	3a ea       	ldi	r19, 0xAA	; 170
    2196:	4a ea       	ldi	r20, 0xAA	; 170
    2198:	5e e3       	ldi	r21, 0x3E	; 62
    219a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    219e:	dc 01       	movw	r26, r24
    21a0:	cb 01       	movw	r24, r22
    21a2:	89 a7       	std	Y+41, r24	; 0x29
    21a4:	9a a7       	std	Y+42, r25	; 0x2a
    21a6:	ab a7       	std	Y+43, r26	; 0x2b
    21a8:	bc a7       	std	Y+44, r27	; 0x2c
    21aa:	69 a5       	ldd	r22, Y+41	; 0x29
    21ac:	7a a5       	ldd	r23, Y+42	; 0x2a
    21ae:	8b a5       	ldd	r24, Y+43	; 0x2b
    21b0:	9c a5       	ldd	r25, Y+44	; 0x2c
	if (__tmp < 1.0)
    21b2:	20 e0       	ldi	r18, 0x00	; 0
    21b4:	30 e0       	ldi	r19, 0x00	; 0
    21b6:	40 e8       	ldi	r20, 0x80	; 128
    21b8:	5f e3       	ldi	r21, 0x3F	; 63
    21ba:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    21be:	88 23       	and	r24, r24
    21c0:	1c f4       	brge	.+6      	; 0x21c8 <lcd_send_data+0x5c2>
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	88 a7       	std	Y+40, r24	; 0x28
    21c6:	91 c0       	rjmp	.+290    	; 0x22ea <lcd_send_data+0x6e4>
    21c8:	69 a5       	ldd	r22, Y+41	; 0x29
		__ticks = 1;
    21ca:	7a a5       	ldd	r23, Y+42	; 0x2a
    21cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    21ce:	9c a5       	ldd	r25, Y+44	; 0x2c
	else if (__tmp > 255)
    21d0:	20 e0       	ldi	r18, 0x00	; 0
    21d2:	30 e0       	ldi	r19, 0x00	; 0
    21d4:	4f e7       	ldi	r20, 0x7F	; 127
    21d6:	53 e4       	ldi	r21, 0x43	; 67
    21d8:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    21dc:	18 16       	cp	r1, r24
    21de:	0c f0       	brlt	.+2      	; 0x21e2 <lcd_send_data+0x5dc>
    21e0:	7b c0       	rjmp	.+246    	; 0x22d8 <lcd_send_data+0x6d2>
    21e2:	6d a5       	ldd	r22, Y+45	; 0x2d
    21e4:	7e a5       	ldd	r23, Y+46	; 0x2e
    21e6:	8f a5       	ldd	r24, Y+47	; 0x2f
    21e8:	98 a9       	ldd	r25, Y+48	; 0x30
	{
		_delay_ms(__us / 1000.0);
    21ea:	20 e0       	ldi	r18, 0x00	; 0
    21ec:	30 e0       	ldi	r19, 0x00	; 0
    21ee:	4a e7       	ldi	r20, 0x7A	; 122
    21f0:	54 e4       	ldi	r21, 0x44	; 68
    21f2:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    21f6:	dc 01       	movw	r26, r24
    21f8:	cb 01       	movw	r24, r22
    21fa:	8c a3       	std	Y+36, r24	; 0x24
    21fc:	9d a3       	std	Y+37, r25	; 0x25
    21fe:	ae a3       	std	Y+38, r26	; 0x26
    2200:	bf a3       	std	Y+39, r27	; 0x27
    2202:	6c a1       	ldd	r22, Y+36	; 0x24
    2204:	7d a1       	ldd	r23, Y+37	; 0x25
    2206:	8e a1       	ldd	r24, Y+38	; 0x26
    2208:	9f a1       	ldd	r25, Y+39	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    220a:	20 e0       	ldi	r18, 0x00	; 0
    220c:	30 e0       	ldi	r19, 0x00	; 0
    220e:	4a e7       	ldi	r20, 0x7A	; 122
    2210:	53 e4       	ldi	r21, 0x43	; 67
    2212:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    2216:	dc 01       	movw	r26, r24
    2218:	cb 01       	movw	r24, r22
    221a:	88 a3       	std	Y+32, r24	; 0x20
    221c:	99 a3       	std	Y+33, r25	; 0x21
    221e:	aa a3       	std	Y+34, r26	; 0x22
    2220:	bb a3       	std	Y+35, r27	; 0x23
    2222:	68 a1       	ldd	r22, Y+32	; 0x20
    2224:	79 a1       	ldd	r23, Y+33	; 0x21
    2226:	8a a1       	ldd	r24, Y+34	; 0x22
    2228:	9b a1       	ldd	r25, Y+35	; 0x23
	if (__tmp < 1.0)
    222a:	20 e0       	ldi	r18, 0x00	; 0
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	40 e8       	ldi	r20, 0x80	; 128
    2230:	5f e3       	ldi	r21, 0x3F	; 63
    2232:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    2236:	88 23       	and	r24, r24
    2238:	2c f4       	brge	.+10     	; 0x2244 <lcd_send_data+0x63e>
    223a:	81 e0       	ldi	r24, 0x01	; 1
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	9f 8f       	std	Y+31, r25	; 0x1f
    2240:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
    2242:	3f c0       	rjmp	.+126    	; 0x22c2 <lcd_send_data+0x6bc>
    2244:	68 a1       	ldd	r22, Y+32	; 0x20
    2246:	79 a1       	ldd	r23, Y+33	; 0x21
    2248:	8a a1       	ldd	r24, Y+34	; 0x22
    224a:	9b a1       	ldd	r25, Y+35	; 0x23
	else if (__tmp > 65535)
    224c:	20 e0       	ldi	r18, 0x00	; 0
    224e:	3f ef       	ldi	r19, 0xFF	; 255
    2250:	4f e7       	ldi	r20, 0x7F	; 127
    2252:	57 e4       	ldi	r21, 0x47	; 71
    2254:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    2258:	18 16       	cp	r1, r24
    225a:	4c f5       	brge	.+82     	; 0x22ae <lcd_send_data+0x6a8>
    225c:	6c a1       	ldd	r22, Y+36	; 0x24
    225e:	7d a1       	ldd	r23, Y+37	; 0x25
    2260:	8e a1       	ldd	r24, Y+38	; 0x26
    2262:	9f a1       	ldd	r25, Y+39	; 0x27
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2264:	20 e0       	ldi	r18, 0x00	; 0
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	40 e2       	ldi	r20, 0x20	; 32
    226a:	51 e4       	ldi	r21, 0x41	; 65
    226c:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    2270:	dc 01       	movw	r26, r24
    2272:	cb 01       	movw	r24, r22
    2274:	bc 01       	movw	r22, r24
    2276:	cd 01       	movw	r24, r26
    2278:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    227c:	dc 01       	movw	r26, r24
    227e:	cb 01       	movw	r24, r22
    2280:	9f 8f       	std	Y+31, r25	; 0x1f
    2282:	8e 8f       	std	Y+30, r24	; 0x1e
    2284:	0f c0       	rjmp	.+30     	; 0x22a4 <lcd_send_data+0x69e>
    2286:	89 e1       	ldi	r24, 0x19	; 25
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	9d 8f       	std	Y+29, r25	; 0x1d
    228c:	8c 8f       	std	Y+28, r24	; 0x1c
    228e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2290:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2292:	01 97       	sbiw	r24, 0x01	; 1
    2294:	f1 f7       	brne	.-4      	; 0x2292 <lcd_send_data+0x68c>
    2296:	9d 8f       	std	Y+29, r25	; 0x1d
    2298:	8c 8f       	std	Y+28, r24	; 0x1c
    229a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    229c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    229e:	01 97       	sbiw	r24, 0x01	; 1
    22a0:	9f 8f       	std	Y+31, r25	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22a2:	8e 8f       	std	Y+30, r24	; 0x1e
    22a4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22a6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    22a8:	00 97       	sbiw	r24, 0x00	; 0
    22aa:	69 f7       	brne	.-38     	; 0x2286 <lcd_send_data+0x680>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ac:	24 c0       	rjmp	.+72     	; 0x22f6 <lcd_send_data+0x6f0>
    22ae:	68 a1       	ldd	r22, Y+32	; 0x20
    22b0:	79 a1       	ldd	r23, Y+33	; 0x21
    22b2:	8a a1       	ldd	r24, Y+34	; 0x22
    22b4:	9b a1       	ldd	r25, Y+35	; 0x23
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22b6:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    22ba:	dc 01       	movw	r26, r24
    22bc:	cb 01       	movw	r24, r22
    22be:	9f 8f       	std	Y+31, r25	; 0x1f
    22c0:	8e 8f       	std	Y+30, r24	; 0x1e
    22c2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22c4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    22c6:	9b 8f       	std	Y+27, r25	; 0x1b
    22c8:	8a 8f       	std	Y+26, r24	; 0x1a
    22ca:	8a 8d       	ldd	r24, Y+26	; 0x1a
    22cc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    22ce:	01 97       	sbiw	r24, 0x01	; 1
    22d0:	f1 f7       	brne	.-4      	; 0x22ce <lcd_send_data+0x6c8>
    22d2:	9b 8f       	std	Y+27, r25	; 0x1b
    22d4:	8a 8f       	std	Y+26, r24	; 0x1a
    22d6:	0f c0       	rjmp	.+30     	; 0x22f6 <lcd_send_data+0x6f0>
    22d8:	69 a5       	ldd	r22, Y+41	; 0x29
    22da:	7a a5       	ldd	r23, Y+42	; 0x2a
    22dc:	8b a5       	ldd	r24, Y+43	; 0x2b
    22de:	9c a5       	ldd	r25, Y+44	; 0x2c
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22e0:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    22e4:	dc 01       	movw	r26, r24
    22e6:	cb 01       	movw	r24, r22
    22e8:	88 a7       	std	Y+40, r24	; 0x28
    22ea:	88 a5       	ldd	r24, Y+40	; 0x28
    22ec:	89 8f       	std	Y+25, r24	; 0x19
    22ee:	89 8d       	ldd	r24, Y+25	; 0x19
    22f0:	8a 95       	dec	r24
    22f2:	f1 f7       	brne	.-4      	; 0x22f0 <lcd_send_data+0x6ea>
    22f4:	89 8f       	std	Y+25, r24	; 0x19
    22f6:	fe 01       	movw	r30, r28
    22f8:	ef 59       	subi	r30, 0x9F	; 159
    22fa:	ff 4f       	sbci	r31, 0xFF	; 255
    22fc:	01 90       	ld	r0, Z+
	_delay_us(1);
	DIO_clear_pin(lcd->controlPort, (lcd->EN));
    22fe:	f0 81       	ld	r31, Z
    2300:	e0 2d       	mov	r30, r0
    2302:	82 81       	ldd	r24, Z+2	; 0x02
    2304:	fe 01       	movw	r30, r28
    2306:	ef 59       	subi	r30, 0x9F	; 159
    2308:	ff 4f       	sbci	r31, 0xFF	; 255
    230a:	01 90       	ld	r0, Z+
    230c:	f0 81       	ld	r31, Z
    230e:	e0 2d       	mov	r30, r0
    2310:	95 81       	ldd	r25, Z+5	; 0x05
    2312:	69 2f       	mov	r22, r25
    2314:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_clear_pin>
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	a8 ec       	ldi	r26, 0xC8	; 200
    231e:	b2 e4       	ldi	r27, 0x42	; 66
    2320:	8d 8b       	std	Y+21, r24	; 0x15
    2322:	9e 8b       	std	Y+22, r25	; 0x16
    2324:	af 8b       	std	Y+23, r26	; 0x17
    2326:	b8 8f       	std	Y+24, r27	; 0x18
    2328:	6d 89       	ldd	r22, Y+21	; 0x15
    232a:	7e 89       	ldd	r23, Y+22	; 0x16
    232c:	8f 89       	ldd	r24, Y+23	; 0x17
    232e:	98 8d       	ldd	r25, Y+24	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2330:	2b ea       	ldi	r18, 0xAB	; 171
    2332:	3a ea       	ldi	r19, 0xAA	; 170
    2334:	4a ea       	ldi	r20, 0xAA	; 170
    2336:	5e e3       	ldi	r21, 0x3E	; 62
    2338:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    233c:	dc 01       	movw	r26, r24
    233e:	cb 01       	movw	r24, r22
    2340:	89 8b       	std	Y+17, r24	; 0x11
    2342:	9a 8b       	std	Y+18, r25	; 0x12
    2344:	ab 8b       	std	Y+19, r26	; 0x13
    2346:	bc 8b       	std	Y+20, r27	; 0x14
    2348:	69 89       	ldd	r22, Y+17	; 0x11
    234a:	7a 89       	ldd	r23, Y+18	; 0x12
    234c:	8b 89       	ldd	r24, Y+19	; 0x13
    234e:	9c 89       	ldd	r25, Y+20	; 0x14
	if (__tmp < 1.0)
    2350:	20 e0       	ldi	r18, 0x00	; 0
    2352:	30 e0       	ldi	r19, 0x00	; 0
    2354:	40 e8       	ldi	r20, 0x80	; 128
    2356:	5f e3       	ldi	r21, 0x3F	; 63
    2358:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    235c:	88 23       	and	r24, r24
    235e:	1c f4       	brge	.+6      	; 0x2366 <lcd_send_data+0x760>
    2360:	81 e0       	ldi	r24, 0x01	; 1
    2362:	88 8b       	std	Y+16, r24	; 0x10
    2364:	91 c0       	rjmp	.+290    	; 0x2488 <lcd_send_data+0x882>
    2366:	69 89       	ldd	r22, Y+17	; 0x11
		__ticks = 1;
    2368:	7a 89       	ldd	r23, Y+18	; 0x12
    236a:	8b 89       	ldd	r24, Y+19	; 0x13
    236c:	9c 89       	ldd	r25, Y+20	; 0x14
	else if (__tmp > 255)
    236e:	20 e0       	ldi	r18, 0x00	; 0
    2370:	30 e0       	ldi	r19, 0x00	; 0
    2372:	4f e7       	ldi	r20, 0x7F	; 127
    2374:	53 e4       	ldi	r21, 0x43	; 67
    2376:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    237a:	18 16       	cp	r1, r24
    237c:	0c f0       	brlt	.+2      	; 0x2380 <lcd_send_data+0x77a>
    237e:	7b c0       	rjmp	.+246    	; 0x2476 <lcd_send_data+0x870>
    2380:	6d 89       	ldd	r22, Y+21	; 0x15
    2382:	7e 89       	ldd	r23, Y+22	; 0x16
    2384:	8f 89       	ldd	r24, Y+23	; 0x17
    2386:	98 8d       	ldd	r25, Y+24	; 0x18
	{
		_delay_ms(__us / 1000.0);
    2388:	20 e0       	ldi	r18, 0x00	; 0
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	4a e7       	ldi	r20, 0x7A	; 122
    238e:	54 e4       	ldi	r21, 0x44	; 68
    2390:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    2394:	dc 01       	movw	r26, r24
    2396:	cb 01       	movw	r24, r22
    2398:	8c 87       	std	Y+12, r24	; 0x0c
    239a:	9d 87       	std	Y+13, r25	; 0x0d
    239c:	ae 87       	std	Y+14, r26	; 0x0e
    239e:	bf 87       	std	Y+15, r27	; 0x0f
    23a0:	6c 85       	ldd	r22, Y+12	; 0x0c
    23a2:	7d 85       	ldd	r23, Y+13	; 0x0d
    23a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    23a6:	9f 85       	ldd	r25, Y+15	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23a8:	20 e0       	ldi	r18, 0x00	; 0
    23aa:	30 e0       	ldi	r19, 0x00	; 0
    23ac:	4a e7       	ldi	r20, 0x7A	; 122
    23ae:	53 e4       	ldi	r21, 0x43	; 67
    23b0:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    23b4:	dc 01       	movw	r26, r24
    23b6:	cb 01       	movw	r24, r22
    23b8:	88 87       	std	Y+8, r24	; 0x08
    23ba:	99 87       	std	Y+9, r25	; 0x09
    23bc:	aa 87       	std	Y+10, r26	; 0x0a
    23be:	bb 87       	std	Y+11, r27	; 0x0b
    23c0:	68 85       	ldd	r22, Y+8	; 0x08
    23c2:	79 85       	ldd	r23, Y+9	; 0x09
    23c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    23c6:	9b 85       	ldd	r25, Y+11	; 0x0b
	if (__tmp < 1.0)
    23c8:	20 e0       	ldi	r18, 0x00	; 0
    23ca:	30 e0       	ldi	r19, 0x00	; 0
    23cc:	40 e8       	ldi	r20, 0x80	; 128
    23ce:	5f e3       	ldi	r21, 0x3F	; 63
    23d0:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    23d4:	88 23       	and	r24, r24
    23d6:	2c f4       	brge	.+10     	; 0x23e2 <lcd_send_data+0x7dc>
    23d8:	81 e0       	ldi	r24, 0x01	; 1
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	9f 83       	std	Y+7, r25	; 0x07
    23de:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
    23e0:	3f c0       	rjmp	.+126    	; 0x2460 <lcd_send_data+0x85a>
    23e2:	68 85       	ldd	r22, Y+8	; 0x08
    23e4:	79 85       	ldd	r23, Y+9	; 0x09
    23e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    23e8:	9b 85       	ldd	r25, Y+11	; 0x0b
	else if (__tmp > 65535)
    23ea:	20 e0       	ldi	r18, 0x00	; 0
    23ec:	3f ef       	ldi	r19, 0xFF	; 255
    23ee:	4f e7       	ldi	r20, 0x7F	; 127
    23f0:	57 e4       	ldi	r21, 0x47	; 71
    23f2:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    23f6:	18 16       	cp	r1, r24
    23f8:	4c f5       	brge	.+82     	; 0x244c <lcd_send_data+0x846>
    23fa:	6c 85       	ldd	r22, Y+12	; 0x0c
    23fc:	7d 85       	ldd	r23, Y+13	; 0x0d
    23fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    2400:	9f 85       	ldd	r25, Y+15	; 0x0f
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2402:	20 e0       	ldi	r18, 0x00	; 0
    2404:	30 e0       	ldi	r19, 0x00	; 0
    2406:	40 e2       	ldi	r20, 0x20	; 32
    2408:	51 e4       	ldi	r21, 0x41	; 65
    240a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    240e:	dc 01       	movw	r26, r24
    2410:	cb 01       	movw	r24, r22
    2412:	bc 01       	movw	r22, r24
    2414:	cd 01       	movw	r24, r26
    2416:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    241a:	dc 01       	movw	r26, r24
    241c:	cb 01       	movw	r24, r22
    241e:	9f 83       	std	Y+7, r25	; 0x07
    2420:	8e 83       	std	Y+6, r24	; 0x06
    2422:	0f c0       	rjmp	.+30     	; 0x2442 <lcd_send_data+0x83c>
    2424:	89 e1       	ldi	r24, 0x19	; 25
    2426:	90 e0       	ldi	r25, 0x00	; 0
    2428:	9d 83       	std	Y+5, r25	; 0x05
    242a:	8c 83       	std	Y+4, r24	; 0x04
    242c:	8c 81       	ldd	r24, Y+4	; 0x04
    242e:	9d 81       	ldd	r25, Y+5	; 0x05
    2430:	01 97       	sbiw	r24, 0x01	; 1
    2432:	f1 f7       	brne	.-4      	; 0x2430 <lcd_send_data+0x82a>
    2434:	9d 83       	std	Y+5, r25	; 0x05
    2436:	8c 83       	std	Y+4, r24	; 0x04
    2438:	8e 81       	ldd	r24, Y+6	; 0x06
    243a:	9f 81       	ldd	r25, Y+7	; 0x07
    243c:	01 97       	sbiw	r24, 0x01	; 1
    243e:	9f 83       	std	Y+7, r25	; 0x07
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2440:	8e 83       	std	Y+6, r24	; 0x06
    2442:	8e 81       	ldd	r24, Y+6	; 0x06
    2444:	9f 81       	ldd	r25, Y+7	; 0x07
    2446:	00 97       	sbiw	r24, 0x00	; 0
    2448:	69 f7       	brne	.-38     	; 0x2424 <lcd_send_data+0x81e>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    244a:	24 c0       	rjmp	.+72     	; 0x2494 <lcd_send_data+0x88e>
    244c:	68 85       	ldd	r22, Y+8	; 0x08
    244e:	79 85       	ldd	r23, Y+9	; 0x09
    2450:	8a 85       	ldd	r24, Y+10	; 0x0a
    2452:	9b 85       	ldd	r25, Y+11	; 0x0b
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2454:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2458:	dc 01       	movw	r26, r24
    245a:	cb 01       	movw	r24, r22
    245c:	9f 83       	std	Y+7, r25	; 0x07
    245e:	8e 83       	std	Y+6, r24	; 0x06
    2460:	8e 81       	ldd	r24, Y+6	; 0x06
    2462:	9f 81       	ldd	r25, Y+7	; 0x07
    2464:	9b 83       	std	Y+3, r25	; 0x03
    2466:	8a 83       	std	Y+2, r24	; 0x02
    2468:	8a 81       	ldd	r24, Y+2	; 0x02
    246a:	9b 81       	ldd	r25, Y+3	; 0x03
    246c:	01 97       	sbiw	r24, 0x01	; 1
    246e:	f1 f7       	brne	.-4      	; 0x246c <lcd_send_data+0x866>
    2470:	9b 83       	std	Y+3, r25	; 0x03
    2472:	8a 83       	std	Y+2, r24	; 0x02
    2474:	0f c0       	rjmp	.+30     	; 0x2494 <lcd_send_data+0x88e>
    2476:	69 89       	ldd	r22, Y+17	; 0x11
    2478:	7a 89       	ldd	r23, Y+18	; 0x12
    247a:	8b 89       	ldd	r24, Y+19	; 0x13
    247c:	9c 89       	ldd	r25, Y+20	; 0x14
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    247e:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	88 8b       	std	Y+16, r24	; 0x10
    2488:	88 89       	ldd	r24, Y+16	; 0x10
    248a:	89 83       	std	Y+1, r24	; 0x01
    248c:	89 81       	ldd	r24, Y+1	; 0x01
    248e:	8a 95       	dec	r24
    2490:	f1 f7       	brne	.-4      	; 0x248e <lcd_send_data+0x888>
    2492:	89 83       	std	Y+1, r24	; 0x01
    2494:	cd 59       	subi	r28, 0x9D	; 157
    2496:	df 4f       	sbci	r29, 0xFF	; 255
    2498:	0f b6       	in	r0, 0x3f	; 63
    249a:	f8 94       	cli
	_delay_us(100);
}
    249c:	de bf       	out	0x3e, r29	; 62
    249e:	0f be       	out	0x3f, r0	; 63
    24a0:	cd bf       	out	0x3d, r28	; 61
    24a2:	cf 91       	pop	r28
    24a4:	df 91       	pop	r29
    24a6:	1f 91       	pop	r17
    24a8:	0f 91       	pop	r16
    24aa:	08 95       	ret

000024ac <lcd_gotoxy>:

static const u8 firstCharAdr[] = { 0x80, 0xC0 };
void lcd_gotoxy(gcfg_lcd_t * lcd, u8 x, u8 y) {
    24ac:	df 93       	push	r29
    24ae:	cf 93       	push	r28
    24b0:	00 d0       	rcall	.+0      	; 0x24b2 <lcd_gotoxy+0x6>
    24b2:	00 d0       	rcall	.+0      	; 0x24b4 <lcd_gotoxy+0x8>
    24b4:	cd b7       	in	r28, 0x3d	; 61
    24b6:	de b7       	in	r29, 0x3e	; 62
    24b8:	9a 83       	std	Y+2, r25	; 0x02
    24ba:	89 83       	std	Y+1, r24	; 0x01
    24bc:	6b 83       	std	Y+3, r22	; 0x03
    24be:	4c 83       	std	Y+4, r20	; 0x04
//	if (x > 0&&) todo
	//00-27h , 40h-67h

	lcd_send_command(lcd, firstCharAdr[y - 1] + x - 1);
    24c0:	8c 81       	ldd	r24, Y+4	; 0x04
    24c2:	88 2f       	mov	r24, r24
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	01 97       	sbiw	r24, 0x01	; 1
    24c8:	fc 01       	movw	r30, r24
    24ca:	e1 58       	subi	r30, 0x81	; 129
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	90 81       	ld	r25, Z
    24d0:	8b 81       	ldd	r24, Y+3	; 0x03
    24d2:	89 0f       	add	r24, r25
    24d4:	28 2f       	mov	r18, r24
    24d6:	21 50       	subi	r18, 0x01	; 1
    24d8:	89 81       	ldd	r24, Y+1	; 0x01
    24da:	9a 81       	ldd	r25, Y+2	; 0x02
    24dc:	62 2f       	mov	r22, r18
    24de:	0e 94 bd 09 	call	0x137a	; 0x137a <lcd_send_command>
}
    24e2:	0f 90       	pop	r0
    24e4:	0f 90       	pop	r0
    24e6:	0f 90       	pop	r0
    24e8:	0f 90       	pop	r0
    24ea:	cf 91       	pop	r28
    24ec:	df 91       	pop	r29
    24ee:	08 95       	ret

000024f0 <lcd_print>:
void lcd_print(gcfg_lcd_t * lcd, char * str) {
    24f0:	df 93       	push	r29
    24f2:	cf 93       	push	r28
    24f4:	00 d0       	rcall	.+0      	; 0x24f6 <lcd_print+0x6>
    24f6:	00 d0       	rcall	.+0      	; 0x24f8 <lcd_print+0x8>
    24f8:	0f 92       	push	r0
    24fa:	cd b7       	in	r28, 0x3d	; 61
    24fc:	de b7       	in	r29, 0x3e	; 62
    24fe:	9b 83       	std	Y+3, r25	; 0x03
    2500:	8a 83       	std	Y+2, r24	; 0x02
    2502:	7d 83       	std	Y+5, r23	; 0x05
    2504:	6c 83       	std	Y+4, r22	; 0x04
	u8 i = 0;
    2506:	19 82       	std	Y+1, r1	; 0x01
    2508:	10 c0       	rjmp	.+32     	; 0x252a <lcd_print+0x3a>
	while (str[i] != '\0')
		lcd_send_data(lcd, str[i++]);
    250a:	89 81       	ldd	r24, Y+1	; 0x01
    250c:	28 2f       	mov	r18, r24
    250e:	30 e0       	ldi	r19, 0x00	; 0
    2510:	8c 81       	ldd	r24, Y+4	; 0x04
    2512:	9d 81       	ldd	r25, Y+5	; 0x05
    2514:	fc 01       	movw	r30, r24
    2516:	e2 0f       	add	r30, r18
    2518:	f3 1f       	adc	r31, r19
    251a:	20 81       	ld	r18, Z
    251c:	89 81       	ldd	r24, Y+1	; 0x01
    251e:	8f 5f       	subi	r24, 0xFF	; 255
    2520:	89 83       	std	Y+1, r24	; 0x01
    2522:	8a 81       	ldd	r24, Y+2	; 0x02
    2524:	9b 81       	ldd	r25, Y+3	; 0x03
    2526:	62 2f       	mov	r22, r18
    2528:	6e db       	rcall	.-2340   	; 0x1c06 <lcd_send_data>
    252a:	89 81       	ldd	r24, Y+1	; 0x01

	lcd_send_command(lcd, firstCharAdr[y - 1] + x - 1);
}
void lcd_print(gcfg_lcd_t * lcd, char * str) {
	u8 i = 0;
	while (str[i] != '\0')
    252c:	28 2f       	mov	r18, r24
    252e:	30 e0       	ldi	r19, 0x00	; 0
    2530:	8c 81       	ldd	r24, Y+4	; 0x04
    2532:	9d 81       	ldd	r25, Y+5	; 0x05
    2534:	fc 01       	movw	r30, r24
    2536:	e2 0f       	add	r30, r18
    2538:	f3 1f       	adc	r31, r19
    253a:	80 81       	ld	r24, Z
    253c:	88 23       	and	r24, r24
    253e:	29 f7       	brne	.-54     	; 0x250a <lcd_print+0x1a>
    2540:	0f 90       	pop	r0
		lcd_send_data(lcd, str[i++]);
}
    2542:	0f 90       	pop	r0
    2544:	0f 90       	pop	r0
    2546:	0f 90       	pop	r0
    2548:	0f 90       	pop	r0
    254a:	cf 91       	pop	r28
    254c:	df 91       	pop	r29
    254e:	08 95       	ret

00002550 <main>:
	seven_seg_display(minID1, currMin % 10);
	seven_seg_display(minID10, currMin++ / 10);

}

int main(void) {
    2550:	df 93       	push	r29
    2552:	cf 93       	push	r28
    2554:	cd b7       	in	r28, 0x3d	; 61
    2556:	de b7       	in	r29, 0x3e	; 62
    2558:	2b 97       	sbiw	r28, 0x0b	; 11
    255a:	0f b6       	in	r0, 0x3f	; 63
    255c:	f8 94       	cli
    255e:	de bf       	out	0x3e, r29	; 62
    2560:	0f be       	out	0x3f, r0	; 63
    2562:	cd bf       	out	0x3d, r28	; 61
//
//	TMU_addTimer(&obj1, 500, PERIODIC, function1);
//	TMU_addTimer(&obj2, 5000, PERIODIC, function2);
//	TMU_addTimer(&obj3, 10000, PERIODIC, function3);

	u8 key = 0;
    2564:	19 82       	std	Y+1, r1	; 0x01
	char str[2];
	gcfg_keypad_t keypad = { BASE_C, BASE_C };
    2566:	83 e3       	ldi	r24, 0x33	; 51
    2568:	8c 83       	std	Y+4, r24	; 0x04
    256a:	83 e3       	ldi	r24, 0x33	; 51
    256c:	8d 83       	std	Y+5, r24	; 0x05
	keypad_init(&keypad);
    256e:	ce 01       	movw	r24, r28
    2570:	04 96       	adiw	r24, 0x04	; 4
    2572:	0e 94 4f 07 	call	0xe9e	; 0xe9e <keypad_init>
	gcfg_lcd_t lcd;
	lcd.RS = 7;
    2576:	87 e0       	ldi	r24, 0x07	; 7
    2578:	89 87       	std	Y+9, r24	; 0x09
	lcd.RW = 6;
    257a:	86 e0       	ldi	r24, 0x06	; 6
    257c:	8a 87       	std	Y+10, r24	; 0x0a
	lcd.EN = 5;
    257e:	85 e0       	ldi	r24, 0x05	; 5
    2580:	8b 87       	std	Y+11, r24	; 0x0b
	lcd.controlPort = BASE_A;
    2582:	89 e3       	ldi	r24, 0x39	; 57
    2584:	88 87       	std	Y+8, r24	; 0x08
	lcd.dataPort = BASE_B;
    2586:	86 e3       	ldi	r24, 0x36	; 54
    2588:	8f 83       	std	Y+7, r24	; 0x07
	lcd.nbit = n4BIT_MODE;
    258a:	81 e0       	ldi	r24, 0x01	; 1
    258c:	8e 83       	std	Y+6, r24	; 0x06
	lcd_init(&lcd);
    258e:	ce 01       	movw	r24, r28
    2590:	06 96       	adiw	r24, 0x06	; 6
    2592:	0e 94 c5 07 	call	0xf8a	; 0xf8a <lcd_init>
	lcd_gotoxy(&lcd, 1, 1);
    2596:	ce 01       	movw	r24, r28
    2598:	06 96       	adiw	r24, 0x06	; 6
    259a:	61 e0       	ldi	r22, 0x01	; 1
    259c:	41 e0       	ldi	r20, 0x01	; 1
    259e:	86 df       	rcall	.-244    	; 0x24ac <lcd_gotoxy>
    25a0:	ce 01       	movw	r24, r28
	lcd_print(&lcd, "xxxx xxxx");
    25a2:	06 96       	adiw	r24, 0x06	; 6
    25a4:	20 e6       	ldi	r18, 0x60	; 96
    25a6:	30 e0       	ldi	r19, 0x00	; 0
    25a8:	b9 01       	movw	r22, r18
    25aa:	a2 df       	rcall	.-188    	; 0x24f0 <lcd_print>
    25ac:	ce 01       	movw	r24, r28
    25ae:	06 96       	adiw	r24, 0x06	; 6
//	sprintf(str, "%x", DIO_read_port(BASE_C, 0xf));
//	lcd_print(&lcd, str);
	lcd_gotoxy(&lcd, 1, 2);
    25b0:	61 e0       	ldi	r22, 0x01	; 1
    25b2:	42 e0       	ldi	r20, 0x02	; 2
    25b4:	7b df       	rcall	.-266    	; 0x24ac <lcd_gotoxy>
    25b6:	ce 01       	movw	r24, r28
    25b8:	06 96       	adiw	r24, 0x06	; 6
    25ba:	2a e6       	ldi	r18, 0x6A	; 106
	lcd_print(&lcd, "yyyy yyyy");
    25bc:	30 e0       	ldi	r19, 0x00	; 0
    25be:	b9 01       	movw	r22, r18
    25c0:	97 df       	rcall	.-210    	; 0x24f0 <lcd_print>
    25c2:	ce 01       	movw	r24, r28
    25c4:	04 96       	adiw	r24, 0x04	; 4
    25c6:	0e 94 9b 07 	call	0xf36	; 0xf36 <keypad_dispatch>
	while (1) {
		keypad_dispatch(&keypad);
    25ca:	ce 01       	movw	r24, r28
    25cc:	04 96       	adiw	r24, 0x04	; 4
    25ce:	0e 94 b1 07 	call	0xf62	; 0xf62 <keypad_get_key>
		if ((key = keypad_get_key(&keypad)) != 0) {
    25d2:	89 83       	std	Y+1, r24	; 0x01
    25d4:	89 81       	ldd	r24, Y+1	; 0x01
    25d6:	88 23       	and	r24, r24
    25d8:	a1 f3       	breq	.-24     	; 0x25c2 <main+0x72>
    25da:	89 81       	ldd	r24, Y+1	; 0x01
    25dc:	28 2f       	mov	r18, r24
    25de:	30 e0       	ldi	r19, 0x00	; 0
    25e0:	00 d0       	rcall	.+0      	; 0x25e2 <main+0x92>
			sprintf(str, "%x", key);
    25e2:	00 d0       	rcall	.+0      	; 0x25e4 <main+0x94>
    25e4:	00 d0       	rcall	.+0      	; 0x25e6 <main+0x96>
    25e6:	ed b7       	in	r30, 0x3d	; 61
    25e8:	fe b7       	in	r31, 0x3e	; 62
    25ea:	31 96       	adiw	r30, 0x01	; 1
    25ec:	ce 01       	movw	r24, r28
    25ee:	02 96       	adiw	r24, 0x02	; 2
    25f0:	91 83       	std	Z+1, r25	; 0x01
    25f2:	80 83       	st	Z, r24
    25f4:	84 e7       	ldi	r24, 0x74	; 116
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	93 83       	std	Z+3, r25	; 0x03
    25fa:	82 83       	std	Z+2, r24	; 0x02
    25fc:	35 83       	std	Z+5, r19	; 0x05
    25fe:	24 83       	std	Z+4, r18	; 0x04
    2600:	6e d0       	rcall	.+220    	; 0x26de <sprintf>
    2602:	8d b7       	in	r24, 0x3d	; 61
    2604:	9e b7       	in	r25, 0x3e	; 62
    2606:	06 96       	adiw	r24, 0x06	; 6
    2608:	0f b6       	in	r0, 0x3f	; 63
    260a:	f8 94       	cli
    260c:	9e bf       	out	0x3e, r25	; 62
    260e:	0f be       	out	0x3f, r0	; 63
    2610:	8d bf       	out	0x3d, r24	; 61
    2612:	ce 01       	movw	r24, r28
    2614:	06 96       	adiw	r24, 0x06	; 6
    2616:	9e 01       	movw	r18, r28
    2618:	2e 5f       	subi	r18, 0xFE	; 254
    261a:	3f 4f       	sbci	r19, 0xFF	; 255
			lcd_print(&lcd, str);
    261c:	b9 01       	movw	r22, r18
    261e:	68 df       	rcall	.-304    	; 0x24f0 <lcd_print>
    2620:	83 e3       	ldi	r24, 0x33	; 51
    2622:	6f e0       	ldi	r22, 0x0F	; 15
    2624:	0e 94 3c 07 	call	0xe78	; 0xe78 <DIO_read_port>
    2628:	28 2f       	mov	r18, r24
    262a:	30 e0       	ldi	r19, 0x00	; 0
			sprintf(str, "%x", DIO_read_port(BASE_C, 0xf));
    262c:	00 d0       	rcall	.+0      	; 0x262e <main+0xde>
    262e:	00 d0       	rcall	.+0      	; 0x2630 <main+0xe0>
    2630:	00 d0       	rcall	.+0      	; 0x2632 <main+0xe2>
    2632:	ed b7       	in	r30, 0x3d	; 61
    2634:	fe b7       	in	r31, 0x3e	; 62
    2636:	31 96       	adiw	r30, 0x01	; 1
    2638:	ce 01       	movw	r24, r28
    263a:	02 96       	adiw	r24, 0x02	; 2
    263c:	91 83       	std	Z+1, r25	; 0x01
    263e:	80 83       	st	Z, r24
    2640:	84 e7       	ldi	r24, 0x74	; 116
    2642:	90 e0       	ldi	r25, 0x00	; 0
    2644:	93 83       	std	Z+3, r25	; 0x03
    2646:	82 83       	std	Z+2, r24	; 0x02
    2648:	35 83       	std	Z+5, r19	; 0x05
    264a:	24 83       	std	Z+4, r18	; 0x04
    264c:	48 d0       	rcall	.+144    	; 0x26de <sprintf>
    264e:	8d b7       	in	r24, 0x3d	; 61
    2650:	9e b7       	in	r25, 0x3e	; 62
    2652:	06 96       	adiw	r24, 0x06	; 6
    2654:	0f b6       	in	r0, 0x3f	; 63
    2656:	f8 94       	cli
    2658:	9e bf       	out	0x3e, r25	; 62
    265a:	0f be       	out	0x3f, r0	; 63
    265c:	8d bf       	out	0x3d, r24	; 61
    265e:	ce 01       	movw	r24, r28
    2660:	06 96       	adiw	r24, 0x06	; 6
    2662:	9e 01       	movw	r18, r28
    2664:	2e 5f       	subi	r18, 0xFE	; 254
    2666:	3f 4f       	sbci	r19, 0xFF	; 255
    2668:	b9 01       	movw	r22, r18
    266a:	42 df       	rcall	.-380    	; 0x24f0 <lcd_print>
			lcd_print(&lcd, str);
    266c:	19 82       	std	Y+1, r1	; 0x01
    266e:	a9 cf       	rjmp	.-174    	; 0x25c2 <main+0x72>

00002670 <__prologue_saves__>:
    2670:	2f 92       	push	r2
    2672:	3f 92       	push	r3
    2674:	4f 92       	push	r4
    2676:	5f 92       	push	r5
    2678:	6f 92       	push	r6
    267a:	7f 92       	push	r7
			key = 0;
    267c:	8f 92       	push	r8
    267e:	9f 92       	push	r9
    2680:	af 92       	push	r10
    2682:	bf 92       	push	r11
    2684:	cf 92       	push	r12
    2686:	df 92       	push	r13
    2688:	ef 92       	push	r14
    268a:	ff 92       	push	r15
    268c:	0f 93       	push	r16
    268e:	1f 93       	push	r17
    2690:	cf 93       	push	r28
    2692:	df 93       	push	r29
    2694:	cd b7       	in	r28, 0x3d	; 61
    2696:	de b7       	in	r29, 0x3e	; 62
    2698:	ca 1b       	sub	r28, r26
    269a:	db 0b       	sbc	r29, r27
    269c:	0f b6       	in	r0, 0x3f	; 63
    269e:	f8 94       	cli
    26a0:	de bf       	out	0x3e, r29	; 62
    26a2:	0f be       	out	0x3f, r0	; 63
    26a4:	cd bf       	out	0x3d, r28	; 61
    26a6:	09 94       	ijmp

000026a8 <__epilogue_restores__>:
    26a8:	2a 88       	ldd	r2, Y+18	; 0x12
    26aa:	39 88       	ldd	r3, Y+17	; 0x11
    26ac:	48 88       	ldd	r4, Y+16	; 0x10
    26ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    26b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    26b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    26b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    26b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    26b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    26ba:	b9 84       	ldd	r11, Y+9	; 0x09
    26bc:	c8 84       	ldd	r12, Y+8	; 0x08
    26be:	df 80       	ldd	r13, Y+7	; 0x07
    26c0:	ee 80       	ldd	r14, Y+6	; 0x06
    26c2:	fd 80       	ldd	r15, Y+5	; 0x05
    26c4:	0c 81       	ldd	r16, Y+4	; 0x04
    26c6:	1b 81       	ldd	r17, Y+3	; 0x03
    26c8:	aa 81       	ldd	r26, Y+2	; 0x02
    26ca:	b9 81       	ldd	r27, Y+1	; 0x01
    26cc:	ce 0f       	add	r28, r30
    26ce:	d1 1d       	adc	r29, r1
    26d0:	0f b6       	in	r0, 0x3f	; 63
    26d2:	f8 94       	cli
    26d4:	de bf       	out	0x3e, r29	; 62
    26d6:	0f be       	out	0x3f, r0	; 63
    26d8:	cd bf       	out	0x3d, r28	; 61
    26da:	ed 01       	movw	r28, r26
    26dc:	08 95       	ret

000026de <sprintf>:
    26de:	ae e0       	ldi	r26, 0x0E	; 14
    26e0:	b0 e0       	ldi	r27, 0x00	; 0
    26e2:	e4 e7       	ldi	r30, 0x74	; 116
    26e4:	f3 e1       	ldi	r31, 0x13	; 19
    26e6:	d2 cf       	rjmp	.-92     	; 0x268c <__prologue_saves__+0x1c>
    26e8:	0d 89       	ldd	r16, Y+21	; 0x15
    26ea:	1e 89       	ldd	r17, Y+22	; 0x16
    26ec:	86 e0       	ldi	r24, 0x06	; 6
    26ee:	8c 83       	std	Y+4, r24	; 0x04
    26f0:	1a 83       	std	Y+2, r17	; 0x02
    26f2:	09 83       	std	Y+1, r16	; 0x01
    26f4:	8f ef       	ldi	r24, 0xFF	; 255
    26f6:	9f e7       	ldi	r25, 0x7F	; 127
    26f8:	9e 83       	std	Y+6, r25	; 0x06
    26fa:	8d 83       	std	Y+5, r24	; 0x05
    26fc:	9e 01       	movw	r18, r28
    26fe:	27 5e       	subi	r18, 0xE7	; 231
    2700:	3f 4f       	sbci	r19, 0xFF	; 255
    2702:	ce 01       	movw	r24, r28
    2704:	01 96       	adiw	r24, 0x01	; 1
    2706:	6f 89       	ldd	r22, Y+23	; 0x17
    2708:	78 8d       	ldd	r23, Y+24	; 0x18
    270a:	a9 01       	movw	r20, r18
    270c:	09 d0       	rcall	.+18     	; 0x2720 <vfprintf>
    270e:	2f 81       	ldd	r18, Y+7	; 0x07
    2710:	38 85       	ldd	r19, Y+8	; 0x08
    2712:	02 0f       	add	r16, r18
    2714:	13 1f       	adc	r17, r19
    2716:	f8 01       	movw	r30, r16
    2718:	10 82       	st	Z, r1
    271a:	2e 96       	adiw	r28, 0x0e	; 14
    271c:	e4 e0       	ldi	r30, 0x04	; 4
    271e:	d2 cf       	rjmp	.-92     	; 0x26c4 <__epilogue_restores__+0x1c>

00002720 <vfprintf>:
    2720:	ab e0       	ldi	r26, 0x0B	; 11
    2722:	b0 e0       	ldi	r27, 0x00	; 0
    2724:	e5 e9       	ldi	r30, 0x95	; 149
    2726:	f3 e1       	ldi	r31, 0x13	; 19
    2728:	a3 cf       	rjmp	.-186    	; 0x2670 <__prologue_saves__>
    272a:	3c 01       	movw	r6, r24
    272c:	2b 01       	movw	r4, r22
    272e:	5a 01       	movw	r10, r20
    2730:	fc 01       	movw	r30, r24
    2732:	17 82       	std	Z+7, r1	; 0x07
    2734:	16 82       	std	Z+6, r1	; 0x06
    2736:	83 81       	ldd	r24, Z+3	; 0x03
    2738:	81 fd       	sbrc	r24, 1
    273a:	03 c0       	rjmp	.+6      	; 0x2742 <vfprintf+0x22>
    273c:	6f ef       	ldi	r22, 0xFF	; 255
    273e:	7f ef       	ldi	r23, 0xFF	; 255
    2740:	b9 c1       	rjmp	.+882    	; 0x2ab4 <vfprintf+0x394>
    2742:	9a e0       	ldi	r25, 0x0A	; 10
    2744:	89 2e       	mov	r8, r25
    2746:	1e 01       	movw	r2, r28
    2748:	08 94       	sec
    274a:	21 1c       	adc	r2, r1
    274c:	31 1c       	adc	r3, r1
    274e:	f3 01       	movw	r30, r6
    2750:	23 81       	ldd	r18, Z+3	; 0x03
    2752:	f2 01       	movw	r30, r4
    2754:	23 fd       	sbrc	r18, 3
    2756:	85 91       	lpm	r24, Z+
    2758:	23 ff       	sbrs	r18, 3
    275a:	81 91       	ld	r24, Z+
    275c:	2f 01       	movw	r4, r30
    275e:	88 23       	and	r24, r24
    2760:	09 f4       	brne	.+2      	; 0x2764 <vfprintf+0x44>
    2762:	a5 c1       	rjmp	.+842    	; 0x2aae <vfprintf+0x38e>
    2764:	85 32       	cpi	r24, 0x25	; 37
    2766:	39 f4       	brne	.+14     	; 0x2776 <vfprintf+0x56>
    2768:	23 fd       	sbrc	r18, 3
    276a:	85 91       	lpm	r24, Z+
    276c:	23 ff       	sbrs	r18, 3
    276e:	81 91       	ld	r24, Z+
    2770:	2f 01       	movw	r4, r30
    2772:	85 32       	cpi	r24, 0x25	; 37
    2774:	21 f4       	brne	.+8      	; 0x277e <vfprintf+0x5e>
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	b3 01       	movw	r22, r6
    277a:	b6 d1       	rcall	.+876    	; 0x2ae8 <fputc>
    277c:	e8 cf       	rjmp	.-48     	; 0x274e <vfprintf+0x2e>
    277e:	98 2f       	mov	r25, r24
    2780:	ff 24       	eor	r15, r15
    2782:	ee 24       	eor	r14, r14
    2784:	99 24       	eor	r9, r9
    2786:	ff e1       	ldi	r31, 0x1F	; 31
    2788:	ff 15       	cp	r31, r15
    278a:	d0 f0       	brcs	.+52     	; 0x27c0 <vfprintf+0xa0>
    278c:	9b 32       	cpi	r25, 0x2B	; 43
    278e:	69 f0       	breq	.+26     	; 0x27aa <vfprintf+0x8a>
    2790:	9c 32       	cpi	r25, 0x2C	; 44
    2792:	28 f4       	brcc	.+10     	; 0x279e <vfprintf+0x7e>
    2794:	90 32       	cpi	r25, 0x20	; 32
    2796:	59 f0       	breq	.+22     	; 0x27ae <vfprintf+0x8e>
    2798:	93 32       	cpi	r25, 0x23	; 35
    279a:	91 f4       	brne	.+36     	; 0x27c0 <vfprintf+0xa0>
    279c:	0e c0       	rjmp	.+28     	; 0x27ba <vfprintf+0x9a>
    279e:	9d 32       	cpi	r25, 0x2D	; 45
    27a0:	49 f0       	breq	.+18     	; 0x27b4 <vfprintf+0x94>
    27a2:	90 33       	cpi	r25, 0x30	; 48
    27a4:	69 f4       	brne	.+26     	; 0x27c0 <vfprintf+0xa0>
    27a6:	41 e0       	ldi	r20, 0x01	; 1
    27a8:	24 c0       	rjmp	.+72     	; 0x27f2 <vfprintf+0xd2>
    27aa:	52 e0       	ldi	r21, 0x02	; 2
    27ac:	f5 2a       	or	r15, r21
    27ae:	84 e0       	ldi	r24, 0x04	; 4
    27b0:	f8 2a       	or	r15, r24
    27b2:	28 c0       	rjmp	.+80     	; 0x2804 <vfprintf+0xe4>
    27b4:	98 e0       	ldi	r25, 0x08	; 8
    27b6:	f9 2a       	or	r15, r25
    27b8:	25 c0       	rjmp	.+74     	; 0x2804 <vfprintf+0xe4>
    27ba:	e0 e1       	ldi	r30, 0x10	; 16
    27bc:	fe 2a       	or	r15, r30
    27be:	22 c0       	rjmp	.+68     	; 0x2804 <vfprintf+0xe4>
    27c0:	f7 fc       	sbrc	r15, 7
    27c2:	29 c0       	rjmp	.+82     	; 0x2816 <vfprintf+0xf6>
    27c4:	89 2f       	mov	r24, r25
    27c6:	80 53       	subi	r24, 0x30	; 48
    27c8:	8a 30       	cpi	r24, 0x0A	; 10
    27ca:	70 f4       	brcc	.+28     	; 0x27e8 <vfprintf+0xc8>
    27cc:	f6 fe       	sbrs	r15, 6
    27ce:	05 c0       	rjmp	.+10     	; 0x27da <vfprintf+0xba>
    27d0:	98 9c       	mul	r9, r8
    27d2:	90 2c       	mov	r9, r0
    27d4:	11 24       	eor	r1, r1
    27d6:	98 0e       	add	r9, r24
    27d8:	15 c0       	rjmp	.+42     	; 0x2804 <vfprintf+0xe4>
    27da:	e8 9c       	mul	r14, r8
    27dc:	e0 2c       	mov	r14, r0
    27de:	11 24       	eor	r1, r1
    27e0:	e8 0e       	add	r14, r24
    27e2:	f0 e2       	ldi	r31, 0x20	; 32
    27e4:	ff 2a       	or	r15, r31
    27e6:	0e c0       	rjmp	.+28     	; 0x2804 <vfprintf+0xe4>
    27e8:	9e 32       	cpi	r25, 0x2E	; 46
    27ea:	29 f4       	brne	.+10     	; 0x27f6 <vfprintf+0xd6>
    27ec:	f6 fc       	sbrc	r15, 6
    27ee:	5f c1       	rjmp	.+702    	; 0x2aae <vfprintf+0x38e>
    27f0:	40 e4       	ldi	r20, 0x40	; 64
    27f2:	f4 2a       	or	r15, r20
    27f4:	07 c0       	rjmp	.+14     	; 0x2804 <vfprintf+0xe4>
    27f6:	9c 36       	cpi	r25, 0x6C	; 108
    27f8:	19 f4       	brne	.+6      	; 0x2800 <vfprintf+0xe0>
    27fa:	50 e8       	ldi	r21, 0x80	; 128
    27fc:	f5 2a       	or	r15, r21
    27fe:	02 c0       	rjmp	.+4      	; 0x2804 <vfprintf+0xe4>
    2800:	98 36       	cpi	r25, 0x68	; 104
    2802:	49 f4       	brne	.+18     	; 0x2816 <vfprintf+0xf6>
    2804:	f2 01       	movw	r30, r4
    2806:	23 fd       	sbrc	r18, 3
    2808:	95 91       	lpm	r25, Z+
    280a:	23 ff       	sbrs	r18, 3
    280c:	91 91       	ld	r25, Z+
    280e:	2f 01       	movw	r4, r30
    2810:	99 23       	and	r25, r25
    2812:	09 f0       	breq	.+2      	; 0x2816 <vfprintf+0xf6>
    2814:	b8 cf       	rjmp	.-144    	; 0x2786 <vfprintf+0x66>
    2816:	89 2f       	mov	r24, r25
    2818:	85 54       	subi	r24, 0x45	; 69
    281a:	83 30       	cpi	r24, 0x03	; 3
    281c:	18 f0       	brcs	.+6      	; 0x2824 <vfprintf+0x104>
    281e:	80 52       	subi	r24, 0x20	; 32
    2820:	83 30       	cpi	r24, 0x03	; 3
    2822:	38 f4       	brcc	.+14     	; 0x2832 <vfprintf+0x112>
    2824:	44 e0       	ldi	r20, 0x04	; 4
    2826:	50 e0       	ldi	r21, 0x00	; 0
    2828:	a4 0e       	add	r10, r20
    282a:	b5 1e       	adc	r11, r21
    282c:	5f e3       	ldi	r21, 0x3F	; 63
    282e:	59 83       	std	Y+1, r21	; 0x01
    2830:	0f c0       	rjmp	.+30     	; 0x2850 <vfprintf+0x130>
    2832:	93 36       	cpi	r25, 0x63	; 99
    2834:	31 f0       	breq	.+12     	; 0x2842 <vfprintf+0x122>
    2836:	93 37       	cpi	r25, 0x73	; 115
    2838:	79 f0       	breq	.+30     	; 0x2858 <vfprintf+0x138>
    283a:	93 35       	cpi	r25, 0x53	; 83
    283c:	09 f0       	breq	.+2      	; 0x2840 <vfprintf+0x120>
    283e:	52 c0       	rjmp	.+164    	; 0x28e4 <vfprintf+0x1c4>
    2840:	1f c0       	rjmp	.+62     	; 0x2880 <vfprintf+0x160>
    2842:	f5 01       	movw	r30, r10
    2844:	80 81       	ld	r24, Z
    2846:	89 83       	std	Y+1, r24	; 0x01
    2848:	42 e0       	ldi	r20, 0x02	; 2
    284a:	50 e0       	ldi	r21, 0x00	; 0
    284c:	a4 0e       	add	r10, r20
    284e:	b5 1e       	adc	r11, r21
    2850:	61 01       	movw	r12, r2
    2852:	01 e0       	ldi	r16, 0x01	; 1
    2854:	10 e0       	ldi	r17, 0x00	; 0
    2856:	11 c0       	rjmp	.+34     	; 0x287a <vfprintf+0x15a>
    2858:	f5 01       	movw	r30, r10
    285a:	c0 80       	ld	r12, Z
    285c:	d1 80       	ldd	r13, Z+1	; 0x01
    285e:	f6 fc       	sbrc	r15, 6
    2860:	03 c0       	rjmp	.+6      	; 0x2868 <vfprintf+0x148>
    2862:	6f ef       	ldi	r22, 0xFF	; 255
    2864:	7f ef       	ldi	r23, 0xFF	; 255
    2866:	02 c0       	rjmp	.+4      	; 0x286c <vfprintf+0x14c>
    2868:	69 2d       	mov	r22, r9
    286a:	70 e0       	ldi	r23, 0x00	; 0
    286c:	42 e0       	ldi	r20, 0x02	; 2
    286e:	50 e0       	ldi	r21, 0x00	; 0
    2870:	a4 0e       	add	r10, r20
    2872:	b5 1e       	adc	r11, r21
    2874:	c6 01       	movw	r24, r12
    2876:	2d d1       	rcall	.+602    	; 0x2ad2 <strnlen>
    2878:	8c 01       	movw	r16, r24
    287a:	5f e7       	ldi	r21, 0x7F	; 127
    287c:	f5 22       	and	r15, r21
    287e:	13 c0       	rjmp	.+38     	; 0x28a6 <vfprintf+0x186>
    2880:	f5 01       	movw	r30, r10
    2882:	c0 80       	ld	r12, Z
    2884:	d1 80       	ldd	r13, Z+1	; 0x01
    2886:	f6 fc       	sbrc	r15, 6
    2888:	03 c0       	rjmp	.+6      	; 0x2890 <vfprintf+0x170>
    288a:	6f ef       	ldi	r22, 0xFF	; 255
    288c:	7f ef       	ldi	r23, 0xFF	; 255
    288e:	02 c0       	rjmp	.+4      	; 0x2894 <vfprintf+0x174>
    2890:	69 2d       	mov	r22, r9
    2892:	70 e0       	ldi	r23, 0x00	; 0
    2894:	42 e0       	ldi	r20, 0x02	; 2
    2896:	50 e0       	ldi	r21, 0x00	; 0
    2898:	a4 0e       	add	r10, r20
    289a:	b5 1e       	adc	r11, r21
    289c:	c6 01       	movw	r24, r12
    289e:	0e d1       	rcall	.+540    	; 0x2abc <strnlen_P>
    28a0:	8c 01       	movw	r16, r24
    28a2:	50 e8       	ldi	r21, 0x80	; 128
    28a4:	f5 2a       	or	r15, r21
    28a6:	f3 fe       	sbrs	r15, 3
    28a8:	06 c0       	rjmp	.+12     	; 0x28b6 <vfprintf+0x196>
    28aa:	18 c0       	rjmp	.+48     	; 0x28dc <vfprintf+0x1bc>
    28ac:	80 e2       	ldi	r24, 0x20	; 32
    28ae:	90 e0       	ldi	r25, 0x00	; 0
    28b0:	b3 01       	movw	r22, r6
    28b2:	1a d1       	rcall	.+564    	; 0x2ae8 <fputc>
    28b4:	ea 94       	dec	r14
    28b6:	8e 2d       	mov	r24, r14
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	08 17       	cp	r16, r24
    28bc:	19 07       	cpc	r17, r25
    28be:	b0 f3       	brcs	.-20     	; 0x28ac <vfprintf+0x18c>
    28c0:	0d c0       	rjmp	.+26     	; 0x28dc <vfprintf+0x1bc>
    28c2:	f6 01       	movw	r30, r12
    28c4:	f7 fc       	sbrc	r15, 7
    28c6:	85 91       	lpm	r24, Z+
    28c8:	f7 fe       	sbrs	r15, 7
    28ca:	81 91       	ld	r24, Z+
    28cc:	6f 01       	movw	r12, r30
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	b3 01       	movw	r22, r6
    28d2:	0a d1       	rcall	.+532    	; 0x2ae8 <fputc>
    28d4:	e1 10       	cpse	r14, r1
    28d6:	ea 94       	dec	r14
    28d8:	01 50       	subi	r16, 0x01	; 1
    28da:	10 40       	sbci	r17, 0x00	; 0
    28dc:	01 15       	cp	r16, r1
    28de:	11 05       	cpc	r17, r1
    28e0:	81 f7       	brne	.-32     	; 0x28c2 <vfprintf+0x1a2>
    28e2:	e2 c0       	rjmp	.+452    	; 0x2aa8 <vfprintf+0x388>
    28e4:	94 36       	cpi	r25, 0x64	; 100
    28e6:	11 f0       	breq	.+4      	; 0x28ec <vfprintf+0x1cc>
    28e8:	99 36       	cpi	r25, 0x69	; 105
    28ea:	61 f5       	brne	.+88     	; 0x2944 <vfprintf+0x224>
    28ec:	f7 fe       	sbrs	r15, 7
    28ee:	08 c0       	rjmp	.+16     	; 0x2900 <vfprintf+0x1e0>
    28f0:	f5 01       	movw	r30, r10
    28f2:	20 81       	ld	r18, Z
    28f4:	31 81       	ldd	r19, Z+1	; 0x01
    28f6:	42 81       	ldd	r20, Z+2	; 0x02
    28f8:	53 81       	ldd	r21, Z+3	; 0x03
    28fa:	84 e0       	ldi	r24, 0x04	; 4
    28fc:	90 e0       	ldi	r25, 0x00	; 0
    28fe:	0a c0       	rjmp	.+20     	; 0x2914 <vfprintf+0x1f4>
    2900:	f5 01       	movw	r30, r10
    2902:	80 81       	ld	r24, Z
    2904:	91 81       	ldd	r25, Z+1	; 0x01
    2906:	9c 01       	movw	r18, r24
    2908:	44 27       	eor	r20, r20
    290a:	37 fd       	sbrc	r19, 7
    290c:	40 95       	com	r20
    290e:	54 2f       	mov	r21, r20
    2910:	82 e0       	ldi	r24, 0x02	; 2
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	a8 0e       	add	r10, r24
    2916:	b9 1e       	adc	r11, r25
    2918:	9f e6       	ldi	r25, 0x6F	; 111
    291a:	f9 22       	and	r15, r25
    291c:	57 ff       	sbrs	r21, 7
    291e:	09 c0       	rjmp	.+18     	; 0x2932 <vfprintf+0x212>
    2920:	50 95       	com	r21
    2922:	40 95       	com	r20
    2924:	30 95       	com	r19
    2926:	21 95       	neg	r18
    2928:	3f 4f       	sbci	r19, 0xFF	; 255
    292a:	4f 4f       	sbci	r20, 0xFF	; 255
    292c:	5f 4f       	sbci	r21, 0xFF	; 255
    292e:	e0 e8       	ldi	r30, 0x80	; 128
    2930:	fe 2a       	or	r15, r30
    2932:	ca 01       	movw	r24, r20
    2934:	b9 01       	movw	r22, r18
    2936:	a1 01       	movw	r20, r2
    2938:	2a e0       	ldi	r18, 0x0A	; 10
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	01 d1       	rcall	.+514    	; 0x2b40 <__ultoa_invert>
    293e:	d8 2e       	mov	r13, r24
    2940:	d2 18       	sub	r13, r2
    2942:	3f c0       	rjmp	.+126    	; 0x29c2 <vfprintf+0x2a2>
    2944:	95 37       	cpi	r25, 0x75	; 117
    2946:	29 f4       	brne	.+10     	; 0x2952 <vfprintf+0x232>
    2948:	1f 2d       	mov	r17, r15
    294a:	1f 7e       	andi	r17, 0xEF	; 239
    294c:	2a e0       	ldi	r18, 0x0A	; 10
    294e:	30 e0       	ldi	r19, 0x00	; 0
    2950:	1d c0       	rjmp	.+58     	; 0x298c <vfprintf+0x26c>
    2952:	1f 2d       	mov	r17, r15
    2954:	19 7f       	andi	r17, 0xF9	; 249
    2956:	9f 36       	cpi	r25, 0x6F	; 111
    2958:	61 f0       	breq	.+24     	; 0x2972 <vfprintf+0x252>
    295a:	90 37       	cpi	r25, 0x70	; 112
    295c:	20 f4       	brcc	.+8      	; 0x2966 <vfprintf+0x246>
    295e:	98 35       	cpi	r25, 0x58	; 88
    2960:	09 f0       	breq	.+2      	; 0x2964 <vfprintf+0x244>
    2962:	a5 c0       	rjmp	.+330    	; 0x2aae <vfprintf+0x38e>
    2964:	0f c0       	rjmp	.+30     	; 0x2984 <vfprintf+0x264>
    2966:	90 37       	cpi	r25, 0x70	; 112
    2968:	39 f0       	breq	.+14     	; 0x2978 <vfprintf+0x258>
    296a:	98 37       	cpi	r25, 0x78	; 120
    296c:	09 f0       	breq	.+2      	; 0x2970 <vfprintf+0x250>
    296e:	9f c0       	rjmp	.+318    	; 0x2aae <vfprintf+0x38e>
    2970:	04 c0       	rjmp	.+8      	; 0x297a <vfprintf+0x25a>
    2972:	28 e0       	ldi	r18, 0x08	; 8
    2974:	30 e0       	ldi	r19, 0x00	; 0
    2976:	0a c0       	rjmp	.+20     	; 0x298c <vfprintf+0x26c>
    2978:	10 61       	ori	r17, 0x10	; 16
    297a:	14 fd       	sbrc	r17, 4
    297c:	14 60       	ori	r17, 0x04	; 4
    297e:	20 e1       	ldi	r18, 0x10	; 16
    2980:	30 e0       	ldi	r19, 0x00	; 0
    2982:	04 c0       	rjmp	.+8      	; 0x298c <vfprintf+0x26c>
    2984:	14 fd       	sbrc	r17, 4
    2986:	16 60       	ori	r17, 0x06	; 6
    2988:	20 e1       	ldi	r18, 0x10	; 16
    298a:	32 e0       	ldi	r19, 0x02	; 2
    298c:	17 ff       	sbrs	r17, 7
    298e:	08 c0       	rjmp	.+16     	; 0x29a0 <vfprintf+0x280>
    2990:	f5 01       	movw	r30, r10
    2992:	60 81       	ld	r22, Z
    2994:	71 81       	ldd	r23, Z+1	; 0x01
    2996:	82 81       	ldd	r24, Z+2	; 0x02
    2998:	93 81       	ldd	r25, Z+3	; 0x03
    299a:	44 e0       	ldi	r20, 0x04	; 4
    299c:	50 e0       	ldi	r21, 0x00	; 0
    299e:	08 c0       	rjmp	.+16     	; 0x29b0 <vfprintf+0x290>
    29a0:	f5 01       	movw	r30, r10
    29a2:	80 81       	ld	r24, Z
    29a4:	91 81       	ldd	r25, Z+1	; 0x01
    29a6:	bc 01       	movw	r22, r24
    29a8:	80 e0       	ldi	r24, 0x00	; 0
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	42 e0       	ldi	r20, 0x02	; 2
    29ae:	50 e0       	ldi	r21, 0x00	; 0
    29b0:	a4 0e       	add	r10, r20
    29b2:	b5 1e       	adc	r11, r21
    29b4:	a1 01       	movw	r20, r2
    29b6:	c4 d0       	rcall	.+392    	; 0x2b40 <__ultoa_invert>
    29b8:	d8 2e       	mov	r13, r24
    29ba:	d2 18       	sub	r13, r2
    29bc:	8f e7       	ldi	r24, 0x7F	; 127
    29be:	f8 2e       	mov	r15, r24
    29c0:	f1 22       	and	r15, r17
    29c2:	f6 fe       	sbrs	r15, 6
    29c4:	0b c0       	rjmp	.+22     	; 0x29dc <vfprintf+0x2bc>
    29c6:	5e ef       	ldi	r21, 0xFE	; 254
    29c8:	f5 22       	and	r15, r21
    29ca:	d9 14       	cp	r13, r9
    29cc:	38 f4       	brcc	.+14     	; 0x29dc <vfprintf+0x2bc>
    29ce:	f4 fe       	sbrs	r15, 4
    29d0:	07 c0       	rjmp	.+14     	; 0x29e0 <vfprintf+0x2c0>
    29d2:	f2 fc       	sbrc	r15, 2
    29d4:	05 c0       	rjmp	.+10     	; 0x29e0 <vfprintf+0x2c0>
    29d6:	8f ee       	ldi	r24, 0xEF	; 239
    29d8:	f8 22       	and	r15, r24
    29da:	02 c0       	rjmp	.+4      	; 0x29e0 <vfprintf+0x2c0>
    29dc:	1d 2d       	mov	r17, r13
    29de:	01 c0       	rjmp	.+2      	; 0x29e2 <vfprintf+0x2c2>
    29e0:	19 2d       	mov	r17, r9
    29e2:	f4 fe       	sbrs	r15, 4
    29e4:	0d c0       	rjmp	.+26     	; 0x2a00 <vfprintf+0x2e0>
    29e6:	fe 01       	movw	r30, r28
    29e8:	ed 0d       	add	r30, r13
    29ea:	f1 1d       	adc	r31, r1
    29ec:	80 81       	ld	r24, Z
    29ee:	80 33       	cpi	r24, 0x30	; 48
    29f0:	19 f4       	brne	.+6      	; 0x29f8 <vfprintf+0x2d8>
    29f2:	99 ee       	ldi	r25, 0xE9	; 233
    29f4:	f9 22       	and	r15, r25
    29f6:	08 c0       	rjmp	.+16     	; 0x2a08 <vfprintf+0x2e8>
    29f8:	1f 5f       	subi	r17, 0xFF	; 255
    29fa:	f2 fe       	sbrs	r15, 2
    29fc:	05 c0       	rjmp	.+10     	; 0x2a08 <vfprintf+0x2e8>
    29fe:	03 c0       	rjmp	.+6      	; 0x2a06 <vfprintf+0x2e6>
    2a00:	8f 2d       	mov	r24, r15
    2a02:	86 78       	andi	r24, 0x86	; 134
    2a04:	09 f0       	breq	.+2      	; 0x2a08 <vfprintf+0x2e8>
    2a06:	1f 5f       	subi	r17, 0xFF	; 255
    2a08:	0f 2d       	mov	r16, r15
    2a0a:	f3 fc       	sbrc	r15, 3
    2a0c:	13 c0       	rjmp	.+38     	; 0x2a34 <vfprintf+0x314>
    2a0e:	f0 fe       	sbrs	r15, 0
    2a10:	0e c0       	rjmp	.+28     	; 0x2a2e <vfprintf+0x30e>
    2a12:	1e 15       	cp	r17, r14
    2a14:	10 f0       	brcs	.+4      	; 0x2a1a <vfprintf+0x2fa>
    2a16:	9d 2c       	mov	r9, r13
    2a18:	0a c0       	rjmp	.+20     	; 0x2a2e <vfprintf+0x30e>
    2a1a:	9d 2c       	mov	r9, r13
    2a1c:	9e 0c       	add	r9, r14
    2a1e:	91 1a       	sub	r9, r17
    2a20:	1e 2d       	mov	r17, r14
    2a22:	05 c0       	rjmp	.+10     	; 0x2a2e <vfprintf+0x30e>
    2a24:	80 e2       	ldi	r24, 0x20	; 32
    2a26:	90 e0       	ldi	r25, 0x00	; 0
    2a28:	b3 01       	movw	r22, r6
    2a2a:	5e d0       	rcall	.+188    	; 0x2ae8 <fputc>
    2a2c:	1f 5f       	subi	r17, 0xFF	; 255
    2a2e:	1e 15       	cp	r17, r14
    2a30:	c8 f3       	brcs	.-14     	; 0x2a24 <vfprintf+0x304>
    2a32:	04 c0       	rjmp	.+8      	; 0x2a3c <vfprintf+0x31c>
    2a34:	1e 15       	cp	r17, r14
    2a36:	10 f4       	brcc	.+4      	; 0x2a3c <vfprintf+0x31c>
    2a38:	e1 1a       	sub	r14, r17
    2a3a:	01 c0       	rjmp	.+2      	; 0x2a3e <vfprintf+0x31e>
    2a3c:	ee 24       	eor	r14, r14
    2a3e:	04 ff       	sbrs	r16, 4
    2a40:	0e c0       	rjmp	.+28     	; 0x2a5e <vfprintf+0x33e>
    2a42:	80 e3       	ldi	r24, 0x30	; 48
    2a44:	90 e0       	ldi	r25, 0x00	; 0
    2a46:	b3 01       	movw	r22, r6
    2a48:	4f d0       	rcall	.+158    	; 0x2ae8 <fputc>
    2a4a:	02 ff       	sbrs	r16, 2
    2a4c:	1b c0       	rjmp	.+54     	; 0x2a84 <vfprintf+0x364>
    2a4e:	01 fd       	sbrc	r16, 1
    2a50:	03 c0       	rjmp	.+6      	; 0x2a58 <vfprintf+0x338>
    2a52:	88 e7       	ldi	r24, 0x78	; 120
    2a54:	90 e0       	ldi	r25, 0x00	; 0
    2a56:	0e c0       	rjmp	.+28     	; 0x2a74 <vfprintf+0x354>
    2a58:	88 e5       	ldi	r24, 0x58	; 88
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	0b c0       	rjmp	.+22     	; 0x2a74 <vfprintf+0x354>
    2a5e:	80 2f       	mov	r24, r16
    2a60:	86 78       	andi	r24, 0x86	; 134
    2a62:	81 f0       	breq	.+32     	; 0x2a84 <vfprintf+0x364>
    2a64:	01 ff       	sbrs	r16, 1
    2a66:	02 c0       	rjmp	.+4      	; 0x2a6c <vfprintf+0x34c>
    2a68:	8b e2       	ldi	r24, 0x2B	; 43
    2a6a:	01 c0       	rjmp	.+2      	; 0x2a6e <vfprintf+0x34e>
    2a6c:	80 e2       	ldi	r24, 0x20	; 32
    2a6e:	f7 fc       	sbrc	r15, 7
    2a70:	8d e2       	ldi	r24, 0x2D	; 45
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	b3 01       	movw	r22, r6
    2a76:	38 d0       	rcall	.+112    	; 0x2ae8 <fputc>
    2a78:	05 c0       	rjmp	.+10     	; 0x2a84 <vfprintf+0x364>
    2a7a:	80 e3       	ldi	r24, 0x30	; 48
    2a7c:	90 e0       	ldi	r25, 0x00	; 0
    2a7e:	b3 01       	movw	r22, r6
    2a80:	33 d0       	rcall	.+102    	; 0x2ae8 <fputc>
    2a82:	9a 94       	dec	r9
    2a84:	d9 14       	cp	r13, r9
    2a86:	c8 f3       	brcs	.-14     	; 0x2a7a <vfprintf+0x35a>
    2a88:	da 94       	dec	r13
    2a8a:	f1 01       	movw	r30, r2
    2a8c:	ed 0d       	add	r30, r13
    2a8e:	f1 1d       	adc	r31, r1
    2a90:	80 81       	ld	r24, Z
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	b3 01       	movw	r22, r6
    2a96:	28 d0       	rcall	.+80     	; 0x2ae8 <fputc>
    2a98:	dd 20       	and	r13, r13
    2a9a:	b1 f7       	brne	.-20     	; 0x2a88 <vfprintf+0x368>
    2a9c:	05 c0       	rjmp	.+10     	; 0x2aa8 <vfprintf+0x388>
    2a9e:	80 e2       	ldi	r24, 0x20	; 32
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	b3 01       	movw	r22, r6
    2aa4:	21 d0       	rcall	.+66     	; 0x2ae8 <fputc>
    2aa6:	ea 94       	dec	r14
    2aa8:	ee 20       	and	r14, r14
    2aaa:	c9 f7       	brne	.-14     	; 0x2a9e <vfprintf+0x37e>
    2aac:	50 ce       	rjmp	.-864    	; 0x274e <vfprintf+0x2e>
    2aae:	f3 01       	movw	r30, r6
    2ab0:	66 81       	ldd	r22, Z+6	; 0x06
    2ab2:	77 81       	ldd	r23, Z+7	; 0x07
    2ab4:	cb 01       	movw	r24, r22
    2ab6:	2b 96       	adiw	r28, 0x0b	; 11
    2ab8:	e2 e1       	ldi	r30, 0x12	; 18
    2aba:	f6 cd       	rjmp	.-1044   	; 0x26a8 <__epilogue_restores__>

00002abc <strnlen_P>:
    2abc:	fc 01       	movw	r30, r24
    2abe:	05 90       	lpm	r0, Z+
    2ac0:	61 50       	subi	r22, 0x01	; 1
    2ac2:	70 40       	sbci	r23, 0x00	; 0
    2ac4:	01 10       	cpse	r0, r1
    2ac6:	d8 f7       	brcc	.-10     	; 0x2abe <strnlen_P+0x2>
    2ac8:	80 95       	com	r24
    2aca:	90 95       	com	r25
    2acc:	8e 0f       	add	r24, r30
    2ace:	9f 1f       	adc	r25, r31
    2ad0:	08 95       	ret

00002ad2 <strnlen>:
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	61 50       	subi	r22, 0x01	; 1
    2ad6:	70 40       	sbci	r23, 0x00	; 0
    2ad8:	01 90       	ld	r0, Z+
    2ada:	01 10       	cpse	r0, r1
    2adc:	d8 f7       	brcc	.-10     	; 0x2ad4 <strnlen+0x2>
    2ade:	80 95       	com	r24
    2ae0:	90 95       	com	r25
    2ae2:	8e 0f       	add	r24, r30
    2ae4:	9f 1f       	adc	r25, r31
    2ae6:	08 95       	ret

00002ae8 <fputc>:
    2ae8:	0f 93       	push	r16
    2aea:	1f 93       	push	r17
    2aec:	cf 93       	push	r28
    2aee:	df 93       	push	r29
    2af0:	8c 01       	movw	r16, r24
    2af2:	eb 01       	movw	r28, r22
    2af4:	8b 81       	ldd	r24, Y+3	; 0x03
    2af6:	81 ff       	sbrs	r24, 1
    2af8:	1b c0       	rjmp	.+54     	; 0x2b30 <fputc+0x48>
    2afa:	82 ff       	sbrs	r24, 2
    2afc:	0d c0       	rjmp	.+26     	; 0x2b18 <fputc+0x30>
    2afe:	2e 81       	ldd	r18, Y+6	; 0x06
    2b00:	3f 81       	ldd	r19, Y+7	; 0x07
    2b02:	8c 81       	ldd	r24, Y+4	; 0x04
    2b04:	9d 81       	ldd	r25, Y+5	; 0x05
    2b06:	28 17       	cp	r18, r24
    2b08:	39 07       	cpc	r19, r25
    2b0a:	64 f4       	brge	.+24     	; 0x2b24 <fputc+0x3c>
    2b0c:	e8 81       	ld	r30, Y
    2b0e:	f9 81       	ldd	r31, Y+1	; 0x01
    2b10:	01 93       	st	Z+, r16
    2b12:	f9 83       	std	Y+1, r31	; 0x01
    2b14:	e8 83       	st	Y, r30
    2b16:	06 c0       	rjmp	.+12     	; 0x2b24 <fputc+0x3c>
    2b18:	e8 85       	ldd	r30, Y+8	; 0x08
    2b1a:	f9 85       	ldd	r31, Y+9	; 0x09
    2b1c:	80 2f       	mov	r24, r16
    2b1e:	09 95       	icall
    2b20:	89 2b       	or	r24, r25
    2b22:	31 f4       	brne	.+12     	; 0x2b30 <fputc+0x48>
    2b24:	8e 81       	ldd	r24, Y+6	; 0x06
    2b26:	9f 81       	ldd	r25, Y+7	; 0x07
    2b28:	01 96       	adiw	r24, 0x01	; 1
    2b2a:	9f 83       	std	Y+7, r25	; 0x07
    2b2c:	8e 83       	std	Y+6, r24	; 0x06
    2b2e:	02 c0       	rjmp	.+4      	; 0x2b34 <fputc+0x4c>
    2b30:	0f ef       	ldi	r16, 0xFF	; 255
    2b32:	1f ef       	ldi	r17, 0xFF	; 255
    2b34:	c8 01       	movw	r24, r16
    2b36:	df 91       	pop	r29
    2b38:	cf 91       	pop	r28
    2b3a:	1f 91       	pop	r17
    2b3c:	0f 91       	pop	r16
    2b3e:	08 95       	ret

00002b40 <__ultoa_invert>:
    2b40:	fa 01       	movw	r30, r20
    2b42:	aa 27       	eor	r26, r26
    2b44:	28 30       	cpi	r18, 0x08	; 8
    2b46:	51 f1       	breq	.+84     	; 0x2b9c <__ultoa_invert+0x5c>
    2b48:	20 31       	cpi	r18, 0x10	; 16
    2b4a:	81 f1       	breq	.+96     	; 0x2bac <__ultoa_invert+0x6c>
    2b4c:	e8 94       	clt
    2b4e:	6f 93       	push	r22
    2b50:	6e 7f       	andi	r22, 0xFE	; 254
    2b52:	6e 5f       	subi	r22, 0xFE	; 254
    2b54:	7f 4f       	sbci	r23, 0xFF	; 255
    2b56:	8f 4f       	sbci	r24, 0xFF	; 255
    2b58:	9f 4f       	sbci	r25, 0xFF	; 255
    2b5a:	af 4f       	sbci	r26, 0xFF	; 255
    2b5c:	b1 e0       	ldi	r27, 0x01	; 1
    2b5e:	3e d0       	rcall	.+124    	; 0x2bdc <__ultoa_invert+0x9c>
    2b60:	b4 e0       	ldi	r27, 0x04	; 4
    2b62:	3c d0       	rcall	.+120    	; 0x2bdc <__ultoa_invert+0x9c>
    2b64:	67 0f       	add	r22, r23
    2b66:	78 1f       	adc	r23, r24
    2b68:	89 1f       	adc	r24, r25
    2b6a:	9a 1f       	adc	r25, r26
    2b6c:	a1 1d       	adc	r26, r1
    2b6e:	68 0f       	add	r22, r24
    2b70:	79 1f       	adc	r23, r25
    2b72:	8a 1f       	adc	r24, r26
    2b74:	91 1d       	adc	r25, r1
    2b76:	a1 1d       	adc	r26, r1
    2b78:	6a 0f       	add	r22, r26
    2b7a:	71 1d       	adc	r23, r1
    2b7c:	81 1d       	adc	r24, r1
    2b7e:	91 1d       	adc	r25, r1
    2b80:	a1 1d       	adc	r26, r1
    2b82:	20 d0       	rcall	.+64     	; 0x2bc4 <__ultoa_invert+0x84>
    2b84:	09 f4       	brne	.+2      	; 0x2b88 <__ultoa_invert+0x48>
    2b86:	68 94       	set
    2b88:	3f 91       	pop	r19
    2b8a:	2a e0       	ldi	r18, 0x0A	; 10
    2b8c:	26 9f       	mul	r18, r22
    2b8e:	11 24       	eor	r1, r1
    2b90:	30 19       	sub	r19, r0
    2b92:	30 5d       	subi	r19, 0xD0	; 208
    2b94:	31 93       	st	Z+, r19
    2b96:	de f6       	brtc	.-74     	; 0x2b4e <__ultoa_invert+0xe>
    2b98:	cf 01       	movw	r24, r30
    2b9a:	08 95       	ret
    2b9c:	46 2f       	mov	r20, r22
    2b9e:	47 70       	andi	r20, 0x07	; 7
    2ba0:	40 5d       	subi	r20, 0xD0	; 208
    2ba2:	41 93       	st	Z+, r20
    2ba4:	b3 e0       	ldi	r27, 0x03	; 3
    2ba6:	0f d0       	rcall	.+30     	; 0x2bc6 <__ultoa_invert+0x86>
    2ba8:	c9 f7       	brne	.-14     	; 0x2b9c <__ultoa_invert+0x5c>
    2baa:	f6 cf       	rjmp	.-20     	; 0x2b98 <__ultoa_invert+0x58>
    2bac:	46 2f       	mov	r20, r22
    2bae:	4f 70       	andi	r20, 0x0F	; 15
    2bb0:	40 5d       	subi	r20, 0xD0	; 208
    2bb2:	4a 33       	cpi	r20, 0x3A	; 58
    2bb4:	18 f0       	brcs	.+6      	; 0x2bbc <__ultoa_invert+0x7c>
    2bb6:	49 5d       	subi	r20, 0xD9	; 217
    2bb8:	31 fd       	sbrc	r19, 1
    2bba:	40 52       	subi	r20, 0x20	; 32
    2bbc:	41 93       	st	Z+, r20
    2bbe:	02 d0       	rcall	.+4      	; 0x2bc4 <__ultoa_invert+0x84>
    2bc0:	a9 f7       	brne	.-22     	; 0x2bac <__ultoa_invert+0x6c>
    2bc2:	ea cf       	rjmp	.-44     	; 0x2b98 <__ultoa_invert+0x58>
    2bc4:	b4 e0       	ldi	r27, 0x04	; 4
    2bc6:	a6 95       	lsr	r26
    2bc8:	97 95       	ror	r25
    2bca:	87 95       	ror	r24
    2bcc:	77 95       	ror	r23
    2bce:	67 95       	ror	r22
    2bd0:	ba 95       	dec	r27
    2bd2:	c9 f7       	brne	.-14     	; 0x2bc6 <__ultoa_invert+0x86>
    2bd4:	00 97       	sbiw	r24, 0x00	; 0
    2bd6:	61 05       	cpc	r22, r1
    2bd8:	71 05       	cpc	r23, r1
    2bda:	08 95       	ret
    2bdc:	9b 01       	movw	r18, r22
    2bde:	ac 01       	movw	r20, r24
    2be0:	0a 2e       	mov	r0, r26
    2be2:	06 94       	lsr	r0
    2be4:	57 95       	ror	r21
    2be6:	47 95       	ror	r20
    2be8:	37 95       	ror	r19
    2bea:	27 95       	ror	r18
    2bec:	ba 95       	dec	r27
    2bee:	c9 f7       	brne	.-14     	; 0x2be2 <__ultoa_invert+0xa2>
    2bf0:	62 0f       	add	r22, r18
    2bf2:	73 1f       	adc	r23, r19
    2bf4:	84 1f       	adc	r24, r20
    2bf6:	95 1f       	adc	r25, r21
    2bf8:	a0 1d       	adc	r26, r0
    2bfa:	08 95       	ret

00002bfc <_exit>:
    2bfc:	f8 94       	cli

00002bfe <__stop_program>:
    2bfe:	ff cf       	rjmp	.-2      	; 0x2bfe <__stop_program>
